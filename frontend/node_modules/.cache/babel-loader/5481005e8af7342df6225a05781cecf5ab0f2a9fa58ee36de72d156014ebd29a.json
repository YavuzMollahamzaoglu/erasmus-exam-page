{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/WordMatchingGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Paper, Typography, Button, Alert, Fade } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Words will come from backend (MySQL via Prisma)\n\nconst formatTime = secs => {\n  const m = Math.floor(secs / 60).toString().padStart(2, '0');\n  const s = (secs % 60).toString().padStart(2, '0');\n  return `${m}:${s}`;\n};\nconst shuffle = arr => {\n  const a = [...arr];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\nexport default function WordMatchingGame() {\n  _s();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const level = (searchParams.get('level') || 'a1').toUpperCase();\n  const setId = searchParams.get('setId');\n  const GAME_WORD_COUNT = 15; // each game will have 15 words\n\n  const [pool, setPool] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [matched, setMatched] = useState(0);\n  const [selectedWordId, setSelectedWordId] = useState(null); // tap support\n  const [elapsed, setElapsed] = useState(0); // stopwatch seconds (hidden while playing)\n  const [playing, setPlaying] = useState(true);\n  const [gameCompleted, setGameCompleted] = useState(false);\n  const [wrongMsg, setWrongMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  // Prepare game by fetching: if setId is provided, use that set; otherwise choose 15 random from words API\n  const initGame = async () => {\n    try {\n      let pairs = [];\n      if (setId) {\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets/${setId}`, {\n          cache: 'no-store'\n        });\n        const data = await res.json();\n        const items = Array.isArray(data === null || data === void 0 ? void 0 : data.items) ? data.items : [];\n        pairs = items.slice(0, GAME_WORD_COUNT).map((w, idx) => ({\n          id: idx + 1,\n          english: w.english,\n          turkish: w.turkish\n        }));\n      } else {\n        const apiLevel = ['A1', 'A2', 'B1', 'B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/words?level=${apiLevel}&limit=200`, {\n          cache: 'no-store'\n        });\n        const data = await res.json();\n        const raw = Array.isArray(data === null || data === void 0 ? void 0 : data.words) ? data.words : [];\n        const chosen = shuffle(raw).slice(0, GAME_WORD_COUNT);\n        pairs = chosen.map((w, idx) => ({\n          id: idx + 1,\n          english: w.english,\n          turkish: w.turkish\n        }));\n      }\n      const newPool = shuffle(pairs.map(p => ({\n        id: p.id,\n        text: p.english,\n        used: false\n      })));\n      const newTargets = pairs.map(p => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    } catch (e) {\n      // Fallback: basic static list if API is unreachable\n      const fallback = [{\n        id: 1,\n        turkish: 'merhaba',\n        english: 'hello'\n      }, {\n        id: 2,\n        turkish: 'dünya',\n        english: 'world'\n      }, {\n        id: 3,\n        turkish: 'aile',\n        english: 'family'\n      }, {\n        id: 4,\n        turkish: 'okul',\n        english: 'school'\n      }, {\n        id: 5,\n        turkish: 'kitap',\n        english: 'book'\n      }, {\n        id: 6,\n        turkish: 'su',\n        english: 'water'\n      }, {\n        id: 7,\n        turkish: 'ev',\n        english: 'house'\n      }, {\n        id: 8,\n        turkish: 'araba',\n        english: 'car'\n      }, {\n        id: 9,\n        turkish: 'yemek',\n        english: 'food'\n      }, {\n        id: 10,\n        turkish: 'zaman',\n        english: 'time'\n      }, {\n        id: 11,\n        turkish: 'para',\n        english: 'money'\n      }, {\n        id: 12,\n        turkish: 'çalışma',\n        english: 'work'\n      }, {\n        id: 13,\n        turkish: 'oyun',\n        english: 'game'\n      }, {\n        id: 14,\n        turkish: 'müzik',\n        english: 'music'\n      }];\n      const pairs = shuffle(fallback).slice(0, GAME_WORD_COUNT).map((p, i) => ({\n        ...p,\n        id: i + 1\n      }));\n      const newPool = shuffle(pairs.map(p => ({\n        id: p.id,\n        text: p.english,\n        used: false\n      })));\n      const newTargets = pairs.map(p => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    }\n  };\n  useEffect(() => {\n    initGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Stopwatch (hidden while playing)\n  useEffect(() => {\n    if (!playing || gameCompleted) return;\n    const t = setInterval(() => setElapsed(c => c + 1), 1000);\n    return () => clearInterval(t);\n  }, [playing, gameCompleted]);\n\n  // Drag handlers\n  const onDragStart = (e, wordId) => {\n    if (!playing) return;\n    e.dataTransfer.setData('text/plain', String(wordId));\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const onDragOver = e => {\n    if (!playing) return;\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const tryMatch = (targetId, wordId) => {\n    var _targets$find, _pool$find;\n    if (!playing) return;\n    if ((_targets$find = targets.find(t => t.id === targetId)) !== null && _targets$find !== void 0 && _targets$find.matched) return;\n    if ((_pool$find = pool.find(p => p.id === wordId)) !== null && _pool$find !== void 0 && _pool$find.used) return;\n    if (targetId === wordId) {\n      // success\n      setTargets(prev => prev.map(t => t.id === targetId ? {\n        ...t,\n        matched: true\n      } : t));\n      setPool(prev => prev.map(w => w.id === wordId ? {\n        ...w,\n        used: true\n      } : w));\n      setMatched(m => m + 1);\n      setSelectedWordId(null);\n      setSuccessMsg(true);\n      setTimeout(() => setSuccessMsg(false), 800);\n    } else {\n      // wrong\n      setTargets(prev => prev.map(t => t.id === targetId ? {\n        ...t,\n        wrongFlash: true\n      } : t));\n      setWrongMsg(true);\n      setTimeout(() => {\n        setWrongMsg(false);\n        setTargets(prev => prev.map(t => ({\n          ...t,\n          wrongFlash: false\n        })));\n      }, 650);\n    }\n  };\n  const onDrop = (e, targetId) => {\n    if (!playing) return;\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const wordId = Number(data);\n    if (!Number.isFinite(wordId)) return;\n    tryMatch(targetId, wordId);\n  };\n\n  // Tap/click support\n  const handleWordClick = wordId => {\n    if (!playing) return;\n    const word = pool.find(w => w.id === wordId);\n    if (!word || word.used) return;\n    setSelectedWordId(prev => prev === wordId ? null : wordId);\n  };\n  const handleTargetClick = targetId => {\n    if (!playing) return;\n    if (selectedWordId == null) return;\n    tryMatch(targetId, selectedWordId);\n  };\n\n  // Complete detection\n  useEffect(() => {\n    if (targets.length > 0 && matched === targets.length) {\n      setPlaying(false);\n      setGameCompleted(true);\n    }\n  }, [matched, targets.length]);\n  const reset = () => initGame();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: '#b2dfdb',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      pb: {\n        xs: 12,\n        md: 16\n      },\n      pt: 0,\n      px: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        p: 0,\n        borderRadius: 4,\n        minWidth: 340,\n        width: '100%',\n        maxWidth: 1000,\n        mt: {\n          xs: 1,\n          md: '15px'\n        },\n        background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n          color: '#fff',\n          p: {\n            xs: 3,\n            md: 4\n          },\n          borderTopLeftRadius: 'inherit',\n          borderTopRightRadius: 'inherit',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 30\n          }, this),\n          onClick: () => navigate('/kelime-eslestirme'),\n          sx: {\n            color: '#fff',\n            fontWeight: 600\n          },\n          children: \"Geri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            fontWeight: 700,\n            mb: 1,\n            children: \"Kelime E\\u015Fle\\u015Ftirme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              opacity: 0.9\n            },\n            children: [\"Seviye: \", level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 30\n          }, this),\n          onClick: reset,\n          sx: {\n            color: '#fff',\n            fontWeight: 600\n          },\n          children: \"Yenile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          pt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"#00695c\",\n          fontWeight: 600,\n          children: [\"\\u0130lerleme: \", matched, \"/\", targets.length || GAME_WORD_COUNT]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          px: 3\n        },\n        children: [wrongMsg && /*#__PURE__*/_jsxDEV(Fade, {\n          in: wrongMsg,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 45\n            }, this),\n            sx: {\n              mb: 2,\n              borderRadius: 2\n            },\n            children: \"Yanl\\u0131\\u015F e\\u015Fle\\u015Fme! Tekrar deneyin.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), successMsg && /*#__PURE__*/_jsxDEV(Fade, {\n          in: successMsg,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 47\n            }, this),\n            sx: {\n              mb: 2,\n              borderRadius: 2\n            },\n            children: \"Do\\u011Fru! Devam.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), gameCompleted && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 45\n          }, this),\n          sx: {\n            mb: 3,\n            borderRadius: 2,\n            fontSize: 16\n          },\n          children: [\"Tebrikler! T\\xFCm e\\u015Fle\\u015Fmeler tamamland\\u0131. S\\xFCreniz: \", formatTime(elapsed)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          px: 3,\n          pb: 1\n        },\n        children: (() => {\n          const half = Math.ceil(pool.length / 2);\n          const rows = [pool.slice(0, half), pool.slice(half)];\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: rows.map((row, idx) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'grid',\n                gridAutoFlow: 'column',\n                gridAutoColumns: '1fr',\n                gap: 1.5,\n                overflowX: {\n                  xs: 'auto',\n                  md: 'visible'\n                },\n                pb: 1\n              },\n              children: row.map(w => /*#__PURE__*/_jsxDEV(Box, {\n                draggable: !w.used && playing,\n                onDragStart: e => onDragStart(e, w.id),\n                onClick: () => handleWordClick(w.id),\n                sx: {\n                  userSelect: 'none',\n                  cursor: w.used || !playing ? 'default' : 'grab',\n                  opacity: w.used ? 0.35 : 1,\n                  borderRadius: 2,\n                  p: 1.2,\n                  textAlign: 'center',\n                  color: '#fff',\n                  fontWeight: 700,\n                  fontSize: {\n                    xs: 12,\n                    sm: 14\n                  },\n                  boxShadow: '0 1px 4px rgba(0,0,0,0.12)',\n                  outline: selectedWordId === w.id ? '3px solid rgba(0, 184, 148, 0.9)' : 'none',\n                  background: `linear-gradient(135deg, ${['#42a5f5', '#ffca28', '#ab47bc', '#26a69a', '#ef5350', '#8d6e63', '#66bb6a'][w.id % 7]} 0%, rgba(255,255,255,0.15) 100%)`,\n                  transition: 'transform .15s ease',\n                  '&:active': {\n                    transform: 'scale(0.98)'\n                  },\n                  minWidth: 88\n                },\n                children: w.text\n              }, w.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 23\n              }, this))\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this))\n          }, void 0, false);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          pt: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridTemplateColumns: {\n              xs: 'repeat(2, 1fr)',\n              sm: 'repeat(3, 1fr)',\n              md: 'repeat(5, 1fr)'\n            },\n            gap: 2\n          },\n          children: targets.map(t => /*#__PURE__*/_jsxDEV(Box, {\n            onDragOver: onDragOver,\n            onDrop: e => onDrop(e, t.id),\n            onClick: () => handleTargetClick(t.id),\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%',\n                height: 54,\n                borderRadius: 2,\n                border: t.matched ? '2px solid #4CAF50' : t.wrongFlash ? '2px solid #ef5350' : selectedWordId != null ? '2px dashed #00b894' : '2px dashed rgba(0,0,0,0.25)',\n                background: t.matched ? 'linear-gradient(135deg, #4CAF50 0%, #66BB6A 100%)' : 'rgba(0,0,0,0.03)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: t.matched ? '#fff' : 'inherit',\n                fontWeight: 700,\n                textTransform: 'uppercase',\n                letterSpacing: 0.4,\n                transition: 'all .15s ease'\n              },\n              children: t.matched ? t.english : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontWeight: 700,\n                color: '#37474F',\n                textAlign: 'center'\n              },\n              children: t.turkish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            gap: 2,\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => navigate('/kelime-eslestirme'),\n            sx: {\n              borderColor: '#00b894',\n              color: '#00695c',\n              fontWeight: 600,\n              borderRadius: 2,\n              px: 3,\n              '&:hover': {\n                borderColor: '#00cec9',\n                backgroundColor: 'rgba(0, 184, 148, 0.04)'\n              }\n            },\n            children: \"Seviye De\\u011Fi\\u015Ftir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), gameCompleted && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: reset,\n            sx: {\n              background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)',\n              color: '#fff',\n              fontWeight: 600,\n              borderRadius: 2,\n              px: 3,\n              '&:hover': {\n                background: 'linear-gradient(90deg, #00cec9 0%, #00b894 100%)'\n              }\n            },\n            children: \"Tekrar Oyna\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(WordMatchingGame, \"oJxgPLd9Gvx7RdDUMF3vKs6Vao8=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = WordMatchingGame;\nvar _c;\n$RefreshReg$(_c, \"WordMatchingGame\");","map":{"version":3,"names":["React","useEffect","useState","Box","Paper","Typography","Button","Alert","Fade","ArrowBackIcon","RefreshIcon","CheckCircleIcon","ErrorIcon","useNavigate","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","formatTime","secs","m","Math","floor","toString","padStart","s","shuffle","arr","a","i","length","j","random","WordMatchingGame","_s","navigate","searchParams","level","get","toUpperCase","setId","GAME_WORD_COUNT","pool","setPool","targets","setTargets","matched","setMatched","selectedWordId","setSelectedWordId","elapsed","setElapsed","playing","setPlaying","gameCompleted","setGameCompleted","wrongMsg","setWrongMsg","successMsg","setSuccessMsg","initGame","pairs","res","fetch","cache","data","json","items","Array","isArray","slice","map","w","idx","id","english","turkish","apiLevel","includes","raw","words","chosen","newPool","p","text","used","newTargets","wrongFlash","e","fallback","t","setInterval","c","clearInterval","onDragStart","wordId","dataTransfer","setData","String","effectAllowed","onDragOver","preventDefault","dropEffect","tryMatch","targetId","_targets$find","_pool$find","find","prev","setTimeout","onDrop","getData","Number","isFinite","handleWordClick","word","handleTargetClick","reset","sx","minHeight","background","display","flexDirection","alignItems","pb","xs","md","pt","px","children","elevation","borderRadius","minWidth","width","maxWidth","mt","backdropFilter","border","boxShadow","color","borderTopLeftRadius","borderTopRightRadius","justifyContent","position","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontWeight","textAlign","flex","variant","mb","opacity","in","severity","icon","fontSize","half","ceil","rows","row","gridAutoFlow","gridAutoColumns","gap","overflowX","draggable","userSelect","cursor","sm","outline","transition","transform","gridTemplateColumns","height","textTransform","letterSpacing","borderColor","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/WordMatchingGame.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Paper, Typography, Button, Alert, Fade } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\ntype WordPair = {\n  id: number; // internal sequential id for matching\n  turkish: string;\n  english: string;\n};\n\ntype PoolWord = {\n  id: number; // pair id\n  text: string; // english\n  used: boolean;\n};\n\ntype Target = {\n  id: number; // pair id\n  turkish: string;\n  english: string; // reveal when matched\n  matched: boolean;\n  wrongFlash: boolean;\n};\n\n// Words will come from backend (MySQL via Prisma)\n\nconst formatTime = (secs: number) => {\n  const m = Math.floor(secs / 60)\n    .toString()\n    .padStart(2, '0');\n  const s = (secs % 60)\n    .toString()\n    .padStart(2, '0');\n  return `${m}:${s}`;\n};\n\nconst shuffle = <T,>(arr: T[]): T[] => {\n  const a = [...arr];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\n\nexport default function WordMatchingGame() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const level = (searchParams.get('level') || 'a1').toUpperCase();\n  const setId = searchParams.get('setId');\n\n  const GAME_WORD_COUNT = 15; // each game will have 15 words\n\n  const [pool, setPool] = useState<PoolWord[]>([]);\n  const [targets, setTargets] = useState<Target[]>([]);\n  const [matched, setMatched] = useState(0);\n  const [selectedWordId, setSelectedWordId] = useState<number | null>(null); // tap support\n  const [elapsed, setElapsed] = useState(0); // stopwatch seconds (hidden while playing)\n  const [playing, setPlaying] = useState(true);\n  const [gameCompleted, setGameCompleted] = useState(false);\n  const [wrongMsg, setWrongMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  // Prepare game by fetching: if setId is provided, use that set; otherwise choose 15 random from words API\n  const initGame = async () => {\n    try {\n      let pairs: WordPair[] = [];\n      if (setId) {\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets/${setId}`, { cache: 'no-store' });\n        const data = await res.json();\n        const items: Array<{ english: string; turkish: string }> = Array.isArray(data?.items) ? data.items : [];\n        pairs = items.slice(0, GAME_WORD_COUNT).map((w, idx) => ({ id: idx + 1, english: w.english, turkish: w.turkish }));\n      } else {\n        const apiLevel = ['A1','A2','B1','B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/words?level=${apiLevel}&limit=200`, { cache: 'no-store' });\n        const data = await res.json();\n        const raw: Array<{ id: string; english: string; turkish: string }> = Array.isArray(data?.words) ? data.words : [];\n        const chosen = shuffle(raw).slice(0, GAME_WORD_COUNT);\n        pairs = chosen.map((w, idx) => ({ id: idx + 1, english: w.english, turkish: w.turkish }));\n      }\n\n      const newPool: PoolWord[] = shuffle(\n        pairs.map((p) => ({ id: p.id, text: p.english, used: false }))\n      );\n      const newTargets: Target[] = pairs.map((p) => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false,\n      }));\n\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    } catch (e) {\n      // Fallback: basic static list if API is unreachable\n      const fallback: WordPair[] = [\n        { id: 1, turkish: 'merhaba', english: 'hello' },\n        { id: 2, turkish: 'dünya', english: 'world' },\n        { id: 3, turkish: 'aile', english: 'family' },\n        { id: 4, turkish: 'okul', english: 'school' },\n        { id: 5, turkish: 'kitap', english: 'book' },\n        { id: 6, turkish: 'su', english: 'water' },\n        { id: 7, turkish: 'ev', english: 'house' },\n        { id: 8, turkish: 'araba', english: 'car' },\n        { id: 9, turkish: 'yemek', english: 'food' },\n        { id: 10, turkish: 'zaman', english: 'time' },\n        { id: 11, turkish: 'para', english: 'money' },\n        { id: 12, turkish: 'çalışma', english: 'work' },\n        { id: 13, turkish: 'oyun', english: 'game' },\n        { id: 14, turkish: 'müzik', english: 'music' },\n      ];\n      const pairs = shuffle(fallback).slice(0, GAME_WORD_COUNT).map((p, i) => ({ ...p, id: i + 1 }));\n      const newPool: PoolWord[] = shuffle(\n        pairs.map((p) => ({ id: p.id, text: p.english, used: false }))\n      );\n      const newTargets: Target[] = pairs.map((p) => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false,\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    }\n  };\n\n  useEffect(() => {\n    initGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Stopwatch (hidden while playing)\n  useEffect(() => {\n    if (!playing || gameCompleted) return;\n    const t = setInterval(() => setElapsed((c) => c + 1), 1000);\n    return () => clearInterval(t);\n  }, [playing, gameCompleted]);\n\n  // Drag handlers\n  const onDragStart = (\n    e: React.DragEvent<HTMLDivElement>,\n    wordId: number\n  ) => {\n    if (!playing) return;\n    e.dataTransfer.setData('text/plain', String(wordId));\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    if (!playing) return;\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const tryMatch = (targetId: number, wordId: number) => {\n    if (!playing) return;\n    if (targets.find((t) => t.id === targetId)?.matched) return;\n    if (pool.find((p) => p.id === wordId)?.used) return;\n\n    if (targetId === wordId) {\n      // success\n      setTargets((prev) =>\n        prev.map((t) => (t.id === targetId ? { ...t, matched: true } : t))\n      );\n      setPool((prev) => prev.map((w) => (w.id === wordId ? { ...w, used: true } : w)));\n      setMatched((m) => m + 1);\n      setSelectedWordId(null);\n      setSuccessMsg(true);\n      setTimeout(() => setSuccessMsg(false), 800);\n    } else {\n      // wrong\n      setTargets((prev) =>\n        prev.map((t) =>\n          t.id === targetId ? { ...t, wrongFlash: true } : t\n        )\n      );\n      setWrongMsg(true);\n      setTimeout(() => {\n        setWrongMsg(false);\n        setTargets((prev) => prev.map((t) => ({ ...t, wrongFlash: false })));\n      }, 650);\n    }\n  };\n\n  const onDrop = (\n    e: React.DragEvent<HTMLDivElement>,\n    targetId: number\n  ) => {\n    if (!playing) return;\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const wordId = Number(data);\n    if (!Number.isFinite(wordId)) return;\n    tryMatch(targetId, wordId);\n  };\n\n  // Tap/click support\n  const handleWordClick = (wordId: number) => {\n    if (!playing) return;\n    const word = pool.find((w) => w.id === wordId);\n    if (!word || word.used) return;\n    setSelectedWordId((prev) => (prev === wordId ? null : wordId));\n  };\n\n  const handleTargetClick = (targetId: number) => {\n    if (!playing) return;\n    if (selectedWordId == null) return;\n    tryMatch(targetId, selectedWordId);\n  };\n\n  // Complete detection\n  useEffect(() => {\n    if (targets.length > 0 && matched === targets.length) {\n      setPlaying(false);\n      setGameCompleted(true);\n    }\n  }, [matched, targets.length]);\n\n  const reset = () => initGame();\n\n  return (\n    <Box sx={{ minHeight: '100vh', background: '#b2dfdb', display: 'flex', flexDirection: 'column', alignItems: 'center', pb: { xs: 12, md: 16 }, pt: 0, px: 2 }}>\n      <Paper elevation={6} sx={{ p: 0, borderRadius: 4, minWidth: 340, width: '100%', maxWidth: 1000, mt: { xs: 1, md: '15px' }, background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)', backdropFilter: 'blur(10px)', border: '1px solid rgba(255, 255, 255, 0.2)', boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)' }}>\n        {/* Header */}\n        <Box sx={{ background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)', color: '#fff', p: { xs: 3, md: 4 }, borderTopLeftRadius: 'inherit', borderTopRightRadius: 'inherit', display: 'flex', justifyContent: 'space-between', alignItems: 'center', position: 'relative' }}>\n          <Button startIcon={<ArrowBackIcon />} onClick={() => navigate('/kelime-eslestirme')} sx={{ color: '#fff', fontWeight: 600 }}>\n            Geri\n          </Button>\n          <Box sx={{ textAlign: 'center', flex: 1 }}>\n            <Typography variant=\"h5\" fontWeight={700} mb={1}>\n              Kelime Eşleştirme\n            </Typography>\n            <Typography variant=\"body2\" sx={{ opacity: 0.9 }}>\n              Seviye: {level}\n            </Typography>\n          </Box>\n          <Button startIcon={<RefreshIcon />} onClick={reset} sx={{ color: '#fff', fontWeight: 600 }}>\n            Yenile\n          </Button>\n        </Box>\n        {/* Simple progress text (no filling bar, no live time) */}\n        <Box sx={{ p: 3, pt: 2 }}>\n          <Typography variant=\"h6\" color=\"#00695c\" fontWeight={600}>\n            İlerleme: {matched}/{targets.length || GAME_WORD_COUNT}\n          </Typography>\n        </Box>\n\n        {/* Alerts */}\n        <Box sx={{ px: 3 }}>\n          {wrongMsg && (\n            <Fade in={wrongMsg}>\n              <Alert severity=\"error\" icon={<ErrorIcon />} sx={{ mb: 2, borderRadius: 2 }}>\n                Yanlış eşleşme! Tekrar deneyin.\n              </Alert>\n            </Fade>\n          )}\n          {successMsg && (\n            <Fade in={successMsg}>\n              <Alert severity=\"success\" icon={<CheckCircleIcon />} sx={{ mb: 2, borderRadius: 2 }}>\n                Doğru! Devam.\n              </Alert>\n            </Fade>\n          )}\n          {gameCompleted && (\n            <Alert severity=\"success\" icon={<CheckCircleIcon />} sx={{ mb: 3, borderRadius: 2, fontSize: 16 }}>\n              Tebrikler! Tüm eşleşmeler tamamlandı. Süreniz: {formatTime(elapsed)}\n            </Alert>\n          )}\n        </Box>\n\n        {/* Top pool (English words) fixed to two rows) */}\n        <Box sx={{ px: 3, pb: 1 }}>\n          {(() => {\n            const half = Math.ceil(pool.length / 2);\n            const rows = [pool.slice(0, half), pool.slice(half)];\n            return (\n              <>\n                {rows.map((row, idx) => (\n                  <Box key={idx} sx={{ display: 'grid', gridAutoFlow: 'column', gridAutoColumns: '1fr', gap: 1.5, overflowX: { xs: 'auto', md: 'visible' }, pb: 1 }}>\n                    {row.map((w) => (\n                      <Box\n                        key={w.id}\n                        draggable={!w.used && playing}\n                        onDragStart={(e) => onDragStart(e, w.id)}\n                        onClick={() => handleWordClick(w.id)}\n                        sx={{\n                          userSelect: 'none',\n                          cursor: w.used || !playing ? 'default' : 'grab',\n                          opacity: w.used ? 0.35 : 1,\n                          borderRadius: 2,\n                          p: 1.2,\n                          textAlign: 'center',\n                          color: '#fff',\n                          fontWeight: 700,\n                          fontSize: { xs: 12, sm: 14 },\n                          boxShadow: '0 1px 4px rgba(0,0,0,0.12)',\n                          outline: selectedWordId === w.id ? '3px solid rgba(0, 184, 148, 0.9)' : 'none',\n                          background: `linear-gradient(135deg, ${['#42a5f5','#ffca28','#ab47bc','#26a69a','#ef5350','#8d6e63','#66bb6a'][w.id % 7]} 0%, rgba(255,255,255,0.15) 100%)`,\n                          transition: 'transform .15s ease',\n                          '&:active': { transform: 'scale(0.98)' },\n                          minWidth: 88,\n                        }}\n                      >\n                        {w.text}\n                      </Box>\n                    ))}\n                  </Box>\n                ))}\n              </>\n            );\n          })()}\n        </Box>\n\n        {/* Bottom targets (Turkish labels) */}\n        <Box sx={{ p: 3, pt: 1 }}>\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: 'repeat(2, 1fr)', sm: 'repeat(3, 1fr)', md: 'repeat(5, 1fr)' }, gap: 2 }}>\n            {targets.map((t) => (\n              <Box key={t.id} onDragOver={onDragOver} onDrop={(e) => onDrop(e, t.id)} onClick={() => handleTargetClick(t.id)} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 1 }}>\n                <Box sx={{\n                  width: '100%',\n                  height: 54,\n                  borderRadius: 2,\n                  border: t.matched\n                    ? '2px solid #4CAF50'\n                    : t.wrongFlash\n                    ? '2px solid #ef5350'\n                    : selectedWordId != null\n                    ? '2px dashed #00b894'\n                    : '2px dashed rgba(0,0,0,0.25)',\n                  background: t.matched\n                    ? 'linear-gradient(135deg, #4CAF50 0%, #66BB6A 100%)'\n                    : 'rgba(0,0,0,0.03)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: t.matched ? '#fff' : 'inherit',\n                  fontWeight: 700,\n                  textTransform: 'uppercase',\n                  letterSpacing: 0.4,\n                  transition: 'all .15s ease',\n                }}>\n                  {t.matched ? t.english : ''}\n                </Box>\n                <Typography variant=\"body2\" sx={{ fontWeight: 700, color: '#37474F', textAlign: 'center' }}>\n                  {t.turkish}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n\n          {/* Actions */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mt: 3 }}>\n            <Button variant=\"outlined\" onClick={() => navigate('/kelime-eslestirme')} sx={{ borderColor: '#00b894', color: '#00695c', fontWeight: 600, borderRadius: 2, px: 3, '&:hover': { borderColor: '#00cec9', backgroundColor: 'rgba(0, 184, 148, 0.04)' } }}>\n              Seviye Değiştir\n            </Button>\n            {gameCompleted && (\n              <Button variant=\"contained\" onClick={reset} sx={{ background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)', color: '#fff', fontWeight: 600, borderRadius: 2, px: 3, '&:hover': { background: 'linear-gradient(90deg, #00cec9 0%, #00b894 100%)' } }}>\n                Tekrar Oyna\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Paper>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}