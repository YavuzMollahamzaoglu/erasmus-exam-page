{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/Exam.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Paper, Typography, Button, CircularProgress, IconButton } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exam = () => {\n  _s();\n  var _location$state, _location$state2;\n  const {\n    testId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.questions) || []);\n  const [loading, setLoading] = useState((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.questions ? false : true);\n  const [current, setCurrent] = useState(0);\n  const [selected, setSelected] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [score, setScore] = useState(0);\n  const [mistakes, setMistakes] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n  const [time, setTime] = useState(0);\n  const [reviewMode, setReviewMode] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [timerPaused, setTimerPaused] = useState(false);\n  const timerRef = useRef(null);\n\n  // Helper function to format text: first letter uppercase, rest lowercase\n  const formatText = text => {\n    if (!text || text.length === 0) return text;\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n  };\n\n  // Helper function for case insensitive comparison\n  const compareAnswers = (answer1, answer2) => {\n    return answer1.toLowerCase() === answer2.toLowerCase();\n  };\n  useEffect(() => {\n    var _location$state3;\n    // Only fetch if not coming from state\n    if (!((_location$state3 = location.state) !== null && _location$state3 !== void 0 && _location$state3.questions)) {\n      setLoading(true);\n\n      // For dynamic tests, use the questions endpoint directly with filters\n      let apiUrl;\n      if (testId === 'dynamic' || testId !== null && testId !== void 0 && testId.startsWith('dynamic-')) {\n        apiUrl = 'http://localhost:4000/api/questions';\n\n        // Add category filter based on testId\n        if (testId === 'dynamic-a1') {\n          apiUrl += '?category=A1';\n        } else if (testId === 'dynamic-a2' || testId === 'dynamic') {\n          apiUrl += '?category=A2';\n        } else if (testId === 'dynamic-b1') {\n          apiUrl += '?category=B1';\n        } else if (testId === 'dynamic-b2') {\n          apiUrl += '?category=B2';\n        }\n      } else {\n        apiUrl = `http://localhost:4000/api/tests/${testId}/questions`;\n      }\n      console.log(`Fetching questions from: ${apiUrl}`);\n      fetch(apiUrl).then(res => {\n        console.log('API Response status:', res.status);\n        return res.json();\n      }).then(data => {\n        console.log('API Response data:', data);\n        const questionsData = data.questions || data || [];\n        console.log('Questions data length:', questionsData.length);\n        const formattedQuestions = questionsData.map(q => {\n          // Parse options if they're in string format\n          let optionsArray = [];\n          if (Array.isArray(q.options)) {\n            optionsArray = q.options.map(formatText);\n          } else if (typeof q.options === 'string') {\n            try {\n              optionsArray = JSON.parse(q.options).map(formatText);\n            } catch {\n              optionsArray = [];\n            }\n          }\n\n          // Convert correct answer to letter if it's a word\n          let correctLetter = q.correct;\n          if (q.correct && q.correct.length > 1) {\n            // If correct is a word, find its index in options and convert to letter\n            const correctIndex = optionsArray.findIndex(option => option.toLowerCase() === q.correct.toLowerCase());\n            if (correctIndex !== -1) {\n              correctLetter = String.fromCharCode(65 + correctIndex); // A, B, C, D\n              console.log(`Converted \"${q.correct}\" to letter \"${correctLetter}\"`);\n            }\n          }\n          return {\n            ...q,\n            options: optionsArray,\n            correct: correctLetter\n          };\n        });\n        console.log(`Loaded ${formattedQuestions.length} questions`);\n        setQuestions(formattedQuestions);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Failed to fetch questions:', error);\n        setLoading(false);\n      });\n    } else {\n      // Format questions from state as well\n      const formattedQuestions = location.state.questions.map(q => {\n        // Parse options if they're in string format\n        let optionsArray = [];\n        if (Array.isArray(q.options)) {\n          optionsArray = q.options.map(formatText);\n        } else if (typeof q.options === 'string') {\n          try {\n            optionsArray = JSON.parse(q.options).map(formatText);\n          } catch {\n            optionsArray = [];\n          }\n        }\n\n        // Convert correct answer to letter if it's a word\n        let correctLetter = q.correct;\n        if (q.correct && q.correct.length > 1) {\n          // If correct is a word, find its index in options and convert to letter\n          const correctIndex = optionsArray.findIndex(option => option.toLowerCase() === q.correct.toLowerCase());\n          if (correctIndex !== -1) {\n            correctLetter = String.fromCharCode(65 + correctIndex); // A, B, C, D\n            console.log(`Converted \"${q.correct}\" to letter \"${correctLetter}\"`);\n          }\n        }\n        return {\n          ...q,\n          options: optionsArray,\n          correct: correctLetter\n        };\n      });\n      setQuestions(formattedQuestions);\n    }\n  }, [testId, location.state]);\n\n  // Initialize answers array when questions are loaded\n  useEffect(() => {\n    if (questions.length > 0 && answers.length !== questions.length) {\n      setAnswers(Array(questions.length).fill(null));\n    }\n  }, [questions, answers.length]);\n\n  // Timer logic - pause when answer is selected or exam is finished\n  useEffect(() => {\n    if (showSummary || timerPaused) return;\n    timerRef.current = setInterval(() => {\n      setTime(t => t + 1);\n    }, 1000);\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [showSummary, timerPaused]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        bgcolor: '#b2ebf2',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4,\n          borderRadius: 4,\n          background: 'linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%)',\n          boxShadow: '0 20px 40px rgba(0,0,0,0.1)',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          sx: {\n            color: '#00b894',\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: '#2c3e50',\n            fontWeight: 600\n          },\n          children: \"Sorular Y\\xFCkleniyor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n  if (!questions.length) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      mt: 8,\n      children: \"No questions found for this exam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  }\n  const q = questions[current];\n  // Ensure options is always an array\n  let options = [];\n  if (Array.isArray(q.options)) {\n    options = q.options;\n  } else if (typeof q.options === 'string') {\n    try {\n      options = JSON.parse(q.options);\n    } catch {\n      options = [];\n    }\n  }\n\n  // Helper function to get correct answer text\n  const getCorrectAnswerText = () => {\n    if (!q.correct || options.length === 0) return q.correct;\n    const correctIndex = q.correct.charCodeAt(0) - 65; // A=0, B=1, C=2, D=3\n    const correctText = options[correctIndex];\n    return correctText ? `${q.correct}) ${correctText}` : q.correct;\n  };\n  const handleSelect = optionIndex => {\n    const selectedLetter = String.fromCharCode(65 + optionIndex); // 0->A, 1->B, 2->C, 3->D\n    console.log('Selected option index:', optionIndex);\n    console.log('Selected letter:', selectedLetter);\n    console.log('Question correct answer:', q.correct);\n    console.log('Question correct answer type:', typeof q.correct);\n    setSelected(selectedLetter);\n    setShowResult(true);\n    setTimerPaused(true); // Pause timer when answer is selected\n    setAnswers(prev => {\n      const copy = [...prev];\n      copy[current] = selectedLetter;\n      return copy;\n    });\n    if (compareAnswers(selectedLetter, q.correct)) {\n      setScore(s => s + 1);\n    } else {\n      setMistakes(m => m + 1);\n    }\n  };\n  const nextQuestion = () => {\n    if (current < questions.length - 1) {\n      setCurrent(c => c + 1);\n      setSelected(answers[current + 1] || null);\n      setShowResult(!!answers[current + 1]);\n      setShowExplanation(false);\n      setTimerPaused(false); // Resume timer when moving to next question\n    }\n  };\n\n  // Sınavı history'ye kaydet\n  const saveToHistory = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      var _questions$, _questions$2, _questions$3, _questions$4;\n      await fetch('http://localhost:4000/api/history', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? {\n            'Authorization': `Bearer ${token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          category: typeof ((_questions$ = questions[0]) === null || _questions$ === void 0 ? void 0 : _questions$.categoryId) === 'string' ? (_questions$2 = questions[0]) === null || _questions$2 === void 0 ? void 0 : _questions$2.categoryId : String((_questions$3 = questions[0]) === null || _questions$3 === void 0 ? void 0 : _questions$3.categoryId),\n          seriesId: ((_questions$4 = questions[0]) === null || _questions$4 === void 0 ? void 0 : _questions$4.seriesId) || null,\n          duration: time,\n          correct: score,\n          incorrect: mistakes,\n          questions: questions.map((q, idx) => ({\n            questionId: q.id,\n            userAnswer: answers[idx],\n            isCorrect: answers[idx] ? compareAnswers(answers[idx], q.correct) : false\n          }))\n        })\n      });\n    } catch (e) {}\n  };\n  const handleFinish = async () => {\n    // Ensure answers array is properly sized\n    if (answers.length === 0 || answers.length !== questions.length) {\n      setAnswers(Array(questions.length).fill(null));\n    }\n\n    // Calculate final scores\n    let correctCount = 0;\n    let incorrectCount = 0;\n    let unansweredCount = 0;\n    questions.forEach((question, idx) => {\n      const userAnswer = answers[idx];\n      if (userAnswer === null || userAnswer === undefined || userAnswer === '') {\n        unansweredCount++;\n      } else if (compareAnswers(userAnswer, question.correct)) {\n        correctCount++;\n      } else {\n        incorrectCount++;\n      }\n    });\n\n    // Update state with calculated scores\n    setScore(correctCount);\n    setMistakes(incorrectCount);\n    setShowSummary(true);\n    setReviewMode(false);\n    setTimerPaused(true); // Permanently pause timer when exam is finished\n    if (timerRef.current) clearInterval(timerRef.current);\n    await saveToHistory();\n  };\n  const handleCloseSummary = () => {\n    setShowSummary(false);\n    setReviewMode(false);\n    setCurrent(0);\n    setSelected(null);\n    setShowResult(false);\n    setShowExplanation(false);\n    setScore(0);\n    setMistakes(0);\n    setTime(0);\n    setAnswers([]);\n  };\n  const handleAddRanking = () => {\n    // Check if user is logged in\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // Redirect to login page if not logged in\n      navigate('/login');\n      return;\n    }\n\n    // Send all relevant exam result data to backend\n    const categoryId = q.categoryId;\n    const seriesId = q.seriesId;\n    fetch('http://localhost:4000/api/rankings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        score,\n        time,\n        categoryId,\n        seriesId,\n        correct: score,\n        mistakes\n      })\n    }).then(async res => {\n      let data;\n      try {\n        data = await res.json();\n      } catch (e) {\n        data = {};\n      }\n      if (!res.ok) {\n        var _data, _data2;\n        console.error('Ranking save error:', data);\n        let errorMessage = 'Failed to save ranking: ' + (((_data = data) === null || _data === void 0 ? void 0 : _data.message) || res.statusText);\n\n        // Check for authentication related errors\n        if (((_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.message) === 'Authorization header missing' || res.status === 401) {\n          errorMessage = 'Giriş yapmak zorunludur\\n(Bu exam kısmında bitire bastıktan sonra çıkan yerde gözükecek)';\n        }\n        alert(errorMessage);\n        return;\n      }\n      setShowSummary(false);\n      navigate('/rankings');\n    }).catch(err => {\n      console.error('Ranking save error:', err);\n      alert('Failed to save ranking. Network error.');\n    });\n  };\n  const prevQuestion = () => {\n    if (current > 0) {\n      setCurrent(c => c - 1);\n      setSelected(answers[current - 1] || null);\n      setShowResult(!!answers[current - 1]);\n      setShowExplanation(false);\n      // If the previous question was already answered, keep timer paused\n      setTimerPaused(!!answers[current - 1]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      bgcolor: '#b2ebf2',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 90,\n        right: 32,\n        zIndex: 1000,\n        background: timerPaused ? 'linear-gradient(135deg, #ff6b6b 0%, #ffa500 100%)' : 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n        color: '#fff',\n        px: 3,\n        py: 1,\n        borderRadius: 3,\n        fontWeight: 700,\n        fontSize: 18,\n        boxShadow: '0 6px 16px rgba(0, 184, 148, 0.4)',\n        display: 'flex',\n        alignItems: 'center',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        gap: 1,\n        transition: 'background-color 0.3s ease'\n      },\n      children: [timerPaused && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u23F8\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 25\n      }, this), Math.floor(time / 60), \":\", (time % 60).toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        position: 'absolute',\n        left: {\n          xs: 8,\n          md: 32\n        },\n        top: '50%',\n        transform: 'translateY(-50%)',\n        background: current > 0 ? 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.8) 100%)' : 'rgba(255,255,255,0.4)',\n        color: current > 0 ? '#00b894' : '#bdc3c7',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        boxShadow: current > 0 ? '0 8px 25px rgba(0, 184, 148, 0.2)' : '0 4px 15px rgba(0, 0, 0, 0.1)',\n        borderRadius: 3,\n        p: 2,\n        cursor: current > 0 ? 'pointer' : 'default',\n        opacity: current > 0 ? 1 : 0.5,\n        transition: 'all 0.3s ease',\n        '&:hover': {\n          transform: current > 0 ? 'translateY(-50%) translateX(-3px)' : 'translateY(-50%)',\n          background: current > 0 ? 'linear-gradient(135deg, rgba(0, 184, 148, 0.1) 0%, rgba(0, 206, 201, 0.1) 100%)' : 'rgba(255,255,255,0.4)',\n          boxShadow: current > 0 ? '0 12px 30px rgba(0, 184, 148, 0.3)' : '0 4px 15px rgba(0, 0, 0, 0.1)'\n        }\n      },\n      onClick: prevQuestion,\n      disabled: current === 0,\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        position: 'absolute',\n        right: {\n          xs: 8,\n          md: 32\n        },\n        top: '50%',\n        transform: 'translateY(-50%)',\n        background: current < questions.length - 1 ? 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.8) 100%)' : 'rgba(255,255,255,0.4)',\n        color: current < questions.length - 1 ? '#00b894' : '#bdc3c7',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        boxShadow: current < questions.length - 1 ? '0 8px 25px rgba(0, 184, 148, 0.2)' : '0 4px 15px rgba(0, 0, 0, 0.1)',\n        borderRadius: 3,\n        p: 2,\n        cursor: current < questions.length - 1 ? 'pointer' : 'default',\n        opacity: current < questions.length - 1 ? 1 : 0.5,\n        transition: 'all 0.3s ease',\n        '&:hover': {\n          transform: current < questions.length - 1 ? 'translateY(-50%) translateX(3px)' : 'translateY(-50%)',\n          background: current < questions.length - 1 ? 'linear-gradient(135deg, rgba(0, 184, 148, 0.1) 0%, rgba(0, 206, 201, 0.1) 100%)' : 'rgba(255,255,255,0.4)',\n          boxShadow: current < questions.length - 1 ? '0 12px 30px rgba(0, 184, 148, 0.3)' : '0 4px 15px rgba(0, 0, 0, 0.1)'\n        }\n      },\n      onClick: nextQuestion,\n      disabled: current === questions.length - 1,\n      children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), !reviewMode && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        p: 5,\n        borderRadius: 4,\n        minWidth: 340,\n        maxWidth: 600,\n        width: '100%',\n        background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\n        transition: 'transform 0.3s ease',\n        '&:hover': {\n          transform: 'translateY(-5px)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: 700,\n          align: \"center\",\n          sx: {\n            background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n            backgroundClip: 'text',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            textShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n          },\n          children: [\"Soru \", current + 1, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        mb: 3,\n        sx: {\n          color: '#2c3e50',\n          fontWeight: 600,\n          fontSize: '1.2rem',\n          lineHeight: 1.6,\n          textAlign: 'center',\n          padding: '16px',\n          background: 'rgba(255, 255, 255, 0.7)',\n          borderRadius: '12px',\n          border: '1px solid rgba(0, 184, 148, 0.2)'\n        },\n        children: q.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          mb: 3\n        },\n        children: options.length > 0 ? options.map((opt, idx) => {\n          const optionLetter = String.fromCharCode(65 + idx); // A, B, C, D\n          const isSelected = selected === optionLetter;\n          const isCorrect = compareAnswers(optionLetter, q.correct);\n          const showColor = !!selected;\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: isSelected ? 'contained' : 'outlined',\n            color: showColor ? isCorrect ? 'primary' : isSelected ? 'error' : 'primary' : 'primary',\n            sx: {\n              textAlign: 'left',\n              fontWeight: 600,\n              fontSize: 18,\n              borderRadius: 4,\n              py: 2,\n              px: 2,\n              background: !showColor ? 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%)' : isSelected ? isCorrect ? 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)' : 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)' : 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%)',\n              color: showColor && isSelected ? '#ffffff' : '#2c3e50',\n              border: showColor && isSelected ? 'none' : '2px solid rgba(0, 184, 148, 0.3)',\n              backdropFilter: 'blur(10px)',\n              boxShadow: isSelected ? '0 8px 25px rgba(0, 184, 148, 0.3)' : '0 4px 15px rgba(0, 0, 0, 0.1)',\n              position: 'relative',\n              transition: 'all 0.3s ease',\n              '&:hover': {\n                transform: !selected ? 'translateY(-2px)' : 'none',\n                background: !showColor ? 'linear-gradient(135deg, rgba(0, 184, 148, 0.1) 0%, rgba(0, 206, 201, 0.1) 100%)' : undefined,\n                boxShadow: !selected ? '0 8px 25px rgba(0, 184, 148, 0.2)' : undefined\n              }\n            },\n            onClick: () => !showResult && handleSelect(idx),\n            disabled: !!selected,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'relative',\n                zIndex: 2\n              },\n              children: [String.fromCharCode(65 + idx), \") \", opt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 21\n            }, this), showColor && isSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                right: 16,\n                top: '50%',\n                transform: 'translateY(-50%)',\n                fontWeight: 700,\n                fontSize: 14,\n                color: '#ffffff',\n                background: isCorrect ? 'linear-gradient(135deg, #27ae60 0%, #2ecc71 100%)' : 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)',\n                borderRadius: 12,\n                padding: '4px 12px',\n                boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)',\n                zIndex: 3\n              },\n              children: isCorrect ? '✓ Doğru' : '✗ Yanlış'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 23\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          fontWeight: 600,\n          mb: 2,\n          children: \"Bu sorunun se\\xE7enekleri eksik veya hatal\\u0131.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this), showResult && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: compareAnswers(selected || '', q.correct) ? 'success.main' : 'error.main',\n          fontWeight: 700,\n          mb: 1,\n          children: compareAnswers(selected || '', q.correct) ? 'Doğru!' : `Doğru Yanıt: ${getCorrectAnswerText()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => setShowExplanation(e => !e),\n          children: showExplanation ? 'Çözümü Gizle' : 'Çözümü Göster'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 15\n        }, this), showExplanation && /*#__PURE__*/_jsxDEV(Typography, {\n          mt: 2,\n          color: \"text.secondary\",\n          children: q.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 13\n      }, this), !showSummary && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          sx: {\n            fontWeight: 700,\n            fontSize: 18,\n            borderRadius: 3,\n            px: 4,\n            py: 1.5,\n            boxShadow: 2,\n            textTransform: 'none'\n          },\n          onClick: handleFinish,\n          children: \"Bitir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this), showSummary && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        bgcolor: 'rgba(10,29,86,0.7)',\n        zIndex: 9999,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: '#fff',\n          borderRadius: 6,\n          boxShadow: 8,\n          p: 4,\n          minWidth: 320,\n          maxWidth: '90vw',\n          textAlign: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: 700,\n          color: \"#19376D\",\n          mb: 2,\n          children: \"S\\u0131nav Sonucu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 20,\n          fontWeight: 600,\n          color: \"#43ea7c\",\n          mb: 1,\n          children: [\"Do\\u011Fru: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 20,\n          fontWeight: 600,\n          color: \"#e74c3c\",\n          mb: 1,\n          children: [\"Yanl\\u0131\\u015F: \", mistakes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 20,\n          fontWeight: 600,\n          color: \"#f39c12\",\n          mb: 1,\n          children: [\"Bo\\u015F: \", answers.filter(answer => answer === null || answer === undefined || answer === '').length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 18,\n          fontWeight: 500,\n          color: \"#19376D\",\n          mb: 2,\n          children: [\"S\\xFCre: \", Math.floor(time / 60), \":\", (time % 60).toString().padStart(2, '0')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 2,\n            justifyContent: 'center',\n            mb: 3\n          },\n          children: questions.map((question, idx) => {\n            const userAnswer = answers[idx];\n            const isUnanswered = userAnswer === null || userAnswer === undefined || userAnswer === '';\n            const isCorrect = !isUnanswered && compareAnswers(userAnswer, question.correct);\n\n            // Determine colors based on answer status\n            let borderColor, textColor, backgroundColor, hoverColor;\n            if (isUnanswered) {\n              // Boş bırakılan sorular - turuncu\n              borderColor = '#f39c12';\n              textColor = '#f39c12';\n              backgroundColor = '#fdf6e3';\n              hoverColor = '#f8e49a';\n            } else if (isCorrect) {\n              // Doğru cevaplar - yeşil\n              borderColor = '#43ea7c';\n              textColor = '#43ea7c';\n              backgroundColor = '#eafaf3';\n              hoverColor = '#c6f7e2';\n            } else {\n              // Yanlış cevaplar - kırmızı\n              borderColor = '#e74c3c';\n              textColor = '#e74c3c';\n              backgroundColor = '#fff0f0';\n              hoverColor = '#ffe3e3';\n            }\n            return /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              sx: {\n                minWidth: 48,\n                height: 48,\n                fontWeight: 700,\n                fontSize: 18,\n                borderRadius: 3,\n                border: 'none',\n                color: '#ffffff',\n                background: !answers[idx] ? 'linear-gradient(135deg, #f39c12 0%, #e67e22 100%)' : isCorrect ? 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)' : 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)',\n                backdropFilter: 'blur(10px)',\n                boxShadow: '0 6px 20px rgba(0, 0, 0, 0.15)',\n                mx: 0.5,\n                my: 0.5,\n                transition: 'all 0.3s ease',\n                '&:hover': {\n                  transform: 'translateY(-3px)',\n                  boxShadow: '0 8px 25px rgba(0, 0, 0, 0.2)'\n                }\n              },\n              onClick: () => {\n                setReviewMode(true);\n                setShowSummary(false);\n                setCurrent(idx);\n                setSelected(answers[idx] || null);\n                setShowResult(!!answers[idx]);\n                setShowExplanation(false);\n              },\n              children: idx + 1\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 15,\n          color: \"#19376D\",\n          mb: 2,\n          children: \"Sorular\\u0131 incelemek i\\xE7in t\\u0131klay\\u0131n. Ye\\u015Fil: Do\\u011Fru, K\\u0131rm\\u0131z\\u0131: Yanl\\u0131\\u015F, Turuncu: Bo\\u015F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            gap: 2,\n            mt: 2,\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            sx: {\n              fontWeight: 700,\n              fontSize: 16,\n              borderRadius: 3,\n              px: 4,\n              py: 1.2,\n              boxShadow: 2,\n              textTransform: 'none'\n            },\n            onClick: handleAddRanking,\n            children: \"S\\u0131ralamaya Ekle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            sx: {\n              fontWeight: 700,\n              fontSize: 16,\n              borderRadius: 3,\n              px: 4,\n              py: 1.2,\n              boxShadow: 2,\n              textTransform: 'none'\n            },\n            onClick: () => {\n              navigate('/categories');\n            },\n            children: \"Kapat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              fontWeight: 700,\n              fontSize: 16,\n              borderRadius: 3,\n              px: 4,\n              py: 1.2,\n              boxShadow: 2,\n              textTransform: 'none'\n            },\n            onClick: () => {\n              handleCloseSummary();\n            },\n            children: \"Tekrar \\xC7\\xF6z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 13\n        }, this), !localStorage.getItem('token') && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          sx: {\n            display: 'block',\n            textAlign: 'center',\n            mt: 1,\n            fontSize: '0.75rem',\n            color: '#666',\n            fontStyle: 'italic'\n          },\n          children: \"S\\u0131ralamaya eklemek i\\xE7in \\xFCye giri\\u015Fi gerekli veya kay\\u0131t olmal\\u0131s\\u0131n\\u0131z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 9\n    }, this), reviewMode && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        p: 5,\n        borderRadius: 4,\n        minWidth: 340,\n        maxWidth: 600,\n        width: '100%',\n        background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\n        transition: 'transform 0.3s ease',\n        '&:hover': {\n          transform: 'translateY(-5px)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: 700,\n          align: \"center\",\n          sx: {\n            background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n            backgroundClip: 'text',\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n            textShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n          },\n          children: [\"Soru \", current + 1, \" / \", questions.length, \" (\\u0130nceleme)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        mb: 3,\n        sx: {\n          color: '#2c3e50',\n          fontWeight: 600,\n          fontSize: '1.2rem',\n          lineHeight: 1.6,\n          textAlign: 'center',\n          padding: '16px',\n          background: 'rgba(255, 255, 255, 0.7)',\n          borderRadius: '12px',\n          border: '1px solid rgba(0, 184, 148, 0.2)'\n        },\n        children: q.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          mb: 3\n        },\n        children: options.length > 0 ? options.map((opt, idx) => {\n          const optionLetter = String.fromCharCode(65 + idx); // A, B, C, D\n          const isSelected = answers[current] === optionLetter;\n          const isCorrect = compareAnswers(optionLetter, q.correct);\n          const showColor = !!answers[current];\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: isSelected ? 'contained' : 'outlined',\n            color: showColor ? isCorrect ? 'primary' : isSelected ? 'error' : 'primary' : 'primary',\n            sx: {\n              textAlign: 'left',\n              fontWeight: 600,\n              fontSize: 18,\n              borderRadius: 4,\n              py: 2,\n              px: 2,\n              background: !showColor ? 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%)' : isSelected ? isCorrect ? 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)' : 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)' : isCorrect ? 'linear-gradient(135deg, rgba(0, 184, 148, 0.1) 0%, rgba(0, 206, 201, 0.1) 100%)' : 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%)',\n              color: showColor && isSelected ? '#ffffff' : isCorrect && showColor ? '#00b894' : '#2c3e50',\n              border: isCorrect && showColor && !isSelected ? '2px solid #00b894' : showColor && isSelected ? 'none' : '2px solid rgba(0, 184, 148, 0.3)',\n              backdropFilter: 'blur(10px)',\n              boxShadow: isSelected ? '0 8px 25px rgba(0, 184, 148, 0.3)' : isCorrect && showColor ? '0 4px 15px rgba(0, 184, 148, 0.2)' : '0 4px 15px rgba(0, 0, 0, 0.1)',\n              position: 'relative',\n              transition: 'all 0.3s ease',\n              pointerEvents: 'none'\n            },\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'relative',\n                zIndex: 2\n              },\n              children: [String.fromCharCode(65 + idx), \") \", opt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 21\n            }, this), showColor && isSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                right: 16,\n                top: '50%',\n                transform: 'translateY(-50%)',\n                fontWeight: 700,\n                fontSize: 18,\n                color: isCorrect ? '#43ea7c' : '#e74c3c',\n                background: isCorrect ? '#eafaf3' : '#fff0f0',\n                borderRadius: 8,\n                padding: '2px 12px',\n                boxShadow: '0 2px 8px rgba(67,234,124,0.08)',\n                zIndex: 3\n              },\n              children: isCorrect ? 'Doğru' : 'Yanlış'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 23\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          fontWeight: 600,\n          mb: 2,\n          children: \"Bu sorunun se\\xE7enekleri eksik veya hatal\\u0131.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 11\n      }, this), !!q.explanation && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => setShowExplanation(e => !e),\n          children: showExplanation ? 'Çözümü Gizle' : 'Çözümü Göster'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 15\n        }, this), showExplanation && /*#__PURE__*/_jsxDEV(Typography, {\n          mt: 2,\n          color: \"text.secondary\",\n          children: q.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          sx: {\n            fontWeight: 700,\n            fontSize: 16,\n            borderRadius: 3,\n            px: 4,\n            py: 1.2,\n            boxShadow: 2,\n            textTransform: 'none'\n          },\n          onClick: () => {\n            setReviewMode(false);\n            setShowSummary(true);\n            setShowExplanation(false);\n          },\n          children: \"Sonu\\xE7lara D\\xF6n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n};\n_s(Exam, \"vfiBmL5dmxINDRn+P9gEh57Dp0I=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = Exam;\nexport default Exam;\nvar _c;\n$RefreshReg$(_c, \"Exam\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useLocation","useNavigate","Box","Paper","Typography","Button","CircularProgress","IconButton","ArrowBackIcon","ArrowForwardIcon","jsxDEV","_jsxDEV","Exam","_s","_location$state","_location$state2","testId","location","navigate","questions","setQuestions","state","loading","setLoading","current","setCurrent","selected","setSelected","showResult","setShowResult","showExplanation","setShowExplanation","score","setScore","mistakes","setMistakes","showSummary","setShowSummary","time","setTime","reviewMode","setReviewMode","answers","setAnswers","timerPaused","setTimerPaused","timerRef","formatText","text","length","charAt","toUpperCase","slice","toLowerCase","compareAnswers","answer1","answer2","_location$state3","apiUrl","startsWith","console","log","fetch","then","res","status","json","data","questionsData","formattedQuestions","map","q","optionsArray","Array","isArray","options","JSON","parse","correctLetter","correct","correctIndex","findIndex","option","String","fromCharCode","catch","error","fill","setInterval","t","clearInterval","sx","minHeight","bgcolor","display","alignItems","justifyContent","children","p","borderRadius","background","boxShadow","textAlign","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","align","mt","getCorrectAnswerText","charCodeAt","correctText","handleSelect","optionIndex","selectedLetter","prev","copy","s","m","nextQuestion","c","saveToHistory","token","localStorage","getItem","_questions$","_questions$2","_questions$3","_questions$4","method","headers","body","stringify","category","categoryId","seriesId","duration","incorrect","idx","questionId","id","userAnswer","isCorrect","e","handleFinish","correctCount","incorrectCount","unansweredCount","forEach","question","undefined","handleCloseSummary","handleAddRanking","Authorization","ok","_data","_data2","errorMessage","message","statusText","alert","err","prevQuestion","position","top","right","zIndex","px","py","fontSize","backdropFilter","border","gap","transition","Math","floor","toString","padStart","left","xs","md","transform","cursor","opacity","onClick","disabled","elevation","minWidth","maxWidth","width","backgroundClip","WebkitBackgroundClip","WebkitTextFillColor","textShadow","lineHeight","padding","flexDirection","opt","optionLetter","isSelected","showColor","style","explanation","textTransform","height","filter","answer","flexWrap","isUnanswered","borderColor","textColor","backgroundColor","hoverColor","mx","my","fontStyle","pointerEvents","_c","$RefreshReg$"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/Exam.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Paper, Typography, Button, CircularProgress, IconButton } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\ninterface Question {\n  id: string;\n  text: string;\n  options: string[];\n  correct: string;\n  explanation: string;\n  categoryId: number;\n  seriesId: string;\n}\n\nconst Exam: React.FC = () => {\n  const { testId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState<Question[]>(location.state?.questions || []);\n  const [loading, setLoading] = useState(location.state?.questions ? false : true);\n  const [current, setCurrent] = useState(0);\n  const [selected, setSelected] = useState<string | null>(null);\n  const [showResult, setShowResult] = useState(false);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [score, setScore] = useState(0);\n  const [mistakes, setMistakes] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n  const [time, setTime] = useState(0);\n  const [reviewMode, setReviewMode] = useState(false);\n  const [answers, setAnswers] = useState<(string | null)[]>([]);\n  const [timerPaused, setTimerPaused] = useState(false);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Helper function to format text: first letter uppercase, rest lowercase\n  const formatText = (text: string) => {\n    if (!text || text.length === 0) return text;\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n  };\n\n  // Helper function for case insensitive comparison\n  const compareAnswers = (answer1: string, answer2: string) => {\n    return answer1.toLowerCase() === answer2.toLowerCase();\n  };\n\n  useEffect(() => {\n    // Only fetch if not coming from state\n    if (!location.state?.questions) {\n      setLoading(true);\n      \n      // For dynamic tests, use the questions endpoint directly with filters\n      let apiUrl: string;\n      \n      if (testId === 'dynamic' || testId?.startsWith('dynamic-')) {\n        apiUrl = 'http://localhost:4000/api/questions';\n        \n        // Add category filter based on testId\n        if (testId === 'dynamic-a1') {\n          apiUrl += '?category=A1';\n        } else if (testId === 'dynamic-a2' || testId === 'dynamic') {\n          apiUrl += '?category=A2';\n        } else if (testId === 'dynamic-b1') {\n          apiUrl += '?category=B1';\n        } else if (testId === 'dynamic-b2') {\n          apiUrl += '?category=B2';\n        }\n      } else {\n        apiUrl = `http://localhost:4000/api/tests/${testId}/questions`;\n      }\n      \n      console.log(`Fetching questions from: ${apiUrl}`);\n      \n      fetch(apiUrl)\n        .then(res => {\n          console.log('API Response status:', res.status);\n          return res.json();\n        })\n        .then(data => {\n          console.log('API Response data:', data);\n          const questionsData = data.questions || data || [];\n          console.log('Questions data length:', questionsData.length);\n          \n          const formattedQuestions = questionsData.map((q: Question) => {\n            // Parse options if they're in string format\n            let optionsArray: string[] = [];\n            if (Array.isArray(q.options)) {\n              optionsArray = q.options.map(formatText);\n            } else if (typeof q.options === 'string') {\n              try {\n                optionsArray = JSON.parse(q.options).map(formatText);\n              } catch {\n                optionsArray = [];\n              }\n            }\n\n            // Convert correct answer to letter if it's a word\n            let correctLetter = q.correct;\n            if (q.correct && q.correct.length > 1) {\n              // If correct is a word, find its index in options and convert to letter\n              const correctIndex = optionsArray.findIndex(option => \n                option.toLowerCase() === q.correct.toLowerCase()\n              );\n              if (correctIndex !== -1) {\n                correctLetter = String.fromCharCode(65 + correctIndex); // A, B, C, D\n                console.log(`Converted \"${q.correct}\" to letter \"${correctLetter}\"`);\n              }\n            }\n\n            return {\n              ...q,\n              options: optionsArray,\n              correct: correctLetter\n            };\n          });\n          console.log(`Loaded ${formattedQuestions.length} questions`);\n          setQuestions(formattedQuestions);\n          setLoading(false);\n        })\n        .catch(error => {\n          console.error('Failed to fetch questions:', error);\n          setLoading(false);\n        });\n    } else {\n      // Format questions from state as well\n      const formattedQuestions = location.state.questions.map((q: Question) => {\n        // Parse options if they're in string format\n        let optionsArray: string[] = [];\n        if (Array.isArray(q.options)) {\n          optionsArray = q.options.map(formatText);\n        } else if (typeof q.options === 'string') {\n          try {\n            optionsArray = JSON.parse(q.options).map(formatText);\n          } catch {\n            optionsArray = [];\n          }\n        }\n\n        // Convert correct answer to letter if it's a word\n        let correctLetter = q.correct;\n        if (q.correct && q.correct.length > 1) {\n          // If correct is a word, find its index in options and convert to letter\n          const correctIndex = optionsArray.findIndex(option => \n            option.toLowerCase() === q.correct.toLowerCase()\n          );\n          if (correctIndex !== -1) {\n            correctLetter = String.fromCharCode(65 + correctIndex); // A, B, C, D\n            console.log(`Converted \"${q.correct}\" to letter \"${correctLetter}\"`);\n          }\n        }\n\n        return {\n          ...q,\n          options: optionsArray,\n          correct: correctLetter\n        };\n      });\n      setQuestions(formattedQuestions);\n    }\n  }, [testId, location.state]);\n\n  // Initialize answers array when questions are loaded\n  useEffect(() => {\n    if (questions.length > 0 && answers.length !== questions.length) {\n      setAnswers(Array(questions.length).fill(null));\n    }\n  }, [questions, answers.length]);\n\n  // Timer logic - pause when answer is selected or exam is finished\n  useEffect(() => {\n    if (showSummary || timerPaused) return;\n    timerRef.current = setInterval(() => {\n      setTime((t) => t + 1);\n    }, 1000);\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [showSummary, timerPaused]);\n\n  if (loading) {\n    return (\n      <Box sx={{ minHeight: '100vh', bgcolor: '#b2ebf2', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <Box sx={{\n          p: 4,\n          borderRadius: 4,\n          background: 'linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%)',\n          boxShadow: '0 20px 40px rgba(0,0,0,0.1)',\n          textAlign: 'center'\n        }}>\n          <CircularProgress sx={{ color: '#00b894', mb: 2 }} />\n          <Typography variant=\"h6\" sx={{ color: '#2c3e50', fontWeight: 600 }}>\n            Sorular Yükleniyor...\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  if (!questions.length) {\n    return <Typography align=\"center\" mt={8}>No questions found for this exam.</Typography>;\n  }\n\n  const q = questions[current];\n  // Ensure options is always an array\n  let options: string[] = [];\n  if (Array.isArray(q.options)) {\n    options = q.options;\n  } else if (typeof q.options === 'string') {\n    try {\n      options = JSON.parse(q.options);\n    } catch {\n      options = [];\n    }\n  }\n\n  // Helper function to get correct answer text\n  const getCorrectAnswerText = () => {\n    if (!q.correct || options.length === 0) return q.correct;\n    const correctIndex = q.correct.charCodeAt(0) - 65; // A=0, B=1, C=2, D=3\n    const correctText = options[correctIndex];\n    return correctText ? `${q.correct}) ${correctText}` : q.correct;\n  };\n\n  const handleSelect = (optionIndex: number) => {\n    const selectedLetter = String.fromCharCode(65 + optionIndex); // 0->A, 1->B, 2->C, 3->D\n    console.log('Selected option index:', optionIndex);\n    console.log('Selected letter:', selectedLetter);\n    console.log('Question correct answer:', q.correct);\n    console.log('Question correct answer type:', typeof q.correct);\n    \n    setSelected(selectedLetter);\n    setShowResult(true);\n    setTimerPaused(true); // Pause timer when answer is selected\n    setAnswers((prev) => {\n      const copy = [...prev];\n      copy[current] = selectedLetter;\n      return copy;\n    });\n    if (compareAnswers(selectedLetter, q.correct)) {\n      setScore((s) => s + 1);\n    } else {\n      setMistakes((m) => m + 1);\n    }\n  };\n\n  const nextQuestion = () => {\n    if (current < questions.length - 1) {\n      setCurrent(c => c + 1);\n      setSelected(answers[current + 1] || null);\n      setShowResult(!!answers[current + 1]);\n      setShowExplanation(false);\n      setTimerPaused(false); // Resume timer when moving to next question\n    }\n  };\n\n  // Sınavı history'ye kaydet\n  const saveToHistory = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      await fetch('http://localhost:4000/api/history', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n        },\n        body: JSON.stringify({\n          category: typeof questions[0]?.categoryId === 'string' ? questions[0]?.categoryId : String(questions[0]?.categoryId),\n          seriesId: questions[0]?.seriesId || null,\n          duration: time,\n          correct: score,\n          incorrect: mistakes,\n          questions: questions.map((q, idx) => ({\n            questionId: q.id,\n            userAnswer: answers[idx],\n            isCorrect: answers[idx] ? compareAnswers(answers[idx]!, q.correct) : false\n          }))\n        })\n      });\n    } catch (e) {}\n  };\n\n  const handleFinish = async () => {\n    // Ensure answers array is properly sized\n    if (answers.length === 0 || answers.length !== questions.length) {\n      setAnswers(Array(questions.length).fill(null));\n    }\n    \n    // Calculate final scores\n    let correctCount = 0;\n    let incorrectCount = 0;\n    let unansweredCount = 0;\n    \n    questions.forEach((question, idx) => {\n      const userAnswer = answers[idx];\n      if (userAnswer === null || userAnswer === undefined || userAnswer === '') {\n        unansweredCount++;\n      } else if (compareAnswers(userAnswer, question.correct)) {\n        correctCount++;\n      } else {\n        incorrectCount++;\n      }\n    });\n    \n    // Update state with calculated scores\n    setScore(correctCount);\n    setMistakes(incorrectCount);\n    \n    setShowSummary(true);\n    setReviewMode(false);\n    setTimerPaused(true); // Permanently pause timer when exam is finished\n    if (timerRef.current) clearInterval(timerRef.current);\n    \n    await saveToHistory();\n  };\n\n  const handleCloseSummary = () => {\n    setShowSummary(false);\n    setReviewMode(false);\n    setCurrent(0);\n    setSelected(null);\n    setShowResult(false);\n    setShowExplanation(false);\n    setScore(0);\n    setMistakes(0);\n    setTime(0);\n    setAnswers([]);\n  };\n\n  const handleAddRanking = () => {\n    // Check if user is logged in\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // Redirect to login page if not logged in\n      navigate('/login');\n      return;\n    }\n\n    // Send all relevant exam result data to backend\n    const categoryId = q.categoryId;\n    const seriesId = q.seriesId;\n    fetch('http://localhost:4000/api/rankings', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${token}` },\n      body: JSON.stringify({ score, time, categoryId, seriesId, correct: score, mistakes }),\n    })\n      .then(async res => {\n        let data;\n        try {\n          data = await res.json();\n        } catch (e) {\n          data = {};\n        }\n        if (!res.ok) {\n          console.error('Ranking save error:', data);\n          let errorMessage = 'Failed to save ranking: ' + (data?.message || res.statusText);\n          \n          // Check for authentication related errors\n          if (data?.message === 'Authorization header missing' || res.status === 401) {\n            errorMessage = 'Giriş yapmak zorunludur\\n(Bu exam kısmında bitire bastıktan sonra çıkan yerde gözükecek)';\n          }\n          \n          alert(errorMessage);\n          return;\n        }\n        setShowSummary(false);\n        navigate('/rankings');\n      })\n      .catch(err => {\n        console.error('Ranking save error:', err);\n        alert('Failed to save ranking. Network error.');\n      });\n  };\n\n  const prevQuestion = () => {\n    if (current > 0) {\n      setCurrent(c => c - 1);\n      setSelected(answers[current - 1] || null);\n      setShowResult(!!answers[current - 1]);\n      setShowExplanation(false);\n      // If the previous question was already answered, keep timer paused\n      setTimerPaused(!!answers[current - 1]);\n    }\n  };\n\n  return (\n    <Box sx={{ minHeight: '100vh', bgcolor: '#b2ebf2', display: 'flex', alignItems: 'center', justifyContent: 'center', position: 'relative' }}>\n      {/* Timer at top right with pause indicator */}\n      <Box\n        sx={{\n          position: 'fixed',\n          top: 90,\n          right: 32,\n          zIndex: 1000,\n          background: timerPaused \n            ? 'linear-gradient(135deg, #ff6b6b 0%, #ffa500 100%)' \n            : 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n          color: '#fff',\n          px: 3,\n          py: 1,\n          borderRadius: 3,\n          fontWeight: 700,\n          fontSize: 18,\n          boxShadow: '0 6px 16px rgba(0, 184, 148, 0.4)',\n          display: 'flex',\n          alignItems: 'center',\n          backdropFilter: 'blur(10px)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          gap: 1,\n          transition: 'background-color 0.3s ease',\n        }}\n      >\n        {timerPaused && <span>⏸️</span>}\n        {Math.floor(time / 60)}:{(time % 60).toString().padStart(2, '0')}\n      </Box>\n      {/* Navigation buttons outside the card */}\n      <IconButton\n        sx={{\n          position: 'absolute',\n          left: { xs: 8, md: 32 },\n          top: '50%',\n          transform: 'translateY(-50%)',\n          background: current > 0 \n            ? 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.8) 100%)'\n            : 'rgba(255,255,255,0.4)',\n          color: current > 0 ? '#00b894' : '#bdc3c7',\n          backdropFilter: 'blur(10px)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          boxShadow: current > 0 ? '0 8px 25px rgba(0, 184, 148, 0.2)' : '0 4px 15px rgba(0, 0, 0, 0.1)',\n          borderRadius: 3,\n          p: 2,\n          cursor: current > 0 ? 'pointer' : 'default',\n          opacity: current > 0 ? 1 : 0.5,\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            transform: current > 0 ? 'translateY(-50%) translateX(-3px)' : 'translateY(-50%)',\n            background: current > 0 \n              ? 'linear-gradient(135deg, rgba(0, 184, 148, 0.1) 0%, rgba(0, 206, 201, 0.1) 100%)'\n              : 'rgba(255,255,255,0.4)',\n            boxShadow: current > 0 ? '0 12px 30px rgba(0, 184, 148, 0.3)' : '0 4px 15px rgba(0, 0, 0, 0.1)',\n          },\n        }}\n        onClick={prevQuestion}\n        disabled={current === 0}\n      >\n        <ArrowBackIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton\n        sx={{\n          position: 'absolute',\n          right: { xs: 8, md: 32 },\n          top: '50%',\n          transform: 'translateY(-50%)',\n          background: current < questions.length - 1 \n            ? 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.8) 100%)'\n            : 'rgba(255,255,255,0.4)',\n          color: current < questions.length - 1 ? '#00b894' : '#bdc3c7',\n          backdropFilter: 'blur(10px)',\n          border: '1px solid rgba(255, 255, 255, 0.2)',\n          boxShadow: current < questions.length - 1 ? '0 8px 25px rgba(0, 184, 148, 0.2)' : '0 4px 15px rgba(0, 0, 0, 0.1)',\n          borderRadius: 3,\n          p: 2,\n          cursor: current < questions.length - 1 ? 'pointer' : 'default',\n          opacity: current < questions.length - 1 ? 1 : 0.5,\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            transform: current < questions.length - 1 ? 'translateY(-50%) translateX(3px)' : 'translateY(-50%)',\n            background: current < questions.length - 1 \n              ? 'linear-gradient(135deg, rgba(0, 184, 148, 0.1) 0%, rgba(0, 206, 201, 0.1) 100%)'\n              : 'rgba(255,255,255,0.4)',\n            boxShadow: current < questions.length - 1 ? '0 12px 30px rgba(0, 184, 148, 0.3)' : '0 4px 15px rgba(0, 0, 0, 0.1)',\n          },\n        }}\n        onClick={nextQuestion}\n        disabled={current === questions.length - 1}\n      >\n        <ArrowForwardIcon fontSize=\"large\" />\n      </IconButton>\n      {!reviewMode && (\n        <Paper \n          elevation={6} \n          sx={{ \n            p: 5, \n            borderRadius: 4, \n            minWidth: 340, \n            maxWidth: 600, \n            width: '100%', \n            background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(255, 255, 255, 0.2)',\n            boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\n            transition: 'transform 0.3s ease',\n            '&:hover': {\n              transform: 'translateY(-5px)',\n            }\n          }}\n        >\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mb: 2 }}>\n            <Typography \n              variant=\"h5\" \n              fontWeight={700} \n              align=\"center\"\n              sx={{\n                background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n                backgroundClip: 'text',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent',\n                textShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n              }}\n            >\n              Soru {current + 1} / {questions.length}\n            </Typography>\n          </Box>\n          <Typography \n            variant=\"h6\" \n            mb={3}\n            sx={{\n              color: '#2c3e50',\n              fontWeight: 600,\n              fontSize: '1.2rem',\n              lineHeight: 1.6,\n              textAlign: 'center',\n              padding: '16px',\n              background: 'rgba(255, 255, 255, 0.7)',\n              borderRadius: '12px',\n              border: '1px solid rgba(0, 184, 148, 0.2)',\n            }}\n          >\n            {q.text}\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mb: 3 }}>\n            {options.length > 0 ? (\n              options.map((opt, idx) => {\n                const optionLetter = String.fromCharCode(65 + idx); // A, B, C, D\n                const isSelected = selected === optionLetter;\n                const isCorrect = compareAnswers(optionLetter, q.correct);\n                const showColor = !!selected;\n                return (\n                  <Button\n                    key={idx}\n                    variant={isSelected ? 'contained' : 'outlined'}\n                    color={showColor ? (isCorrect ? 'primary' : isSelected ? 'error' : 'primary') : 'primary'}\n                    sx={{\n                      textAlign: 'left',\n                      fontWeight: 600,\n                      fontSize: 18,\n                      borderRadius: 4,\n                      py: 2,\n                      px: 2,\n                      background: !showColor \n                        ? 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%)'\n                        : isSelected\n                          ? (isCorrect\n                              ? 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)'\n                              : 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)')\n                          : 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%)',\n                      color: showColor && isSelected ? '#ffffff' : '#2c3e50',\n                      border: showColor && isSelected\n                        ? 'none'\n                        : '2px solid rgba(0, 184, 148, 0.3)',\n                      backdropFilter: 'blur(10px)',\n                      boxShadow: isSelected \n                        ? '0 8px 25px rgba(0, 184, 148, 0.3)' \n                        : '0 4px 15px rgba(0, 0, 0, 0.1)',\n                      position: 'relative',\n                      transition: 'all 0.3s ease',\n                      '&:hover': {\n                        transform: !selected ? 'translateY(-2px)' : 'none',\n                        background: !showColor \n                          ? 'linear-gradient(135deg, rgba(0, 184, 148, 0.1) 0%, rgba(0, 206, 201, 0.1) 100%)' \n                          : undefined,\n                        boxShadow: !selected \n                          ? '0 8px 25px rgba(0, 184, 148, 0.2)' \n                          : undefined,\n                      },\n                    }}\n                    onClick={() => !showResult && handleSelect(idx)}\n                    disabled={!!selected}\n                  >\n                    <span style={{ position: 'relative', zIndex: 2 }}>{String.fromCharCode(65 + idx)}) {opt}</span>\n                    {showColor && isSelected && (\n                      <span style={{\n                        position: 'absolute',\n                        right: 16,\n                        top: '50%',\n                        transform: 'translateY(-50%)',\n                        fontWeight: 700,\n                        fontSize: 14,\n                        color: '#ffffff',\n                        background: isCorrect \n                          ? 'linear-gradient(135deg, #27ae60 0%, #2ecc71 100%)' \n                          : 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)',\n                        borderRadius: 12,\n                        padding: '4px 12px',\n                        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.2)',\n                        zIndex: 3,\n                      }}>\n                        {isCorrect ? '✓ Doğru' : '✗ Yanlış'}\n                      </span>\n                    )}\n                  </Button>\n                );\n              })\n            ) : (\n              <Typography color=\"error\" fontWeight={600} mb={2}>Bu sorunun seçenekleri eksik veya hatalı.</Typography>\n            )}\n          </Box>\n          {showResult && (\n            <Box sx={{ mb: 2 }}>\n              <Typography color={compareAnswers(selected || '', q.correct) ? 'success.main' : 'error.main'} fontWeight={700} mb={1}>\n                {compareAnswers(selected || '', q.correct) ? 'Doğru!' : `Doğru Yanıt: ${getCorrectAnswerText()}`}\n              </Typography>\n              <Button variant=\"text\" onClick={() => setShowExplanation(e => !e)}>\n                {showExplanation ? 'Çözümü Gizle' : 'Çözümü Göster'}\n              </Button>\n              {showExplanation && (\n                <Typography mt={2} color=\"text.secondary\">{q.explanation}</Typography>\n              )}\n            </Box>\n          )}\n          {/* Bitir button, only show if not finished */}\n          {!showSummary && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                sx={{ fontWeight: 700, fontSize: 18, borderRadius: 3, px: 4, py: 1.5, boxShadow: 2, textTransform: 'none' }}\n                onClick={handleFinish}\n              >\n                Bitir\n              </Button>\n            </Box>\n          )}\n        </Paper>\n      )}\n      {/* Result popup bubble with question review */}\n      {showSummary && (\n        <Box sx={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', bgcolor: 'rgba(10,29,86,0.7)', zIndex: 9999, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Box sx={{ bgcolor: '#fff', borderRadius: 6, boxShadow: 8, p: 4, minWidth: 320, maxWidth: '90vw', textAlign: 'center', position: 'relative' }}>\n            <Typography variant=\"h5\" fontWeight={700} color=\"#19376D\" mb={2}>Sınav Sonucu</Typography>\n            <Typography fontSize={20} fontWeight={600} color=\"#43ea7c\" mb={1}>Doğru: {score}</Typography>\n            <Typography fontSize={20} fontWeight={600} color=\"#e74c3c\" mb={1}>Yanlış: {mistakes}</Typography>\n            <Typography fontSize={20} fontWeight={600} color=\"#f39c12\" mb={1}>Boş: {answers.filter(answer => answer === null || answer === undefined || answer === '').length}</Typography>\n            <Typography fontSize={18} fontWeight={500} color=\"#19376D\" mb={2}>Süre: {Math.floor(time / 60)}:{(time % 60).toString().padStart(2, '0')}</Typography>\n            {/* Question review list */}\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, justifyContent: 'center', mb: 3 }}>\n              {questions.map((question, idx) => {\n                const userAnswer = answers[idx];\n                const isUnanswered = userAnswer === null || userAnswer === undefined || userAnswer === '';\n                const isCorrect = !isUnanswered && compareAnswers(userAnswer, question.correct);\n                \n                // Determine colors based on answer status\n                let borderColor, textColor, backgroundColor, hoverColor;\n                if (isUnanswered) {\n                  // Boş bırakılan sorular - turuncu\n                  borderColor = '#f39c12';\n                  textColor = '#f39c12';\n                  backgroundColor = '#fdf6e3';\n                  hoverColor = '#f8e49a';\n                } else if (isCorrect) {\n                  // Doğru cevaplar - yeşil\n                  borderColor = '#43ea7c';\n                  textColor = '#43ea7c';\n                  backgroundColor = '#eafaf3';\n                  hoverColor = '#c6f7e2';\n                } else {\n                  // Yanlış cevaplar - kırmızı\n                  borderColor = '#e74c3c';\n                  textColor = '#e74c3c';\n                  backgroundColor = '#fff0f0';\n                  hoverColor = '#ffe3e3';\n                }\n                \n                return (\n                  <Button\n                    key={idx}\n                    variant=\"outlined\"\n                    sx={{\n                      minWidth: 48,\n                      height: 48,\n                      fontWeight: 700,\n                      fontSize: 18,\n                      borderRadius: 3,\n                      border: 'none',\n                      color: '#ffffff',\n                      background: !answers[idx] \n                        ? 'linear-gradient(135deg, #f39c12 0%, #e67e22 100%)'\n                        : isCorrect\n                          ? 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)'\n                          : 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)',\n                      backdropFilter: 'blur(10px)',\n                      boxShadow: '0 6px 20px rgba(0, 0, 0, 0.15)',\n                      mx: 0.5,\n                      my: 0.5,\n                      transition: 'all 0.3s ease',\n                      '&:hover': {\n                        transform: 'translateY(-3px)',\n                        boxShadow: '0 8px 25px rgba(0, 0, 0, 0.2)',\n                      },\n                    }}\n                    onClick={() => {\n                      setReviewMode(true);\n                      setShowSummary(false);\n                      setCurrent(idx);\n                      setSelected(answers[idx] || null);\n                      setShowResult(!!answers[idx]);\n                      setShowExplanation(false);\n                    }}\n                  >\n                    {idx + 1}\n                  </Button>\n                );\n              })}\n            </Box>\n            <Typography fontSize={15} color=\"#19376D\" mb={2}>\n              Soruları incelemek için tıklayın. Yeşil: Doğru, Kırmızı: Yanlış, Turuncu: Boş\n            </Typography>\n            {/* Action buttons */}\n            <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mt: 2, flexWrap: 'wrap' }}>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                sx={{ fontWeight: 700, fontSize: 16, borderRadius: 3, px: 4, py: 1.2, boxShadow: 2, textTransform: 'none' }}\n                onClick={handleAddRanking}\n              >\n                Sıralamaya Ekle\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                sx={{ fontWeight: 700, fontSize: 16, borderRadius: 3, px: 4, py: 1.2, boxShadow: 2, textTransform: 'none' }}\n                onClick={() => {\n                  navigate('/categories');\n                }}\n              >\n                Kapat\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ fontWeight: 700, fontSize: 16, borderRadius: 3, px: 4, py: 1.2, boxShadow: 2, textTransform: 'none' }}\n                onClick={() => {\n                  handleCloseSummary();\n                }}\n              >\n                Tekrar Çöz\n              </Button>\n            </Box>\n            {/* Login warning text */}\n            {!localStorage.getItem('token') && (\n              <Typography \n                variant=\"caption\" \n                sx={{ \n                  display: 'block',\n                  textAlign: 'center', \n                  mt: 1, \n                  fontSize: '0.75rem',\n                  color: '#666',\n                  fontStyle: 'italic'\n                }}\n              >\n                Sıralamaya eklemek için üye girişi gerekli veya kayıt olmalısınız\n              </Typography>\n            )}\n          </Box>\n        </Box>\n      )}\n      {reviewMode && (\n        <Paper \n          elevation={6} \n          sx={{ \n            p: 5, \n            borderRadius: 4, \n            minWidth: 340, \n            maxWidth: 600, \n            width: '100%', \n            background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(255, 255, 255, 0.2)',\n            boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',\n            transition: 'transform 0.3s ease',\n            '&:hover': {\n              transform: 'translateY(-5px)',\n            }\n          }}\n        >\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mb: 2 }}>\n            <Typography \n              variant=\"h5\" \n              fontWeight={700} \n              align=\"center\"\n              sx={{\n                background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n                backgroundClip: 'text',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent',\n                textShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n              }}\n            >\n              Soru {current + 1} / {questions.length} (İnceleme)\n            </Typography>\n          </Box>\n          <Typography \n            variant=\"h6\" \n            mb={3}\n            sx={{\n              color: '#2c3e50',\n              fontWeight: 600,\n              fontSize: '1.2rem',\n              lineHeight: 1.6,\n              textAlign: 'center',\n              padding: '16px',\n              background: 'rgba(255, 255, 255, 0.7)',\n              borderRadius: '12px',\n              border: '1px solid rgba(0, 184, 148, 0.2)',\n            }}\n          >\n            {q.text}\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mb: 3 }}>\n            {options.length > 0 ? (\n              options.map((opt, idx) => {\n                const optionLetter = String.fromCharCode(65 + idx); // A, B, C, D\n                const isSelected = answers[current] === optionLetter;\n                const isCorrect = compareAnswers(optionLetter, q.correct);\n                const showColor = !!answers[current];\n                return (\n                  <Button\n                    key={idx}\n                    variant={isSelected ? 'contained' : 'outlined'}\n                    color={showColor ? (isCorrect ? 'primary' : isSelected ? 'error' : 'primary') : 'primary'}\n                    sx={{\n                      textAlign: 'left',\n                      fontWeight: 600,\n                      fontSize: 18,\n                      borderRadius: 4,\n                      py: 2,\n                      px: 2,\n                      background: !showColor \n                        ? 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%)'\n                        : isSelected\n                          ? (isCorrect\n                              ? 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)'\n                              : 'linear-gradient(135deg, #e74c3c 0%, #c0392b 100%)')\n                          : (isCorrect\n                              ? 'linear-gradient(135deg, rgba(0, 184, 148, 0.1) 0%, rgba(0, 206, 201, 0.1) 100%)'\n                              : 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(255,255,255,0.7) 100%)'),\n                      color: showColor && isSelected ? '#ffffff' : isCorrect && showColor ? '#00b894' : '#2c3e50',\n                      border: isCorrect && showColor && !isSelected\n                        ? '2px solid #00b894'\n                        : showColor && isSelected\n                          ? 'none'\n                          : '2px solid rgba(0, 184, 148, 0.3)',\n                      backdropFilter: 'blur(10px)',\n                      boxShadow: isSelected \n                        ? '0 8px 25px rgba(0, 184, 148, 0.3)' \n                        : isCorrect && showColor\n                          ? '0 4px 15px rgba(0, 184, 148, 0.2)'\n                          : '0 4px 15px rgba(0, 0, 0, 0.1)',\n                      position: 'relative',\n                      transition: 'all 0.3s ease',\n                      pointerEvents: 'none',\n                    }}\n                    disabled\n                  >\n                    <span style={{ position: 'relative', zIndex: 2 }}>{String.fromCharCode(65 + idx)}) {opt}</span>\n                    {showColor && isSelected && (\n                      <span style={{\n                        position: 'absolute',\n                        right: 16,\n                        top: '50%',\n                        transform: 'translateY(-50%)',\n                        fontWeight: 700,\n                        fontSize: 18,\n                        color: isCorrect ? '#43ea7c' : '#e74c3c',\n                        background: isCorrect ? '#eafaf3' : '#fff0f0',\n                        borderRadius: 8,\n                        padding: '2px 12px',\n                        boxShadow: '0 2px 8px rgba(67,234,124,0.08)',\n                        zIndex: 3,\n                      }}>\n                        {isCorrect ? 'Doğru' : 'Yanlış'}\n                      </span>\n                    )}\n                  </Button>\n                );\n              })\n            ) : (\n              <Typography color=\"error\" fontWeight={600} mb={2}>Bu sorunun seçenekleri eksik veya hatalı.</Typography>\n            )}\n          </Box>\n          {/* Show explanation toggle and content in review mode */}\n          {!!q.explanation && (\n            <Box sx={{ mb: 2 }}>\n              <Button variant=\"text\" onClick={() => setShowExplanation(e => !e)}>\n                {showExplanation ? 'Çözümü Gizle' : 'Çözümü Göster'}\n              </Button>\n              {showExplanation && (\n                <Typography mt={2} color=\"text.secondary\">{q.explanation}</Typography>\n              )}\n            </Box>\n          )}\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              sx={{ fontWeight: 700, fontSize: 16, borderRadius: 3, px: 4, py: 1.2, boxShadow: 2, textTransform: 'none' }}\n              onClick={() => {\n                setReviewMode(false);\n                setShowSummary(true);\n                setShowExplanation(false);\n              }}\n            >\n              Sonuçlara Dön\n            </Button>\n          </Box>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default Exam;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}