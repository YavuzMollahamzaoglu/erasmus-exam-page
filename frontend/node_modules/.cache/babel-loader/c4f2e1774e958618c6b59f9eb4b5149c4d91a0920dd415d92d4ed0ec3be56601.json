{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nconst PATH_LABELS = {\n  '/': 'Ana Sayfa',\n  '/questions': 'Klasik Sorular',\n  '/categories': 'Kategoriler',\n  '/rankings': 'Sıralamalar',\n  '/words': 'Kelimeler',\n  '/history': 'Geçmiş',\n  '/about': 'Hakkında'\n};\nfunction labelFor(pathname) {\n  if (PATH_LABELS[pathname]) return PATH_LABELS[pathname];\n  if (pathname.startsWith('/exam/')) return 'Sınav';\n  return 'Sayfa';\n}\nexport default function RouteTracker() {\n  _s();\n  const location = useLocation();\n  useEffect(() => {\n    // Record last path when route changes\n    const prev = sessionStorage.getItem('currentPath') || '';\n    if (prev) sessionStorage.setItem('lastPath', prev);\n    sessionStorage.setItem('currentPath', location.pathname);\n    sessionStorage.setItem('currentLabel', labelFor(location.pathname));\n  }, [location.pathname]);\n  return null;\n}\n_s(RouteTracker, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = RouteTracker;\nvar _c;\n$RefreshReg$(_c, \"RouteTracker\");","map":{"version":3,"names":["useEffect","useLocation","PATH_LABELS","labelFor","pathname","startsWith","RouteTracker","_s","location","prev","sessionStorage","getItem","setItem","_c","$RefreshReg$"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/components/RouteTracker.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst PATH_LABELS: Record<string, string> = {\n  '/': 'Ana Sayfa',\n  '/questions': 'Klasik Sorular',\n  '/categories': 'Kategoriler',\n  '/rankings': 'Sıralamalar',\n  '/words': 'Kelimeler',\n  '/history': 'Geçmiş',\n  '/about': 'Hakkında',\n};\n\nfunction labelFor(pathname: string) {\n  if (PATH_LABELS[pathname]) return PATH_LABELS[pathname];\n  if (pathname.startsWith('/exam/')) return 'Sınav';\n  return 'Sayfa';\n}\n\nexport default function RouteTracker() {\n  const location = useLocation();\n  useEffect(() => {\n    // Record last path when route changes\n    const prev = sessionStorage.getItem('currentPath') || '';\n    if (prev) sessionStorage.setItem('lastPath', prev);\n    sessionStorage.setItem('currentPath', location.pathname);\n    sessionStorage.setItem('currentLabel', labelFor(location.pathname));\n  }, [location.pathname]);\n  return null;\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAmC,GAAG;EAC1C,GAAG,EAAE,WAAW;EAChB,YAAY,EAAE,gBAAgB;EAC9B,aAAa,EAAE,aAAa;EAC5B,WAAW,EAAE,aAAa;EAC1B,QAAQ,EAAE,WAAW;EACrB,UAAU,EAAE,QAAQ;EACpB,QAAQ,EAAE;AACZ,CAAC;AAED,SAASC,QAAQA,CAACC,QAAgB,EAAE;EAClC,IAAIF,WAAW,CAACE,QAAQ,CAAC,EAAE,OAAOF,WAAW,CAACE,QAAQ,CAAC;EACvD,IAAIA,QAAQ,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE,OAAO,OAAO;EACjD,OAAO,OAAO;AAChB;AAEA,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,IAAI,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE;IACxD,IAAIF,IAAI,EAAEC,cAAc,CAACE,OAAO,CAAC,UAAU,EAAEH,IAAI,CAAC;IAClDC,cAAc,CAACE,OAAO,CAAC,aAAa,EAAEJ,QAAQ,CAACJ,QAAQ,CAAC;IACxDM,cAAc,CAACE,OAAO,CAAC,cAAc,EAAET,QAAQ,CAACK,QAAQ,CAACJ,QAAQ,CAAC,CAAC;EACrE,CAAC,EAAE,CAACI,QAAQ,CAACJ,QAAQ,CAAC,CAAC;EACvB,OAAO,IAAI;AACb;AAACG,EAAA,CAVuBD,YAAY;EAAA,QACjBL,WAAW;AAAA;AAAAY,EAAA,GADNP,YAAY;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}