{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/erasmus-exam-page/erasmus-exam-page/frontend/src/pages/Exam.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Paper, Typography, Button, CircularProgress, IconButton } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exam = () => {\n  _s();\n  var _location$state, _location$state2;\n  const {\n    testId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.questions) || []);\n  const [loading, setLoading] = useState((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.questions ? false : true);\n  const [current, setCurrent] = useState(0);\n  const [selected, setSelected] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [score, setScore] = useState(0);\n  const [mistakes, setMistakes] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n  const [time, setTime] = useState(0);\n  const [reviewMode, setReviewMode] = useState(false);\n  const [answers, setAnswers] = useState([]);\n  const [timerPaused, setTimerPaused] = useState(false);\n  const timerRef = useRef(null);\n\n  // Helper function to format text: first letter uppercase, rest lowercase\n  const formatText = text => {\n    if (!text || text.length === 0) return text;\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n  };\n\n  // Helper function for case insensitive comparison\n  const compareAnswers = (answer1, answer2) => {\n    console.log('Comparing:', answer1, 'vs', answer2);\n    console.log('Normalized:', answer1.toLowerCase(), 'vs', answer2.toLowerCase());\n    console.log('Result:', answer1.toLowerCase() === answer2.toLowerCase());\n    return answer1.toLowerCase() === answer2.toLowerCase();\n  };\n  useEffect(() => {\n    var _location$state3;\n    // Only fetch if not coming from state\n    if (!((_location$state3 = location.state) !== null && _location$state3 !== void 0 && _location$state3.questions)) {\n      setLoading(true);\n      fetch(`http://localhost:4000/api/tests/${testId}/questions`).then(res => res.json()).then(data => {\n        const formattedQuestions = (data.questions || []).map(q => {\n          // Parse options if they're in string format\n          let optionsArray = [];\n          if (Array.isArray(q.options)) {\n            optionsArray = q.options.map(formatText);\n          } else if (typeof q.options === 'string') {\n            try {\n              optionsArray = JSON.parse(q.options).map(formatText);\n            } catch {\n              optionsArray = [];\n            }\n          }\n\n          // Convert correct answer to letter if it's a word\n          let correctLetter = q.correct;\n          if (q.correct && q.correct.length > 1) {\n            // If correct is a word, find its index in options and convert to letter\n            const correctIndex = optionsArray.findIndex(option => option.toLowerCase() === q.correct.toLowerCase());\n            if (correctIndex !== -1) {\n              correctLetter = String.fromCharCode(65 + correctIndex); // A, B, C, D\n              console.log(`Converted \"${q.correct}\" to letter \"${correctLetter}\"`);\n            }\n          }\n          return {\n            ...q,\n            options: optionsArray,\n            correct: correctLetter\n          };\n        });\n        setQuestions(formattedQuestions);\n        setLoading(false);\n      });\n    } else {\n      // Format questions from state as well\n      const formattedQuestions = location.state.questions.map(q => {\n        // Parse options if they're in string format\n        let optionsArray = [];\n        if (Array.isArray(q.options)) {\n          optionsArray = q.options.map(formatText);\n        } else if (typeof q.options === 'string') {\n          try {\n            optionsArray = JSON.parse(q.options).map(formatText);\n          } catch {\n            optionsArray = [];\n          }\n        }\n\n        // Convert correct answer to letter if it's a word\n        let correctLetter = q.correct;\n        if (q.correct && q.correct.length > 1) {\n          // If correct is a word, find its index in options and convert to letter\n          const correctIndex = optionsArray.findIndex(option => option.toLowerCase() === q.correct.toLowerCase());\n          if (correctIndex !== -1) {\n            correctLetter = String.fromCharCode(65 + correctIndex); // A, B, C, D\n            console.log(`Converted \"${q.correct}\" to letter \"${correctLetter}\"`);\n          }\n        }\n        return {\n          ...q,\n          options: optionsArray,\n          correct: correctLetter\n        };\n      });\n      setQuestions(formattedQuestions);\n    }\n  }, [testId, location.state]);\n\n  // Initialize answers array when questions are loaded\n  useEffect(() => {\n    if (questions.length > 0 && answers.length !== questions.length) {\n      setAnswers(Array(questions.length).fill(null));\n    }\n  }, [questions, answers.length]);\n\n  // Timer logic - pause when answer is selected or exam is finished\n  useEffect(() => {\n    if (showSummary || timerPaused) return;\n    timerRef.current = setInterval(() => {\n      setTime(t => t + 1);\n    }, 1000);\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [showSummary, timerPaused]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: '100vh',\n        bgcolor: '#f7fafd',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n  if (!questions.length) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      mt: 8,\n      children: \"No questions found for this exam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this);\n  }\n  const q = questions[current];\n  // Ensure options is always an array\n  let options = [];\n  if (Array.isArray(q.options)) {\n    options = q.options;\n  } else if (typeof q.options === 'string') {\n    try {\n      options = JSON.parse(q.options);\n    } catch {\n      options = [];\n    }\n  }\n\n  // Helper function to get correct answer text\n  const getCorrectAnswerText = () => {\n    if (!q.correct || options.length === 0) return q.correct;\n    const correctIndex = q.correct.charCodeAt(0) - 65; // A=0, B=1, C=2, D=3\n    const correctText = options[correctIndex];\n    return correctText ? `${q.correct}) ${correctText}` : q.correct;\n  };\n  const handleSelect = optionIndex => {\n    const selectedLetter = String.fromCharCode(65 + optionIndex); // 0->A, 1->B, 2->C, 3->D\n    console.log('Selected option index:', optionIndex);\n    console.log('Selected letter:', selectedLetter);\n    console.log('Question correct answer:', q.correct);\n    console.log('Question correct answer type:', typeof q.correct);\n    setSelected(selectedLetter);\n    setShowResult(true);\n    setTimerPaused(true); // Pause timer when answer is selected\n    setAnswers(prev => {\n      const copy = [...prev];\n      copy[current] = selectedLetter;\n      return copy;\n    });\n    if (compareAnswers(selectedLetter, q.correct)) {\n      setScore(s => s + 1);\n    } else {\n      setMistakes(m => m + 1);\n    }\n  };\n  const nextQuestion = () => {\n    if (current < questions.length - 1) {\n      setCurrent(c => c + 1);\n      setSelected(answers[current + 1] || null);\n      setShowResult(!!answers[current + 1]);\n      setShowExplanation(false);\n      setTimerPaused(false); // Resume timer when moving to next question\n    }\n  };\n\n  // Sınavı history'ye kaydet\n  const saveToHistory = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      var _questions$, _questions$2, _questions$3, _questions$4;\n      await fetch('http://localhost:4000/api/history', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? {\n            'Authorization': `Bearer ${token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          category: typeof ((_questions$ = questions[0]) === null || _questions$ === void 0 ? void 0 : _questions$.categoryId) === 'string' ? (_questions$2 = questions[0]) === null || _questions$2 === void 0 ? void 0 : _questions$2.categoryId : String((_questions$3 = questions[0]) === null || _questions$3 === void 0 ? void 0 : _questions$3.categoryId),\n          seriesId: ((_questions$4 = questions[0]) === null || _questions$4 === void 0 ? void 0 : _questions$4.seriesId) || null,\n          duration: time,\n          correct: score,\n          incorrect: mistakes,\n          questions: questions.map((q, idx) => ({\n            questionId: q.id,\n            userAnswer: answers[idx],\n            isCorrect: answers[idx] ? compareAnswers(answers[idx], q.correct) : false\n          }))\n        })\n      });\n    } catch (e) {}\n  };\n  const handleFinish = async () => {\n    // Ensure answers array is properly sized\n    if (answers.length === 0 || answers.length !== questions.length) {\n      setAnswers(Array(questions.length).fill(null));\n    }\n\n    // Calculate final scores\n    let correctCount = 0;\n    let incorrectCount = 0;\n    let unansweredCount = 0;\n    questions.forEach((question, idx) => {\n      const userAnswer = answers[idx];\n      if (userAnswer === null || userAnswer === undefined || userAnswer === '') {\n        unansweredCount++;\n      } else if (compareAnswers(userAnswer, question.correct)) {\n        correctCount++;\n      } else {\n        incorrectCount++;\n      }\n    });\n\n    // Update state with calculated scores\n    setScore(correctCount);\n    setMistakes(incorrectCount);\n    setShowSummary(true);\n    setReviewMode(false);\n    setTimerPaused(true); // Permanently pause timer when exam is finished\n    if (timerRef.current) clearInterval(timerRef.current);\n    await saveToHistory();\n  };\n  const handleCloseSummary = () => {\n    setShowSummary(false);\n    setReviewMode(false);\n    setCurrent(0);\n    setSelected(null);\n    setShowResult(false);\n    setShowExplanation(false);\n    setScore(0);\n    setMistakes(0);\n    setTime(0);\n    setAnswers([]);\n  };\n  const handleAddRanking = () => {\n    // Send all relevant exam result data to backend\n    const categoryId = q.categoryId;\n    const seriesId = q.seriesId;\n    fetch('http://localhost:4000/api/rankings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify({\n        score,\n        time,\n        categoryId,\n        seriesId,\n        correct: score,\n        mistakes\n      })\n    }).then(async res => {\n      let data;\n      try {\n        data = await res.json();\n      } catch (e) {\n        data = {};\n      }\n      if (!res.ok) {\n        var _data, _data2;\n        console.error('Ranking save error:', data);\n        let errorMessage = 'Failed to save ranking: ' + (((_data = data) === null || _data === void 0 ? void 0 : _data.message) || res.statusText);\n\n        // Check for authentication related errors\n        if (((_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.message) === 'Authorization header missing' || res.status === 401) {\n          errorMessage = 'Giriş yapmak zorunludur\\n(Bu exam kısmında bitire bastıktan sonra çıkan yerde gözükecek)';\n        }\n        alert(errorMessage);\n        return;\n      }\n      setShowSummary(false);\n      navigate('/rankings');\n    }).catch(err => {\n      console.error('Ranking save error:', err);\n      alert('Failed to save ranking. Network error.');\n    });\n  };\n  const prevQuestion = () => {\n    if (current > 0) {\n      setCurrent(c => c - 1);\n      setSelected(answers[current - 1] || null);\n      setShowResult(!!answers[current - 1]);\n      setShowExplanation(false);\n      // If the previous question was already answered, keep timer paused\n      setTimerPaused(!!answers[current - 1]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      bgcolor: '#dbeafe',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 90,\n        right: 32,\n        zIndex: 1000,\n        bgcolor: timerPaused ? '#ffeb3b' : '#b6d4fa',\n        color: '#19376D',\n        px: 2,\n        py: 0.5,\n        borderRadius: 2,\n        fontWeight: 700,\n        fontSize: 18,\n        boxShadow: 2,\n        display: 'flex',\n        alignItems: 'center',\n        gap: 1,\n        transition: 'background-color 0.3s ease'\n      },\n      children: [timerPaused && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u23F8\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 25\n      }, this), Math.floor(time / 60), \":\", (time % 60).toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        position: 'absolute',\n        left: {\n          xs: 8,\n          md: 32\n        },\n        top: '50%',\n        transform: 'translateY(-50%)',\n        bgcolor: current > 0 ? '#e3eafc' : '#f7fafd',\n        color: '#19376D',\n        boxShadow: 2,\n        borderRadius: 2,\n        p: 2,\n        cursor: current > 0 ? 'pointer' : 'default',\n        opacity: current > 0 ? 1 : 0.5,\n        transition: 'all 0.2s',\n        '&:hover': {\n          bgcolor: current > 0 ? '#b6d4fa' : '#e3eafc'\n        }\n      },\n      onClick: prevQuestion,\n      disabled: current === 0,\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        position: 'absolute',\n        right: {\n          xs: 8,\n          md: 32\n        },\n        top: '50%',\n        transform: 'translateY(-50%)',\n        bgcolor: current < questions.length - 1 ? '#e3eafc' : '#f7fafd',\n        color: '#19376D',\n        boxShadow: 2,\n        borderRadius: 2,\n        p: 2,\n        cursor: current < questions.length - 1 ? 'pointer' : 'default',\n        opacity: current < questions.length - 1 ? 1 : 0.5,\n        transition: 'all 0.2s',\n        '&:hover': {\n          bgcolor: current < questions.length - 1 ? '#b6d4fa' : '#e3eafc'\n        }\n      },\n      onClick: nextQuestion,\n      disabled: current === questions.length - 1,\n      children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), !reviewMode && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        p: 5,\n        borderRadius: 4,\n        minWidth: 340,\n        maxWidth: 600,\n        width: '100%',\n        boxShadow: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: 700,\n          align: \"center\",\n          children: [\"Soru \", current + 1, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        mb: 2,\n        children: q.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          mb: 3\n        },\n        children: options.length > 0 ? options.map((opt, idx) => {\n          const optionLetter = String.fromCharCode(65 + idx); // A, B, C, D\n          const isSelected = selected === optionLetter;\n          const isCorrect = compareAnswers(optionLetter, q.correct);\n          const showColor = !!selected;\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: isSelected ? 'contained' : 'outlined',\n            color: showColor ? isCorrect ? 'primary' : isSelected ? 'error' : 'primary' : 'primary',\n            sx: {\n              textAlign: 'left',\n              fontWeight: 600,\n              fontSize: 18,\n              borderRadius: 4,\n              py: 2,\n              px: 2,\n              boxShadow: isSelected ? '0 2px 12px rgba(67,234,124,0.10)' : undefined,\n              background: showColor && isSelected ? isCorrect ? 'linear-gradient(90deg,#eafaf3,#43ea7c)' : 'linear-gradient(90deg,#fff0f0,#e74c3c)' : undefined,\n              color: showColor && isSelected ? '#19376D' : undefined,\n              border: showColor && isSelected ? isCorrect ? '2px solid #43ea7c' : '2px solid #e74c3c' : undefined,\n              position: 'relative',\n              transition: 'none',\n              '&:hover': {\n                background: !showColor ? '#b6d4fa !important' : undefined,\n                color: !showColor ? '#19376D !important' : undefined,\n                boxShadow: '0 2px 12px rgba(25,55,109,0.10)',\n                transition: 'none'\n              }\n            },\n            onClick: () => !showResult && handleSelect(idx),\n            disabled: !!selected,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'relative',\n                zIndex: 2\n              },\n              children: [String.fromCharCode(65 + idx), \") \", opt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 21\n            }, this), showColor && isSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                right: 16,\n                top: '50%',\n                transform: 'translateY(-50%)',\n                fontWeight: 700,\n                fontSize: 18,\n                color: isCorrect ? '#43ea7c' : '#e74c3c',\n                background: isCorrect ? '#eafaf3' : '#fff0f0',\n                borderRadius: 8,\n                padding: '2px 12px',\n                boxShadow: '0 2px 8px rgba(67,234,124,0.08)',\n                zIndex: 3\n              },\n              children: isCorrect ? 'Doğru' : 'Yanlış'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 23\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          fontWeight: 600,\n          mb: 2,\n          children: \"Bu sorunun se\\xE7enekleri eksik veya hatal\\u0131.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), showResult && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: compareAnswers(selected || '', q.correct) ? 'success.main' : 'error.main',\n          fontWeight: 700,\n          mb: 1,\n          children: compareAnswers(selected || '', q.correct) ? 'Doğru!' : `Cevabınız Yanlış. Doğru Yanıt: ${getCorrectAnswerText()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => setShowExplanation(e => !e),\n          children: showExplanation ? 'Çözümü Gizle' : 'Çözümü Göster'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 15\n        }, this), showExplanation && /*#__PURE__*/_jsxDEV(Typography, {\n          mt: 2,\n          color: \"text.secondary\",\n          children: q.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 13\n      }, this), !showSummary && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          sx: {\n            fontWeight: 700,\n            fontSize: 18,\n            borderRadius: 3,\n            px: 4,\n            py: 1.5,\n            boxShadow: 2,\n            textTransform: 'none'\n          },\n          onClick: handleFinish,\n          children: \"Bitir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this), showSummary && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        bgcolor: 'rgba(10,29,86,0.7)',\n        zIndex: 9999,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: '#fff',\n          borderRadius: 6,\n          boxShadow: 8,\n          p: 4,\n          minWidth: 320,\n          maxWidth: '90vw',\n          textAlign: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: 700,\n          color: \"#19376D\",\n          mb: 2,\n          children: \"S\\u0131nav Sonucu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 20,\n          fontWeight: 600,\n          color: \"#43ea7c\",\n          mb: 1,\n          children: [\"Do\\u011Fru: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 20,\n          fontWeight: 600,\n          color: \"#e74c3c\",\n          mb: 1,\n          children: [\"Yanl\\u0131\\u015F: \", mistakes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 20,\n          fontWeight: 600,\n          color: \"#f39c12\",\n          mb: 1,\n          children: [\"Bo\\u015F: \", answers.filter(answer => answer === null || answer === undefined || answer === '').length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 18,\n          fontWeight: 500,\n          color: \"#19376D\",\n          mb: 2,\n          children: [\"S\\xFCre: \", Math.floor(time / 60), \":\", (time % 60).toString().padStart(2, '0')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 2,\n            justifyContent: 'center',\n            mb: 3\n          },\n          children: questions.map((question, idx) => {\n            const userAnswer = answers[idx];\n            const isUnanswered = userAnswer === null || userAnswer === undefined || userAnswer === '';\n            const isCorrect = !isUnanswered && compareAnswers(userAnswer, question.correct);\n\n            // Determine colors based on answer status\n            let borderColor, textColor, backgroundColor, hoverColor;\n            if (isUnanswered) {\n              // Boş bırakılan sorular - turuncu\n              borderColor = '#f39c12';\n              textColor = '#f39c12';\n              backgroundColor = '#fdf6e3';\n              hoverColor = '#f8e49a';\n            } else if (isCorrect) {\n              // Doğru cevaplar - yeşil\n              borderColor = '#43ea7c';\n              textColor = '#43ea7c';\n              backgroundColor = '#eafaf3';\n              hoverColor = '#c6f7e2';\n            } else {\n              // Yanlış cevaplar - kırmızı\n              borderColor = '#e74c3c';\n              textColor = '#e74c3c';\n              backgroundColor = '#fff0f0';\n              hoverColor = '#ffe3e3';\n            }\n            return /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              sx: {\n                minWidth: 48,\n                height: 48,\n                fontWeight: 700,\n                fontSize: 18,\n                borderRadius: 2,\n                borderColor: borderColor,\n                color: textColor,\n                background: backgroundColor,\n                boxShadow: `0 2px 8px ${borderColor}20`,\n                mx: 0.5,\n                my: 0.5,\n                transition: 'all 0.2s',\n                '&:hover': {\n                  background: hoverColor\n                }\n              },\n              onClick: () => {\n                setReviewMode(true);\n                setShowSummary(false);\n                setCurrent(idx);\n                setSelected(answers[idx] || null);\n                setShowResult(!!answers[idx]);\n                setShowExplanation(false);\n              },\n              children: idx + 1\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          fontSize: 15,\n          color: \"#19376D\",\n          mb: 2,\n          children: \"Sorular\\u0131 incelemek i\\xE7in t\\u0131klay\\u0131n. Ye\\u015Fil: Do\\u011Fru, K\\u0131rm\\u0131z\\u0131: Yanl\\u0131\\u015F, Turuncu: Bo\\u015F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            gap: 2,\n            mt: 2,\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            sx: {\n              fontWeight: 700,\n              fontSize: 16,\n              borderRadius: 3,\n              px: 4,\n              py: 1.2,\n              boxShadow: 2,\n              textTransform: 'none'\n            },\n            onClick: handleAddRanking,\n            children: \"S\\u0131ralamaya Ekle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            sx: {\n              fontWeight: 700,\n              fontSize: 16,\n              borderRadius: 3,\n              px: 4,\n              py: 1.2,\n              boxShadow: 2,\n              textTransform: 'none'\n            },\n            onClick: () => {\n              navigate('/categories');\n            },\n            children: \"Kapat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              fontWeight: 700,\n              fontSize: 16,\n              borderRadius: 3,\n              px: 4,\n              py: 1.2,\n              boxShadow: 2,\n              textTransform: 'none'\n            },\n            onClick: () => {\n              handleCloseSummary();\n            },\n            children: \"Tekrar \\xC7\\xF6z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 9\n    }, this), reviewMode && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        p: 5,\n        borderRadius: 4,\n        minWidth: 340,\n        maxWidth: 600,\n        width: '100%',\n        boxShadow: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: 700,\n          align: \"center\",\n          children: [\"Soru \", current + 1, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        mb: 2,\n        children: q.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          mb: 3\n        },\n        children: options.length > 0 ? options.map((opt, idx) => {\n          const optionLetter = String.fromCharCode(65 + idx); // A, B, C, D\n          const isSelected = answers[current] === optionLetter;\n          const isCorrect = compareAnswers(optionLetter, q.correct);\n          const showColor = !!answers[current];\n          return /*#__PURE__*/_jsxDEV(Button, {\n            variant: isSelected ? 'contained' : 'outlined',\n            color: showColor ? isCorrect ? 'primary' : isSelected ? 'error' : 'primary' : 'primary',\n            sx: {\n              textAlign: 'left',\n              fontWeight: 600,\n              fontSize: 18,\n              borderRadius: 4,\n              py: 2,\n              px: 2,\n              boxShadow: isSelected ? '0 2px 12px rgba(67,234,124,0.10)' : undefined,\n              background: showColor && isSelected ? isCorrect ? 'linear-gradient(90deg,#eafaf3,#43ea7c)' : 'linear-gradient(90deg,#fff0f0,#e74c3c)' : undefined,\n              color: showColor && isSelected ? '#19376D' : undefined,\n              border: showColor && isSelected ? isCorrect ? '2px solid #43ea7c' : '2px solid #e74c3c' : undefined,\n              position: 'relative',\n              transition: 'none',\n              '&:hover': {\n                background: !showColor ? '#b6d4fa !important' : undefined,\n                color: !showColor ? '#19376D !important' : undefined,\n                boxShadow: '0 2px 12px rgba(25,55,109,0.10)',\n                transition: 'none'\n              }\n            },\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'relative',\n                zIndex: 2\n              },\n              children: [String.fromCharCode(65 + idx), \") \", opt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 21\n            }, this), showColor && isSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                right: 16,\n                top: '50%',\n                transform: 'translateY(-50%)',\n                fontWeight: 700,\n                fontSize: 18,\n                color: isCorrect ? '#43ea7c' : '#e74c3c',\n                background: isCorrect ? '#eafaf3' : '#fff0f0',\n                borderRadius: 8,\n                padding: '2px 12px',\n                boxShadow: '0 2px 8px rgba(67,234,124,0.08)',\n                zIndex: 3\n              },\n              children: isCorrect ? 'Doğru' : 'Yanlış'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 23\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          fontWeight: 600,\n          mb: 2,\n          children: \"Bu sorunun se\\xE7enekleri eksik veya hatal\\u0131.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }, this), !!q.explanation && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => setShowExplanation(e => !e),\n          children: showExplanation ? 'Çözümü Gizle' : 'Çözümü Göster'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 15\n        }, this), showExplanation && /*#__PURE__*/_jsxDEV(Typography, {\n          mt: 2,\n          color: \"text.secondary\",\n          children: q.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          sx: {\n            fontWeight: 700,\n            fontSize: 16,\n            borderRadius: 3,\n            px: 4,\n            py: 1.2,\n            boxShadow: 2,\n            textTransform: 'none'\n          },\n          onClick: () => {\n            setReviewMode(false);\n            setShowSummary(true);\n            setShowExplanation(false);\n          },\n          children: \"Sonu\\xE7lara D\\xF6n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s(Exam, \"vfiBmL5dmxINDRn+P9gEh57Dp0I=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = Exam;\nexport default Exam;\nvar _c;\n$RefreshReg$(_c, \"Exam\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","useLocation","useNavigate","Box","Paper","Typography","Button","CircularProgress","IconButton","ArrowBackIcon","ArrowForwardIcon","jsxDEV","_jsxDEV","Exam","_s","_location$state","_location$state2","testId","location","navigate","questions","setQuestions","state","loading","setLoading","current","setCurrent","selected","setSelected","showResult","setShowResult","showExplanation","setShowExplanation","score","setScore","mistakes","setMistakes","showSummary","setShowSummary","time","setTime","reviewMode","setReviewMode","answers","setAnswers","timerPaused","setTimerPaused","timerRef","formatText","text","length","charAt","toUpperCase","slice","toLowerCase","compareAnswers","answer1","answer2","console","log","_location$state3","fetch","then","res","json","data","formattedQuestions","map","q","optionsArray","Array","isArray","options","JSON","parse","correctLetter","correct","correctIndex","findIndex","option","String","fromCharCode","fill","setInterval","t","clearInterval","sx","minHeight","bgcolor","display","alignItems","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","align","mt","getCorrectAnswerText","charCodeAt","correctText","handleSelect","optionIndex","selectedLetter","prev","copy","s","m","nextQuestion","c","saveToHistory","token","localStorage","getItem","_questions$","_questions$2","_questions$3","_questions$4","method","headers","body","stringify","category","categoryId","seriesId","duration","incorrect","idx","questionId","id","userAnswer","isCorrect","e","handleFinish","correctCount","incorrectCount","unansweredCount","forEach","question","undefined","handleCloseSummary","handleAddRanking","Authorization","ok","_data","_data2","error","errorMessage","message","statusText","status","alert","catch","err","prevQuestion","position","top","right","zIndex","color","px","py","borderRadius","fontWeight","fontSize","boxShadow","gap","transition","Math","floor","toString","padStart","left","xs","md","transform","p","cursor","opacity","onClick","disabled","elevation","minWidth","maxWidth","width","mb","variant","flexDirection","opt","optionLetter","isSelected","showColor","textAlign","background","border","style","padding","explanation","textTransform","height","filter","answer","flexWrap","isUnanswered","borderColor","textColor","backgroundColor","hoverColor","mx","my","_c","$RefreshReg$"],"sources":["/Users/yavuz/erasmus-exam-page/erasmus-exam-page/frontend/src/pages/Exam.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Paper, Typography, Button, CircularProgress, IconButton } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\ninterface Question {\n  id: string;\n  text: string;\n  options: string[];\n  correct: string;\n  explanation: string;\n  categoryId: number;\n  seriesId: string;\n}\n\nconst Exam: React.FC = () => {\n  const { testId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState<Question[]>(location.state?.questions || []);\n  const [loading, setLoading] = useState(location.state?.questions ? false : true);\n  const [current, setCurrent] = useState(0);\n  const [selected, setSelected] = useState<string | null>(null);\n  const [showResult, setShowResult] = useState(false);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [score, setScore] = useState(0);\n  const [mistakes, setMistakes] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n  const [time, setTime] = useState(0);\n  const [reviewMode, setReviewMode] = useState(false);\n  const [answers, setAnswers] = useState<(string | null)[]>([]);\n  const [timerPaused, setTimerPaused] = useState(false);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Helper function to format text: first letter uppercase, rest lowercase\n  const formatText = (text: string) => {\n    if (!text || text.length === 0) return text;\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n  };\n\n  // Helper function for case insensitive comparison\n  const compareAnswers = (answer1: string, answer2: string) => {\n    console.log('Comparing:', answer1, 'vs', answer2);\n    console.log('Normalized:', answer1.toLowerCase(), 'vs', answer2.toLowerCase());\n    console.log('Result:', answer1.toLowerCase() === answer2.toLowerCase());\n    return answer1.toLowerCase() === answer2.toLowerCase();\n  };\n\n  useEffect(() => {\n    // Only fetch if not coming from state\n    if (!location.state?.questions) {\n      setLoading(true);\n      fetch(`http://localhost:4000/api/tests/${testId}/questions`)\n        .then(res => res.json())\n        .then(data => {\n          const formattedQuestions = (data.questions || []).map((q: Question) => {\n            // Parse options if they're in string format\n            let optionsArray: string[] = [];\n            if (Array.isArray(q.options)) {\n              optionsArray = q.options.map(formatText);\n            } else if (typeof q.options === 'string') {\n              try {\n                optionsArray = JSON.parse(q.options).map(formatText);\n              } catch {\n                optionsArray = [];\n              }\n            }\n\n            // Convert correct answer to letter if it's a word\n            let correctLetter = q.correct;\n            if (q.correct && q.correct.length > 1) {\n              // If correct is a word, find its index in options and convert to letter\n              const correctIndex = optionsArray.findIndex(option => \n                option.toLowerCase() === q.correct.toLowerCase()\n              );\n              if (correctIndex !== -1) {\n                correctLetter = String.fromCharCode(65 + correctIndex); // A, B, C, D\n                console.log(`Converted \"${q.correct}\" to letter \"${correctLetter}\"`);\n              }\n            }\n\n            return {\n              ...q,\n              options: optionsArray,\n              correct: correctLetter\n            };\n          });\n          setQuestions(formattedQuestions);\n          setLoading(false);\n        });\n    } else {\n      // Format questions from state as well\n      const formattedQuestions = location.state.questions.map((q: Question) => {\n        // Parse options if they're in string format\n        let optionsArray: string[] = [];\n        if (Array.isArray(q.options)) {\n          optionsArray = q.options.map(formatText);\n        } else if (typeof q.options === 'string') {\n          try {\n            optionsArray = JSON.parse(q.options).map(formatText);\n          } catch {\n            optionsArray = [];\n          }\n        }\n\n        // Convert correct answer to letter if it's a word\n        let correctLetter = q.correct;\n        if (q.correct && q.correct.length > 1) {\n          // If correct is a word, find its index in options and convert to letter\n          const correctIndex = optionsArray.findIndex(option => \n            option.toLowerCase() === q.correct.toLowerCase()\n          );\n          if (correctIndex !== -1) {\n            correctLetter = String.fromCharCode(65 + correctIndex); // A, B, C, D\n            console.log(`Converted \"${q.correct}\" to letter \"${correctLetter}\"`);\n          }\n        }\n\n        return {\n          ...q,\n          options: optionsArray,\n          correct: correctLetter\n        };\n      });\n      setQuestions(formattedQuestions);\n    }\n  }, [testId, location.state]);\n\n  // Initialize answers array when questions are loaded\n  useEffect(() => {\n    if (questions.length > 0 && answers.length !== questions.length) {\n      setAnswers(Array(questions.length).fill(null));\n    }\n  }, [questions, answers.length]);\n\n  // Timer logic - pause when answer is selected or exam is finished\n  useEffect(() => {\n    if (showSummary || timerPaused) return;\n    timerRef.current = setInterval(() => {\n      setTime((t) => t + 1);\n    }, 1000);\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [showSummary, timerPaused]);\n\n  if (loading) {\n    return (\n      <Box sx={{ minHeight: '100vh', bgcolor: '#f7fafd', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (!questions.length) {\n    return <Typography align=\"center\" mt={8}>No questions found for this exam.</Typography>;\n  }\n\n  const q = questions[current];\n  // Ensure options is always an array\n  let options: string[] = [];\n  if (Array.isArray(q.options)) {\n    options = q.options;\n  } else if (typeof q.options === 'string') {\n    try {\n      options = JSON.parse(q.options);\n    } catch {\n      options = [];\n    }\n  }\n\n  // Helper function to get correct answer text\n  const getCorrectAnswerText = () => {\n    if (!q.correct || options.length === 0) return q.correct;\n    const correctIndex = q.correct.charCodeAt(0) - 65; // A=0, B=1, C=2, D=3\n    const correctText = options[correctIndex];\n    return correctText ? `${q.correct}) ${correctText}` : q.correct;\n  };\n\n  const handleSelect = (optionIndex: number) => {\n    const selectedLetter = String.fromCharCode(65 + optionIndex); // 0->A, 1->B, 2->C, 3->D\n    console.log('Selected option index:', optionIndex);\n    console.log('Selected letter:', selectedLetter);\n    console.log('Question correct answer:', q.correct);\n    console.log('Question correct answer type:', typeof q.correct);\n    \n    setSelected(selectedLetter);\n    setShowResult(true);\n    setTimerPaused(true); // Pause timer when answer is selected\n    setAnswers((prev) => {\n      const copy = [...prev];\n      copy[current] = selectedLetter;\n      return copy;\n    });\n    if (compareAnswers(selectedLetter, q.correct)) {\n      setScore((s) => s + 1);\n    } else {\n      setMistakes((m) => m + 1);\n    }\n  };\n\n  const nextQuestion = () => {\n    if (current < questions.length - 1) {\n      setCurrent(c => c + 1);\n      setSelected(answers[current + 1] || null);\n      setShowResult(!!answers[current + 1]);\n      setShowExplanation(false);\n      setTimerPaused(false); // Resume timer when moving to next question\n    }\n  };\n\n  // Sınavı history'ye kaydet\n  const saveToHistory = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      await fetch('http://localhost:4000/api/history', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n        },\n        body: JSON.stringify({\n          category: typeof questions[0]?.categoryId === 'string' ? questions[0]?.categoryId : String(questions[0]?.categoryId),\n          seriesId: questions[0]?.seriesId || null,\n          duration: time,\n          correct: score,\n          incorrect: mistakes,\n          questions: questions.map((q, idx) => ({\n            questionId: q.id,\n            userAnswer: answers[idx],\n            isCorrect: answers[idx] ? compareAnswers(answers[idx]!, q.correct) : false\n          }))\n        })\n      });\n    } catch (e) {}\n  };\n\n  const handleFinish = async () => {\n    // Ensure answers array is properly sized\n    if (answers.length === 0 || answers.length !== questions.length) {\n      setAnswers(Array(questions.length).fill(null));\n    }\n    \n    // Calculate final scores\n    let correctCount = 0;\n    let incorrectCount = 0;\n    let unansweredCount = 0;\n    \n    questions.forEach((question, idx) => {\n      const userAnswer = answers[idx];\n      if (userAnswer === null || userAnswer === undefined || userAnswer === '') {\n        unansweredCount++;\n      } else if (compareAnswers(userAnswer, question.correct)) {\n        correctCount++;\n      } else {\n        incorrectCount++;\n      }\n    });\n    \n    // Update state with calculated scores\n    setScore(correctCount);\n    setMistakes(incorrectCount);\n    \n    setShowSummary(true);\n    setReviewMode(false);\n    setTimerPaused(true); // Permanently pause timer when exam is finished\n    if (timerRef.current) clearInterval(timerRef.current);\n    \n    await saveToHistory();\n  };\n\n  const handleCloseSummary = () => {\n    setShowSummary(false);\n    setReviewMode(false);\n    setCurrent(0);\n    setSelected(null);\n    setShowResult(false);\n    setShowExplanation(false);\n    setScore(0);\n    setMistakes(0);\n    setTime(0);\n    setAnswers([]);\n  };\n\n  const handleAddRanking = () => {\n    // Send all relevant exam result data to backend\n    const categoryId = q.categoryId;\n    const seriesId = q.seriesId;\n    fetch('http://localhost:4000/api/rankings', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${localStorage.getItem('token')}` },\n      body: JSON.stringify({ score, time, categoryId, seriesId, correct: score, mistakes }),\n    })\n      .then(async res => {\n        let data;\n        try {\n          data = await res.json();\n        } catch (e) {\n          data = {};\n        }\n        if (!res.ok) {\n          console.error('Ranking save error:', data);\n          let errorMessage = 'Failed to save ranking: ' + (data?.message || res.statusText);\n          \n          // Check for authentication related errors\n          if (data?.message === 'Authorization header missing' || res.status === 401) {\n            errorMessage = 'Giriş yapmak zorunludur\\n(Bu exam kısmında bitire bastıktan sonra çıkan yerde gözükecek)';\n          }\n          \n          alert(errorMessage);\n          return;\n        }\n        setShowSummary(false);\n        navigate('/rankings');\n      })\n      .catch(err => {\n        console.error('Ranking save error:', err);\n        alert('Failed to save ranking. Network error.');\n      });\n  };\n\n  const prevQuestion = () => {\n    if (current > 0) {\n      setCurrent(c => c - 1);\n      setSelected(answers[current - 1] || null);\n      setShowResult(!!answers[current - 1]);\n      setShowExplanation(false);\n      // If the previous question was already answered, keep timer paused\n      setTimerPaused(!!answers[current - 1]);\n    }\n  };\n\n  return (\n    <Box sx={{ minHeight: '100vh', bgcolor: '#dbeafe', display: 'flex', alignItems: 'center', justifyContent: 'center', position: 'relative' }}>\n      {/* Timer at top right with pause indicator */}\n      <Box\n        sx={{\n          position: 'fixed',\n          top: 90,\n          right: 32,\n          zIndex: 1000,\n          bgcolor: timerPaused ? '#ffeb3b' : '#b6d4fa',\n          color: '#19376D',\n          px: 2,\n          py: 0.5,\n          borderRadius: 2,\n          fontWeight: 700,\n          fontSize: 18,\n          boxShadow: 2,\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1,\n          transition: 'background-color 0.3s ease',\n        }}\n      >\n        {timerPaused && <span>⏸️</span>}\n        {Math.floor(time / 60)}:{(time % 60).toString().padStart(2, '0')}\n      </Box>\n      {/* Navigation buttons outside the card */}\n      <IconButton\n        sx={{\n          position: 'absolute',\n          left: { xs: 8, md: 32 },\n          top: '50%',\n          transform: 'translateY(-50%)',\n          bgcolor: current > 0 ? '#e3eafc' : '#f7fafd',\n          color: '#19376D',\n          boxShadow: 2,\n          borderRadius: 2,\n          p: 2,\n          cursor: current > 0 ? 'pointer' : 'default',\n          opacity: current > 0 ? 1 : 0.5,\n          transition: 'all 0.2s',\n          '&:hover': {\n            bgcolor: current > 0 ? '#b6d4fa' : '#e3eafc',\n          },\n        }}\n        onClick={prevQuestion}\n        disabled={current === 0}\n      >\n        <ArrowBackIcon fontSize=\"large\" />\n      </IconButton>\n      <IconButton\n        sx={{\n          position: 'absolute',\n          right: { xs: 8, md: 32 },\n          top: '50%',\n          transform: 'translateY(-50%)',\n          bgcolor: current < questions.length - 1 ? '#e3eafc' : '#f7fafd',\n          color: '#19376D',\n          boxShadow: 2,\n          borderRadius: 2,\n          p: 2,\n          cursor: current < questions.length - 1 ? 'pointer' : 'default',\n          opacity: current < questions.length - 1 ? 1 : 0.5,\n          transition: 'all 0.2s',\n          '&:hover': {\n            bgcolor: current < questions.length - 1 ? '#b6d4fa' : '#e3eafc',\n          },\n        }}\n        onClick={nextQuestion}\n        disabled={current === questions.length - 1}\n      >\n        <ArrowForwardIcon fontSize=\"large\" />\n      </IconButton>\n      {!reviewMode && (\n        <Paper elevation={6} sx={{ p: 5, borderRadius: 4, minWidth: 340, maxWidth: 600, width: '100%', boxShadow: 6 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h5\" fontWeight={700} align=\"center\">Soru {current + 1} / {questions.length}</Typography>\n          </Box>\n          <Typography variant=\"h6\" mb={2}>{q.text}</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mb: 3 }}>\n            {options.length > 0 ? (\n              options.map((opt, idx) => {\n                const optionLetter = String.fromCharCode(65 + idx); // A, B, C, D\n                const isSelected = selected === optionLetter;\n                const isCorrect = compareAnswers(optionLetter, q.correct);\n                const showColor = !!selected;\n                return (\n                  <Button\n                    key={idx}\n                    variant={isSelected ? 'contained' : 'outlined'}\n                    color={showColor ? (isCorrect ? 'primary' : isSelected ? 'error' : 'primary') : 'primary'}\n                    sx={{\n                      textAlign: 'left',\n                      fontWeight: 600,\n                      fontSize: 18,\n                      borderRadius: 4,\n                      py: 2,\n                      px: 2,\n                      boxShadow: isSelected ? '0 2px 12px rgba(67,234,124,0.10)' : undefined,\n                      background: showColor && isSelected\n                        ? (isCorrect\n                            ? 'linear-gradient(90deg,#eafaf3,#43ea7c)'\n                            : 'linear-gradient(90deg,#fff0f0,#e74c3c)')\n                        : undefined,\n                      color: showColor && isSelected ? '#19376D' : undefined,\n                      border: showColor && isSelected\n                        ? (isCorrect ? '2px solid #43ea7c' : '2px solid #e74c3c')\n                        : undefined,\n                      position: 'relative',\n                      transition: 'none',\n                      '&:hover': {\n                        background: !showColor ? '#b6d4fa !important' : undefined,\n                        color: !showColor ? '#19376D !important' : undefined,\n                        boxShadow: '0 2px 12px rgba(25,55,109,0.10)',\n                        transition: 'none',\n                      },\n                    }}\n                    onClick={() => !showResult && handleSelect(idx)}\n                    disabled={!!selected}\n                  >\n                    <span style={{ position: 'relative', zIndex: 2 }}>{String.fromCharCode(65 + idx)}) {opt}</span>\n                    {showColor && isSelected && (\n                      <span style={{\n                        position: 'absolute',\n                        right: 16,\n                        top: '50%',\n                        transform: 'translateY(-50%)',\n                        fontWeight: 700,\n                        fontSize: 18,\n                        color: isCorrect ? '#43ea7c' : '#e74c3c',\n                        background: isCorrect ? '#eafaf3' : '#fff0f0',\n                        borderRadius: 8,\n                        padding: '2px 12px',\n                        boxShadow: '0 2px 8px rgba(67,234,124,0.08)',\n                        zIndex: 3,\n                      }}>\n                        {isCorrect ? 'Doğru' : 'Yanlış'}\n                      </span>\n                    )}\n                  </Button>\n                );\n              })\n            ) : (\n              <Typography color=\"error\" fontWeight={600} mb={2}>Bu sorunun seçenekleri eksik veya hatalı.</Typography>\n            )}\n          </Box>\n          {showResult && (\n            <Box sx={{ mb: 2 }}>\n              <Typography color={compareAnswers(selected || '', q.correct) ? 'success.main' : 'error.main'} fontWeight={700} mb={1}>\n                {compareAnswers(selected || '', q.correct) ? 'Doğru!' : `Cevabınız Yanlış. Doğru Yanıt: ${getCorrectAnswerText()}`}\n              </Typography>\n              <Button variant=\"text\" onClick={() => setShowExplanation(e => !e)}>\n                {showExplanation ? 'Çözümü Gizle' : 'Çözümü Göster'}\n              </Button>\n              {showExplanation && (\n                <Typography mt={2} color=\"text.secondary\">{q.explanation}</Typography>\n              )}\n            </Box>\n          )}\n          {/* Bitir button, only show if not finished */}\n          {!showSummary && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                sx={{ fontWeight: 700, fontSize: 18, borderRadius: 3, px: 4, py: 1.5, boxShadow: 2, textTransform: 'none' }}\n                onClick={handleFinish}\n              >\n                Bitir\n              </Button>\n            </Box>\n          )}\n        </Paper>\n      )}\n      {/* Result popup bubble with question review */}\n      {showSummary && (\n        <Box sx={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', bgcolor: 'rgba(10,29,86,0.7)', zIndex: 9999, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Box sx={{ bgcolor: '#fff', borderRadius: 6, boxShadow: 8, p: 4, minWidth: 320, maxWidth: '90vw', textAlign: 'center', position: 'relative' }}>\n            <Typography variant=\"h5\" fontWeight={700} color=\"#19376D\" mb={2}>Sınav Sonucu</Typography>\n            <Typography fontSize={20} fontWeight={600} color=\"#43ea7c\" mb={1}>Doğru: {score}</Typography>\n            <Typography fontSize={20} fontWeight={600} color=\"#e74c3c\" mb={1}>Yanlış: {mistakes}</Typography>\n            <Typography fontSize={20} fontWeight={600} color=\"#f39c12\" mb={1}>Boş: {answers.filter(answer => answer === null || answer === undefined || answer === '').length}</Typography>\n            <Typography fontSize={18} fontWeight={500} color=\"#19376D\" mb={2}>Süre: {Math.floor(time / 60)}:{(time % 60).toString().padStart(2, '0')}</Typography>\n            {/* Question review list */}\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2, justifyContent: 'center', mb: 3 }}>\n              {questions.map((question, idx) => {\n                const userAnswer = answers[idx];\n                const isUnanswered = userAnswer === null || userAnswer === undefined || userAnswer === '';\n                const isCorrect = !isUnanswered && compareAnswers(userAnswer, question.correct);\n                \n                // Determine colors based on answer status\n                let borderColor, textColor, backgroundColor, hoverColor;\n                if (isUnanswered) {\n                  // Boş bırakılan sorular - turuncu\n                  borderColor = '#f39c12';\n                  textColor = '#f39c12';\n                  backgroundColor = '#fdf6e3';\n                  hoverColor = '#f8e49a';\n                } else if (isCorrect) {\n                  // Doğru cevaplar - yeşil\n                  borderColor = '#43ea7c';\n                  textColor = '#43ea7c';\n                  backgroundColor = '#eafaf3';\n                  hoverColor = '#c6f7e2';\n                } else {\n                  // Yanlış cevaplar - kırmızı\n                  borderColor = '#e74c3c';\n                  textColor = '#e74c3c';\n                  backgroundColor = '#fff0f0';\n                  hoverColor = '#ffe3e3';\n                }\n                \n                return (\n                  <Button\n                    key={idx}\n                    variant=\"outlined\"\n                    sx={{\n                      minWidth: 48,\n                      height: 48,\n                      fontWeight: 700,\n                      fontSize: 18,\n                      borderRadius: 2,\n                      borderColor: borderColor,\n                      color: textColor,\n                      background: backgroundColor,\n                      boxShadow: `0 2px 8px ${borderColor}20`,\n                      mx: 0.5,\n                      my: 0.5,\n                      transition: 'all 0.2s',\n                      '&:hover': {\n                        background: hoverColor,\n                      },\n                    }}\n                    onClick={() => {\n                      setReviewMode(true);\n                      setShowSummary(false);\n                      setCurrent(idx);\n                      setSelected(answers[idx] || null);\n                      setShowResult(!!answers[idx]);\n                      setShowExplanation(false);\n                    }}\n                  >\n                    {idx + 1}\n                  </Button>\n                );\n              })}\n            </Box>\n            <Typography fontSize={15} color=\"#19376D\" mb={2}>\n              Soruları incelemek için tıklayın. Yeşil: Doğru, Kırmızı: Yanlış, Turuncu: Boş\n            </Typography>\n            {/* Action buttons */}\n            <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mt: 2, flexWrap: 'wrap' }}>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                sx={{ fontWeight: 700, fontSize: 16, borderRadius: 3, px: 4, py: 1.2, boxShadow: 2, textTransform: 'none' }}\n                onClick={handleAddRanking}\n              >\n                Sıralamaya Ekle\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                sx={{ fontWeight: 700, fontSize: 16, borderRadius: 3, px: 4, py: 1.2, boxShadow: 2, textTransform: 'none' }}\n                onClick={() => {\n                  navigate('/categories');\n                }}\n              >\n                Kapat\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                sx={{ fontWeight: 700, fontSize: 16, borderRadius: 3, px: 4, py: 1.2, boxShadow: 2, textTransform: 'none' }}\n                onClick={() => {\n                  handleCloseSummary();\n                }}\n              >\n                Tekrar Çöz\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      )}\n      {reviewMode && (\n        <Paper elevation={6} sx={{ p: 5, borderRadius: 4, minWidth: 340, maxWidth: 600, width: '100%', boxShadow: 6 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h5\" fontWeight={700} align=\"center\">Soru {current + 1} / {questions.length}</Typography>\n          </Box>\n          <Typography variant=\"h6\" mb={2}>{q.text}</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mb: 3 }}>\n            {options.length > 0 ? (\n              options.map((opt, idx) => {\n                const optionLetter = String.fromCharCode(65 + idx); // A, B, C, D\n                const isSelected = answers[current] === optionLetter;\n                const isCorrect = compareAnswers(optionLetter, q.correct);\n                const showColor = !!answers[current];\n                return (\n                  <Button\n                    key={idx}\n                    variant={isSelected ? 'contained' : 'outlined'}\n                    color={showColor ? (isCorrect ? 'primary' : isSelected ? 'error' : 'primary') : 'primary'}\n                    sx={{\n                      textAlign: 'left',\n                      fontWeight: 600,\n                      fontSize: 18,\n                      borderRadius: 4,\n                      py: 2,\n                      px: 2,\n                      boxShadow: isSelected ? '0 2px 12px rgba(67,234,124,0.10)' : undefined,\n                      background: showColor && isSelected\n                        ? (isCorrect\n                            ? 'linear-gradient(90deg,#eafaf3,#43ea7c)'\n                            : 'linear-gradient(90deg,#fff0f0,#e74c3c)')\n                        : undefined,\n                      color: showColor && isSelected ? '#19376D' : undefined,\n                      border: showColor && isSelected\n                        ? (isCorrect ? '2px solid #43ea7c' : '2px solid #e74c3c')\n                        : undefined,\n                      position: 'relative',\n                      transition: 'none',\n                      '&:hover': {\n                        background: !showColor ? '#b6d4fa !important' : undefined,\n                        color: !showColor ? '#19376D !important' : undefined,\n                        boxShadow: '0 2px 12px rgba(25,55,109,0.10)',\n                        transition: 'none',\n                      },\n                    }}\n                    disabled\n                  >\n                    <span style={{ position: 'relative', zIndex: 2 }}>{String.fromCharCode(65 + idx)}) {opt}</span>\n                    {showColor && isSelected && (\n                      <span style={{\n                        position: 'absolute',\n                        right: 16,\n                        top: '50%',\n                        transform: 'translateY(-50%)',\n                        fontWeight: 700,\n                        fontSize: 18,\n                        color: isCorrect ? '#43ea7c' : '#e74c3c',\n                        background: isCorrect ? '#eafaf3' : '#fff0f0',\n                        borderRadius: 8,\n                        padding: '2px 12px',\n                        boxShadow: '0 2px 8px rgba(67,234,124,0.08)',\n                        zIndex: 3,\n                      }}>\n                        {isCorrect ? 'Doğru' : 'Yanlış'}\n                      </span>\n                    )}\n                  </Button>\n                );\n              })\n            ) : (\n              <Typography color=\"error\" fontWeight={600} mb={2}>Bu sorunun seçenekleri eksik veya hatalı.</Typography>\n            )}\n          </Box>\n          {/* Show explanation toggle and content in review mode */}\n          {!!q.explanation && (\n            <Box sx={{ mb: 2 }}>\n              <Button variant=\"text\" onClick={() => setShowExplanation(e => !e)}>\n                {showExplanation ? 'Çözümü Gizle' : 'Çözümü Göster'}\n              </Button>\n              {showExplanation && (\n                <Typography mt={2} color=\"text.secondary\">{q.explanation}</Typography>\n              )}\n            </Box>\n          )}\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              sx={{ fontWeight: 700, fontSize: 16, borderRadius: 3, px: 4, py: 1.2, boxShadow: 2, textTransform: 'none' }}\n              onClick={() => {\n                setReviewMode(false);\n                setShowSummary(true);\n                setShowExplanation(false);\n              }}\n            >\n              Sonuçlara Dön\n            </Button>\n          </Box>\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default Exam;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}