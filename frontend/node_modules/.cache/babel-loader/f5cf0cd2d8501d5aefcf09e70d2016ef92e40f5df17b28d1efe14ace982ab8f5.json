{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/WordMatchingGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport setMetaTags from '../utils/seo';\nimport { Box, Paper, Typography, Button, Alert, Fade, IconButton } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Words will come from backend (MySQL via Prisma)\n\nconst formatTime = secs => {\n  const m = Math.floor(secs / 60).toString().padStart(2, '0');\n  const s = (secs % 60).toString().padStart(2, '0');\n  return `${m}:${s}`;\n};\nconst shuffle = arr => {\n  const a = [...arr];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\nexport default function WordMatchingGame() {\n  _s();\n  var _sets$find;\n  useEffect(() => {\n    setMetaTags({\n      title: 'Kelime Eşleştirme — Kelime Oyunu',\n      description: 'Kelime eşleştirme oyunu ile kelime bilginizi eşleştirerek güçlendirin. Seviye ve set seçerek başlayın.',\n      keywords: 'kelime eşleştirme, kelime oyunu, kelime çalışması',\n      canonical: '/kelime-eslestirme',\n      ogImage: '/social-preview.svg'\n    });\n  }, []);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const level = (searchParams.get('level') || 'a1').toUpperCase();\n  const setId = searchParams.get('setId');\n  const [sets, setSets] = useState([]);\n  const GAME_WORD_COUNT = 15; // each game will have 15 words\n\n  const [pool, setPool] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [matched, setMatched] = useState(0);\n  const [selectedWordId, setSelectedWordId] = useState(null); // tap support\n  const [elapsed, setElapsed] = useState(0); // stopwatch seconds (hidden while playing)\n  const [playing, setPlaying] = useState(true);\n  const [gameCompleted, setGameCompleted] = useState(false);\n  const [wrongMsg, setWrongMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  // Prepare game by fetching: if setId is provided, use that set; otherwise choose 15 random from words API\n  const initGame = async () => {\n    try {\n      let pairs = [];\n      if (setId) {\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets/${setId}`, {\n          cache: 'no-store'\n        });\n        const data = await res.json();\n        const items = Array.isArray(data === null || data === void 0 ? void 0 : data.items) ? data.items : [];\n        pairs = items.slice(0, GAME_WORD_COUNT).map((w, idx) => ({\n          id: idx + 1,\n          english: w.english,\n          turkish: w.turkish\n        }));\n      } else {\n        const apiLevel = ['A1', 'A2', 'B1', 'B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/words?level=${apiLevel}&limit=200`, {\n          cache: 'no-store'\n        });\n        const data = await res.json();\n        const raw = Array.isArray(data === null || data === void 0 ? void 0 : data.words) ? data.words : [];\n        const chosen = shuffle(raw).slice(0, GAME_WORD_COUNT);\n        pairs = chosen.map((w, idx) => ({\n          id: idx + 1,\n          english: w.english,\n          turkish: w.turkish\n        }));\n      }\n      const newPool = shuffle(pairs.map(p => ({\n        id: p.id,\n        text: p.english,\n        used: false\n      })));\n      const newTargets = pairs.map(p => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    } catch (e) {\n      // Fallback: basic static list if API is unreachable\n      const fallback = [{\n        id: 1,\n        turkish: 'merhaba',\n        english: 'hello'\n      }, {\n        id: 2,\n        turkish: 'dünya',\n        english: 'world'\n      }, {\n        id: 3,\n        turkish: 'aile',\n        english: 'family'\n      }, {\n        id: 4,\n        turkish: 'okul',\n        english: 'school'\n      }, {\n        id: 5,\n        turkish: 'kitap',\n        english: 'book'\n      }, {\n        id: 6,\n        turkish: 'su',\n        english: 'water'\n      }, {\n        id: 7,\n        turkish: 'ev',\n        english: 'house'\n      }, {\n        id: 8,\n        turkish: 'araba',\n        english: 'car'\n      }, {\n        id: 9,\n        turkish: 'yemek',\n        english: 'food'\n      }, {\n        id: 10,\n        turkish: 'zaman',\n        english: 'time'\n      }, {\n        id: 11,\n        turkish: 'para',\n        english: 'money'\n      }, {\n        id: 12,\n        turkish: 'çalışma',\n        english: 'work'\n      }, {\n        id: 13,\n        turkish: 'oyun',\n        english: 'game'\n      }, {\n        id: 14,\n        turkish: 'müzik',\n        english: 'music'\n      }];\n      const pairs = shuffle(fallback).slice(0, GAME_WORD_COUNT).map((p, i) => ({\n        ...p,\n        id: i + 1\n      }));\n      const newPool = shuffle(pairs.map(p => ({\n        id: p.id,\n        text: p.english,\n        used: false\n      })));\n      const newTargets = pairs.map(p => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    }\n  };\n\n  // Load game whenever level or setId changes\n  useEffect(() => {\n    initGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [level, setId]);\n\n  // Fetch available sets for arrows\n  useEffect(() => {\n    const loadSets = async () => {\n      try {\n        const apiLevel = ['A1', 'A2', 'B1', 'B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets?level=${apiLevel}`, {\n          cache: 'no-store'\n        });\n        const data = await res.json();\n        const list = Array.isArray(data === null || data === void 0 ? void 0 : data.sets) ? data.sets.map(s => ({\n          id: s.id,\n          title: s.title\n        })) : [];\n        setSets(list);\n      } catch {}\n    };\n    loadSets();\n  }, [level]);\n\n  // Stopwatch (hidden while playing)\n  useEffect(() => {\n    if (!playing || gameCompleted) return;\n    const t = setInterval(() => setElapsed(c => c + 1), 1000);\n    return () => clearInterval(t);\n  }, [playing, gameCompleted]);\n\n  // Drag handlers\n  const onDragStart = (e, wordId) => {\n    if (!playing) return;\n    e.dataTransfer.setData('text/plain', String(wordId));\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const onDragOver = e => {\n    if (!playing) return;\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const tryMatch = (targetId, wordId) => {\n    var _targets$find, _pool$find;\n    if (!playing) return;\n    if ((_targets$find = targets.find(t => t.id === targetId)) !== null && _targets$find !== void 0 && _targets$find.matched) return;\n    if ((_pool$find = pool.find(p => p.id === wordId)) !== null && _pool$find !== void 0 && _pool$find.used) return;\n    if (targetId === wordId) {\n      // success\n      setTargets(prev => prev.map(t => t.id === targetId ? {\n        ...t,\n        matched: true\n      } : t));\n      setPool(prev => prev.map(w => w.id === wordId ? {\n        ...w,\n        used: true\n      } : w));\n      setMatched(m => m + 1);\n      setSelectedWordId(null);\n      setSuccessMsg(true);\n      setTimeout(() => setSuccessMsg(false), 800);\n    } else {\n      // wrong\n      setTargets(prev => prev.map(t => t.id === targetId ? {\n        ...t,\n        wrongFlash: true\n      } : t));\n      setWrongMsg(true);\n      setTimeout(() => {\n        setWrongMsg(false);\n        setTargets(prev => prev.map(t => ({\n          ...t,\n          wrongFlash: false\n        })));\n      }, 650);\n    }\n  };\n  const onDrop = (e, targetId) => {\n    if (!playing) return;\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const wordId = Number(data);\n    if (!Number.isFinite(wordId)) return;\n    tryMatch(targetId, wordId);\n  };\n\n  // Tap/click support\n  const handleWordClick = wordId => {\n    if (!playing) return;\n    const word = pool.find(w => w.id === wordId);\n    if (!word || word.used) return;\n    setSelectedWordId(prev => prev === wordId ? null : wordId);\n  };\n  const handleTargetClick = targetId => {\n    if (!playing) return;\n    if (selectedWordId == null) return;\n    tryMatch(targetId, selectedWordId);\n  };\n\n  // Complete detection\n  useEffect(() => {\n    if (targets.length > 0 && matched === targets.length) {\n      setPlaying(false);\n      setGameCompleted(true);\n    }\n  }, [matched, targets.length]);\n  const reset = () => initGame();\n  const handleNewWords = () => {\n    if (setId && sets.length > 1) {\n      // pick a different random set\n      const others = sets.filter(s => s.id !== setId);\n      const next = others[Math.floor(Math.random() * others.length)];\n      navigate(`/kelime-eslestirme-game?level=${level.toLowerCase()}&setId=${next.id}`);\n    } else {\n      // no set: re-fetch and sample a new random 15\n      reset();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: '#b2dfdb',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      pb: {\n        xs: 12,\n        md: 16\n      },\n      pt: 0,\n      px: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        p: 0,\n        borderRadius: 4,\n        minWidth: 340,\n        width: '100%',\n        maxWidth: 1000,\n        mt: {\n          xs: 1,\n          md: '15px'\n        },\n        background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n          color: '#fff',\n          p: {\n            xs: 3,\n            md: 4\n          },\n          borderTopLeftRadius: 'inherit',\n          borderTopRightRadius: 'inherit',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: {\n              xs: 'flex',\n              md: 'none'\n            },\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minWidth: 56\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => navigate('/kelime-eslestirme'),\n            sx: {\n              color: '#fff',\n              p: 0.5\n            },\n            \"aria-label\": \"Geri\",\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              sx: {\n                fontSize: 26\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              mt: 0.25,\n              color: '#fff',\n              fontWeight: 700\n            },\n            children: \"Geri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            flex: 1,\n            position: {\n              xs: 'absolute',\n              md: 'static'\n            },\n            left: {\n              xs: '50%',\n              md: 'auto'\n            },\n            transform: {\n              xs: 'translateX(-50%)',\n              md: 'none'\n            },\n            zIndex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            fontWeight: 700,\n            mb: 1,\n            sx: {\n              fontSize: {\n                xs: '1.1rem',\n                md: '1.25rem'\n              }\n            },\n            children: \"Kelime E\\u015Fle\\u015Ftirme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              opacity: 0.9\n            },\n            children: [\"Seviye: \", level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: {\n                xs: 'flex',\n                md: 'none'\n              },\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n              minWidth: 56\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleNewWords,\n              sx: {\n                color: '#fff',\n                p: 0.5\n              },\n              \"aria-label\": \"Yeni Kelimeler\",\n              children: /*#__PURE__*/_jsxDEV(RefreshIcon, {\n                sx: {\n                  fontSize: 22\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                mt: 0.25,\n                color: '#fff',\n                fontWeight: 700\n              },\n              children: \"Yeni\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleNewWords,\n            startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {\n              sx: {\n                fontSize: 20\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 57\n            }, this),\n            sx: {\n              display: {\n                xs: 'none',\n                md: 'inline-flex'\n              },\n              color: '#fff',\n              fontWeight: 600,\n              textTransform: 'none',\n              px: 2,\n              py: 0.5\n            },\n            children: \"Yeni Kelimeler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          pt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"#00695c\",\n            fontWeight: 600,\n            children: [\"\\u0130lerleme: \", matched, \"/\", targets.length || GAME_WORD_COUNT]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), setId && sets.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"#00695c\",\n            sx: {\n              opacity: 0.8\n            },\n            children: [\"Set: \", ((_sets$find = sets.find(s => s.id === setId)) === null || _sets$find === void 0 ? void 0 : _sets$find.title) || '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          px: 3\n        },\n        children: [wrongMsg && /*#__PURE__*/_jsxDEV(Fade, {\n          in: wrongMsg,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 45\n            }, this),\n            sx: {\n              mb: 2,\n              borderRadius: 2\n            },\n            children: \"Yanl\\u0131\\u015F e\\u015Fle\\u015Fme! Tekrar deneyin.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), successMsg && /*#__PURE__*/_jsxDEV(Fade, {\n          in: successMsg,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 47\n            }, this),\n            sx: {\n              mb: 2,\n              borderRadius: 2\n            },\n            children: \"Do\\u011Fru! Devam.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), gameCompleted && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 45\n          }, this),\n          sx: {\n            mb: 3,\n            borderRadius: 2,\n            fontSize: 16\n          },\n          children: [\"Tebrikler! T\\xFCm e\\u015Fle\\u015Fmeler tamamland\\u0131. S\\xFCreniz: \", formatTime(elapsed)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          px: 3,\n          pb: 1\n        },\n        children: (() => {\n          const half = Math.ceil(pool.length / 2);\n          const rows = [pool.slice(0, half), pool.slice(half)];\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: rows.map((row, idx) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'grid',\n                gridAutoFlow: 'column',\n                gridAutoColumns: '1fr',\n                gap: 1.5,\n                overflowX: {\n                  xs: 'auto',\n                  md: 'visible'\n                },\n                pb: 1\n              },\n              children: row.map(w => /*#__PURE__*/_jsxDEV(Box, {\n                draggable: !w.used && playing,\n                onDragStart: e => onDragStart(e, w.id),\n                onClick: () => handleWordClick(w.id),\n                sx: {\n                  userSelect: 'none',\n                  cursor: w.used || !playing ? 'default' : 'grab',\n                  opacity: w.used ? 0.35 : 1,\n                  borderRadius: 2,\n                  p: 1.2,\n                  textAlign: 'center',\n                  color: '#fff',\n                  fontWeight: 700,\n                  fontSize: {\n                    xs: 12,\n                    sm: 14\n                  },\n                  boxShadow: '0 1px 4px rgba(0,0,0,0.12)',\n                  outline: selectedWordId === w.id ? '3px solid rgba(0, 184, 148, 0.9)' : 'none',\n                  background: `linear-gradient(135deg, ${['#42a5f5', '#ffca28', '#ab47bc', '#26a69a', '#ef5350', '#8d6e63', '#66bb6a'][w.id % 7]} 0%, rgba(255,255,255,0.15) 100%)`,\n                  transition: 'transform .15s ease',\n                  '&:active': {\n                    transform: 'scale(0.98)'\n                  },\n                  minWidth: 88\n                },\n                children: w.text\n              }, w.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 23\n              }, this))\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this))\n          }, void 0, false);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          pt: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridTemplateColumns: {\n              xs: 'repeat(2, 1fr)',\n              sm: 'repeat(3, 1fr)',\n              md: 'repeat(5, 1fr)'\n            },\n            gap: 2\n          },\n          children: targets.map(t => /*#__PURE__*/_jsxDEV(Box, {\n            onDragOver: onDragOver,\n            onDrop: e => onDrop(e, t.id),\n            onClick: () => handleTargetClick(t.id),\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%',\n                height: 54,\n                borderRadius: 2,\n                border: t.matched ? '2px solid #4CAF50' : t.wrongFlash ? '2px solid #ef5350' : selectedWordId != null ? '2px dashed #00b894' : '2px dashed rgba(0,0,0,0.25)',\n                background: t.matched ? 'linear-gradient(135deg, #4CAF50 0%, #66BB6A 100%)' : 'rgba(0,0,0,0.03)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: t.matched ? '#fff' : 'inherit',\n                fontWeight: 700,\n                textTransform: 'uppercase',\n                letterSpacing: 0.4,\n                transition: 'all .15s ease'\n              },\n              children: t.matched ? t.english : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontWeight: 700,\n                color: '#37474F',\n                textAlign: 'center'\n              },\n              children: t.turkish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 2,\n          mt: 1.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => navigate('/kelime-eslestirme'),\n          sx: {\n            borderColor: '#00b894',\n            color: '#00695c',\n            fontWeight: 600,\n            borderRadius: 2,\n            px: 3,\n            mb: '15px',\n            '&:hover': {\n              borderColor: '#00cec9',\n              backgroundColor: 'rgba(0, 184, 148, 0.04)'\n            }\n          },\n          children: \"Seviye De\\u011Fi\\u015Ftir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), gameCompleted && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: reset,\n          sx: {\n            background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)',\n            color: '#fff',\n            fontWeight: 600,\n            borderRadius: 2,\n            px: 3,\n            '&:hover': {\n              background: 'linear-gradient(90deg, #00cec9 0%, #00b894 100%)'\n            }\n          },\n          children: \"Tekrar Oyna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 0.5,\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          \"aria-label\": \"Bitir ve Klasik Sorulara D\\xF6n\",\n          onClick: () => navigate('/questions'),\n          sx: {\n            textTransform: 'none',\n            fontWeight: 700,\n            borderRadius: 3,\n            px: 3,\n            py: 1.1,\n            background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n            color: '#fff',\n            boxShadow: '0 8px 20px rgba(0,0,0,0.08)',\n            '&:hover': {\n              background: 'linear-gradient(135deg, #00a085 0%, #00b8b3 100%)'\n            }\n          },\n          variant: \"contained\",\n          children: \"Bitir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_s(WordMatchingGame, \"N37A2pILFJvQa7k7DmRqdG3aOGQ=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = WordMatchingGame;\nvar _c;\n$RefreshReg$(_c, \"WordMatchingGame\");","map":{"version":3,"names":["React","useEffect","useState","setMetaTags","Box","Paper","Typography","Button","Alert","Fade","IconButton","ArrowBackIcon","RefreshIcon","CheckCircleIcon","ErrorIcon","useNavigate","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","formatTime","secs","m","Math","floor","toString","padStart","s","shuffle","arr","a","i","length","j","random","WordMatchingGame","_s","_sets$find","title","description","keywords","canonical","ogImage","navigate","searchParams","level","get","toUpperCase","setId","sets","setSets","GAME_WORD_COUNT","pool","setPool","targets","setTargets","matched","setMatched","selectedWordId","setSelectedWordId","elapsed","setElapsed","playing","setPlaying","gameCompleted","setGameCompleted","wrongMsg","setWrongMsg","successMsg","setSuccessMsg","initGame","pairs","res","fetch","cache","data","json","items","Array","isArray","slice","map","w","idx","id","english","turkish","apiLevel","includes","raw","words","chosen","newPool","p","text","used","newTargets","wrongFlash","e","fallback","loadSets","list","t","setInterval","c","clearInterval","onDragStart","wordId","dataTransfer","setData","String","effectAllowed","onDragOver","preventDefault","dropEffect","tryMatch","targetId","_targets$find","_pool$find","find","prev","setTimeout","onDrop","getData","Number","isFinite","handleWordClick","word","handleTargetClick","reset","handleNewWords","others","filter","next","toLowerCase","sx","minHeight","background","display","flexDirection","alignItems","pb","xs","md","pt","px","children","elevation","borderRadius","minWidth","width","maxWidth","mt","backdropFilter","border","boxShadow","color","borderTopLeftRadius","borderTopRightRadius","justifyContent","position","onClick","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","textAlign","flex","left","transform","zIndex","mb","opacity","gap","startIcon","textTransform","py","in","severity","icon","half","ceil","rows","row","gridAutoFlow","gridAutoColumns","overflowX","draggable","userSelect","cursor","sm","outline","transition","gridTemplateColumns","height","letterSpacing","borderColor","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/WordMatchingGame.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport setMetaTags from '../utils/seo';\nimport { Box, Paper, Typography, Button, Alert, Fade, IconButton } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n \n\ntype WordPair = {\n  id: number; // internal sequential id for matching\n  turkish: string;\n  english: string;\n};\n\ntype PoolWord = {\n  id: number; // pair id\n  text: string; // english\n  used: boolean;\n};\n\ntype Target = {\n  id: number; // pair id\n  turkish: string;\n  english: string; // reveal when matched\n  matched: boolean;\n  wrongFlash: boolean;\n};\n\n// Words will come from backend (MySQL via Prisma)\n\nconst formatTime = (secs: number) => {\n  const m = Math.floor(secs / 60)\n    .toString()\n    .padStart(2, '0');\n  const s = (secs % 60)\n    .toString()\n    .padStart(2, '0');\n  return `${m}:${s}`;\n};\n\nconst shuffle = <T,>(arr: T[]): T[] => {\n  const a = [...arr];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\n\nexport default function WordMatchingGame() {\n  useEffect(() => {\n    setMetaTags({\n      title: 'Kelime Eşleştirme — Kelime Oyunu',\n      description: 'Kelime eşleştirme oyunu ile kelime bilginizi eşleştirerek güçlendirin. Seviye ve set seçerek başlayın.',\n      keywords: 'kelime eşleştirme, kelime oyunu, kelime çalışması',\n      canonical: '/kelime-eslestirme',\n      ogImage: '/social-preview.svg'\n    });\n  }, []);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const level = (searchParams.get('level') || 'a1').toUpperCase();\n  const setId = searchParams.get('setId');\n  const [sets, setSets] = useState<Array<{ id: string; title: string }>>([]);\n\n  const GAME_WORD_COUNT = 15; // each game will have 15 words\n\n  const [pool, setPool] = useState<PoolWord[]>([]);\n  const [targets, setTargets] = useState<Target[]>([]);\n  const [matched, setMatched] = useState(0);\n  const [selectedWordId, setSelectedWordId] = useState<number | null>(null); // tap support\n  const [elapsed, setElapsed] = useState(0); // stopwatch seconds (hidden while playing)\n  const [playing, setPlaying] = useState(true);\n  const [gameCompleted, setGameCompleted] = useState(false);\n  const [wrongMsg, setWrongMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  // Prepare game by fetching: if setId is provided, use that set; otherwise choose 15 random from words API\n  const initGame = async () => {\n    try {\n      let pairs: WordPair[] = [];\n      if (setId) {\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets/${setId}`, { cache: 'no-store' });\n        const data = await res.json();\n        const items: Array<{ english: string; turkish: string }> = Array.isArray(data?.items) ? data.items : [];\n        pairs = items.slice(0, GAME_WORD_COUNT).map((w, idx) => ({ id: idx + 1, english: w.english, turkish: w.turkish }));\n      } else {\n        const apiLevel = ['A1','A2','B1','B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/words?level=${apiLevel}&limit=200`, { cache: 'no-store' });\n        const data = await res.json();\n        const raw: Array<{ id: string; english: string; turkish: string }> = Array.isArray(data?.words) ? data.words : [];\n        const chosen = shuffle(raw).slice(0, GAME_WORD_COUNT);\n        pairs = chosen.map((w, idx) => ({ id: idx + 1, english: w.english, turkish: w.turkish }));\n      }\n\n      const newPool: PoolWord[] = shuffle(\n        pairs.map((p) => ({ id: p.id, text: p.english, used: false }))\n      );\n      const newTargets: Target[] = pairs.map((p) => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false,\n      }));\n\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    } catch (e) {\n      // Fallback: basic static list if API is unreachable\n      const fallback: WordPair[] = [\n        { id: 1, turkish: 'merhaba', english: 'hello' },\n        { id: 2, turkish: 'dünya', english: 'world' },\n        { id: 3, turkish: 'aile', english: 'family' },\n        { id: 4, turkish: 'okul', english: 'school' },\n        { id: 5, turkish: 'kitap', english: 'book' },\n        { id: 6, turkish: 'su', english: 'water' },\n        { id: 7, turkish: 'ev', english: 'house' },\n        { id: 8, turkish: 'araba', english: 'car' },\n        { id: 9, turkish: 'yemek', english: 'food' },\n        { id: 10, turkish: 'zaman', english: 'time' },\n        { id: 11, turkish: 'para', english: 'money' },\n        { id: 12, turkish: 'çalışma', english: 'work' },\n        { id: 13, turkish: 'oyun', english: 'game' },\n        { id: 14, turkish: 'müzik', english: 'music' },\n      ];\n      const pairs = shuffle(fallback).slice(0, GAME_WORD_COUNT).map((p, i) => ({ ...p, id: i + 1 }));\n      const newPool: PoolWord[] = shuffle(\n        pairs.map((p) => ({ id: p.id, text: p.english, used: false }))\n      );\n      const newTargets: Target[] = pairs.map((p) => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false,\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    }\n  };\n\n  // Load game whenever level or setId changes\n  useEffect(() => {\n    initGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [level, setId]);\n\n  // Fetch available sets for arrows\n  useEffect(() => {\n    const loadSets = async () => {\n      try {\n        const apiLevel = ['A1','A2','B1','B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets?level=${apiLevel}`, { cache: 'no-store' });\n        const data = await res.json();\n        const list: Array<{ id: string; title: string }> = Array.isArray(data?.sets) ? data.sets.map((s: any) => ({ id: s.id, title: s.title })) : [];\n        setSets(list);\n      } catch {}\n    };\n    loadSets();\n  }, [level]);\n\n  // Stopwatch (hidden while playing)\n  useEffect(() => {\n    if (!playing || gameCompleted) return;\n    const t = setInterval(() => setElapsed((c) => c + 1), 1000);\n    return () => clearInterval(t);\n  }, [playing, gameCompleted]);\n\n  // Drag handlers\n  const onDragStart = (\n    e: React.DragEvent<HTMLDivElement>,\n    wordId: number\n  ) => {\n    if (!playing) return;\n    e.dataTransfer.setData('text/plain', String(wordId));\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    if (!playing) return;\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const tryMatch = (targetId: number, wordId: number) => {\n    if (!playing) return;\n    if (targets.find((t) => t.id === targetId)?.matched) return;\n    if (pool.find((p) => p.id === wordId)?.used) return;\n\n    if (targetId === wordId) {\n      // success\n      setTargets((prev) =>\n        prev.map((t) => (t.id === targetId ? { ...t, matched: true } : t))\n      );\n      setPool((prev) => prev.map((w) => (w.id === wordId ? { ...w, used: true } : w)));\n      setMatched((m) => m + 1);\n      setSelectedWordId(null);\n      setSuccessMsg(true);\n      setTimeout(() => setSuccessMsg(false), 800);\n    } else {\n      // wrong\n      setTargets((prev) =>\n        prev.map((t) =>\n          t.id === targetId ? { ...t, wrongFlash: true } : t\n        )\n      );\n      setWrongMsg(true);\n      setTimeout(() => {\n        setWrongMsg(false);\n        setTargets((prev) => prev.map((t) => ({ ...t, wrongFlash: false })));\n      }, 650);\n    }\n  };\n\n  const onDrop = (\n    e: React.DragEvent<HTMLDivElement>,\n    targetId: number\n  ) => {\n    if (!playing) return;\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const wordId = Number(data);\n    if (!Number.isFinite(wordId)) return;\n    tryMatch(targetId, wordId);\n  };\n\n  // Tap/click support\n  const handleWordClick = (wordId: number) => {\n    if (!playing) return;\n    const word = pool.find((w) => w.id === wordId);\n    if (!word || word.used) return;\n    setSelectedWordId((prev) => (prev === wordId ? null : wordId));\n  };\n\n  const handleTargetClick = (targetId: number) => {\n    if (!playing) return;\n    if (selectedWordId == null) return;\n    tryMatch(targetId, selectedWordId);\n  };\n\n  // Complete detection\n  useEffect(() => {\n    if (targets.length > 0 && matched === targets.length) {\n      setPlaying(false);\n      setGameCompleted(true);\n    }\n  }, [matched, targets.length]);\n\n  const reset = () => initGame();\n\n  const handleNewWords = () => {\n    if (setId && sets.length > 1) {\n      // pick a different random set\n      const others = sets.filter((s) => s.id !== setId);\n      const next = others[Math.floor(Math.random() * others.length)];\n      navigate(`/kelime-eslestirme-game?level=${level.toLowerCase()}&setId=${next.id}`);\n    } else {\n      // no set: re-fetch and sample a new random 15\n      reset();\n    }\n  };\n\n  return (\n    <Box sx={{ minHeight: '100vh', background: '#b2dfdb', display: 'flex', flexDirection: 'column', alignItems: 'center', pb: { xs: 12, md: 16 }, pt: 0, px: 2 }}>\n      <Paper elevation={6} sx={{ p: 0, borderRadius: 4, minWidth: 340, width: '100%', maxWidth: 1000, mt: { xs: 1, md: '15px' }, background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)', backdropFilter: 'blur(10px)', border: '1px solid rgba(255, 255, 255, 0.2)', boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)' }}>\n        {/* Header */}\n        <Box sx={{ background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)', color: '#fff', p: { xs: 3, md: 4 }, borderTopLeftRadius: 'inherit', borderTopRightRadius: 'inherit', display: 'flex', justifyContent: 'space-between', alignItems: 'center', position: 'relative' }}>\n          {/* Mobile stacked back (icon above label) */}\n          <Box sx={{ display: { xs: 'flex', md: 'none' }, flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minWidth: 56 }}>\n            <IconButton onClick={() => navigate('/kelime-eslestirme')} sx={{ color: '#fff', p: 0.5 }} aria-label=\"Geri\">\n              <ArrowBackIcon sx={{ fontSize: 26 }} />\n            </IconButton>\n            <Typography variant=\"caption\" sx={{ mt: 0.25, color: '#fff', fontWeight: 700 }}>Geri</Typography>\n          </Box>\n\n          {/* Title - centered on mobile using absolute positioning to avoid shift from side buttons */}\n          <Box sx={{ textAlign: 'center', flex: 1, position: { xs: 'absolute', md: 'static' }, left: { xs: '50%', md: 'auto' }, transform: { xs: 'translateX(-50%)', md: 'none' }, zIndex: 1 }}>\n            <Typography variant=\"h5\" fontWeight={700} mb={1} sx={{ fontSize: { xs: '1.1rem', md: '1.25rem' } }}>\n              Kelime Eşleştirme\n            </Typography>\n            <Typography variant=\"body2\" sx={{ opacity: 0.9 }}>\n              Seviye: {level}\n            </Typography>\n          </Box>\n\n          {/* Right controls - shrink on mobile and tighten icon spacing */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n            {/* Mobile: stacked refresh icon + short label */}\n            <Box sx={{ display: { xs: 'flex', md: 'none' }, flexDirection: 'column', alignItems: 'center', justifyContent: 'center', minWidth: 56 }}>\n              <IconButton onClick={handleNewWords} sx={{ color: '#fff', p: 0.5 }} aria-label=\"Yeni Kelimeler\">\n                <RefreshIcon sx={{ fontSize: 22 }} />\n              </IconButton>\n              <Typography variant=\"caption\" sx={{ mt: 0.25, color: '#fff', fontWeight: 700 }}>Yeni</Typography>\n            </Box>\n\n            {/* Desktop: full text button */}\n            <Button onClick={handleNewWords} startIcon={<RefreshIcon sx={{ fontSize: 20 }} />} sx={{ display: { xs: 'none', md: 'inline-flex' }, color: '#fff', fontWeight: 600, textTransform: 'none', px: 2, py: 0.5 }}>\n              Yeni Kelimeler\n            </Button>\n          </Box>\n        </Box>\n        {/* Simple progress text (no filling bar, no live time) */}\n        <Box sx={{ p: 3, pt: 2 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Typography variant=\"h6\" color=\"#00695c\" fontWeight={600}>\n              İlerleme: {matched}/{targets.length || GAME_WORD_COUNT}\n            </Typography>\n            {setId && sets.length > 0 && (\n              <Typography variant=\"body2\" color=\"#00695c\" sx={{ opacity: 0.8 }}>\n                Set: {sets.find((s) => s.id === setId)?.title || ''}\n              </Typography>\n            )}\n          </Box>\n        </Box>\n\n        {/* Alerts */}\n        <Box sx={{ px: 3 }}>\n          {wrongMsg && (\n            <Fade in={wrongMsg}>\n              <Alert severity=\"error\" icon={<ErrorIcon />} sx={{ mb: 2, borderRadius: 2 }}>\n                Yanlış eşleşme! Tekrar deneyin.\n              </Alert>\n            </Fade>\n          )}\n          {successMsg && (\n            <Fade in={successMsg}>\n              <Alert severity=\"success\" icon={<CheckCircleIcon />} sx={{ mb: 2, borderRadius: 2 }}>\n                Doğru! Devam.\n              </Alert>\n            </Fade>\n          )}\n          {gameCompleted && (\n            <Alert severity=\"success\" icon={<CheckCircleIcon />} sx={{ mb: 3, borderRadius: 2, fontSize: 16 }}>\n              Tebrikler! Tüm eşleşmeler tamamlandı. Süreniz: {formatTime(elapsed)}\n            </Alert>\n          )}\n        </Box>\n\n        {/* Top pool (English words) fixed to two rows) */}\n        <Box sx={{ px: 3, pb: 1 }}>\n          {(() => {\n            const half = Math.ceil(pool.length / 2);\n            const rows = [pool.slice(0, half), pool.slice(half)];\n            return (\n              <>\n                {rows.map((row, idx) => (\n                  <Box key={idx} sx={{ display: 'grid', gridAutoFlow: 'column', gridAutoColumns: '1fr', gap: 1.5, overflowX: { xs: 'auto', md: 'visible' }, pb: 1 }}>\n                    {row.map((w) => (\n                      <Box\n                        key={w.id}\n                        draggable={!w.used && playing}\n                        onDragStart={(e) => onDragStart(e, w.id)}\n                        onClick={() => handleWordClick(w.id)}\n                        sx={{\n                          userSelect: 'none',\n                          cursor: w.used || !playing ? 'default' : 'grab',\n                          opacity: w.used ? 0.35 : 1,\n                          borderRadius: 2,\n                          p: 1.2,\n                          textAlign: 'center',\n                          color: '#fff',\n                          fontWeight: 700,\n                          fontSize: { xs: 12, sm: 14 },\n                          boxShadow: '0 1px 4px rgba(0,0,0,0.12)',\n                          outline: selectedWordId === w.id ? '3px solid rgba(0, 184, 148, 0.9)' : 'none',\n                          background: `linear-gradient(135deg, ${['#42a5f5','#ffca28','#ab47bc','#26a69a','#ef5350','#8d6e63','#66bb6a'][w.id % 7]} 0%, rgba(255,255,255,0.15) 100%)`,\n                          transition: 'transform .15s ease',\n                          '&:active': { transform: 'scale(0.98)' },\n                          minWidth: 88,\n                        }}\n                      >\n                        {w.text}\n                      </Box>\n                    ))}\n                  </Box>\n                ))}\n              </>\n            );\n          })()}\n        </Box>\n\n        {/* Bottom targets (Turkish labels) - fixed 3x5 grid */}\n        <Box sx={{ p: 3, pt: 1 }}>\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: 'repeat(2, 1fr)', sm: 'repeat(3, 1fr)', md: 'repeat(5, 1fr)' }, gap: 2 }}>\n            {targets.map((t) => (\n              <Box key={t.id} onDragOver={onDragOver} onDrop={(e) => onDrop(e, t.id)} onClick={() => handleTargetClick(t.id)} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 1 }}>\n                <Box sx={{\n                  width: '100%',\n                  height: 54,\n                  borderRadius: 2,\n                  border: t.matched\n                    ? '2px solid #4CAF50'\n                    : t.wrongFlash\n                    ? '2px solid #ef5350'\n                    : selectedWordId != null\n                    ? '2px dashed #00b894'\n                    : '2px dashed rgba(0,0,0,0.25)',\n                  background: t.matched\n                    ? 'linear-gradient(135deg, #4CAF50 0%, #66BB6A 100%)'\n                    : 'rgba(0,0,0,0.03)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: t.matched ? '#fff' : 'inherit',\n                  fontWeight: 700,\n                  textTransform: 'uppercase',\n                  letterSpacing: 0.4,\n                  transition: 'all .15s ease',\n                }}>\n                  {t.matched ? t.english : ''}\n                </Box>\n                <Typography variant=\"body2\" sx={{ fontWeight: 700, color: '#37474F', textAlign: 'center' }}>\n                  {t.turkish}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </Box>\n          {/* Actions */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mt: 1.5 }}>\n            <Button variant=\"outlined\" onClick={() => navigate('/kelime-eslestirme')} sx={{ borderColor: '#00b894', color: '#00695c', fontWeight: 600, borderRadius: 2, px: 3, mb: '15px', '&:hover': { borderColor: '#00cec9', backgroundColor: 'rgba(0, 184, 148, 0.04)' } }}>\n              Seviye Değiştir\n            </Button>\n            {gameCompleted && (\n              <Button variant=\"contained\" onClick={reset} sx={{ background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)', color: '#fff', fontWeight: 600, borderRadius: 2, px: 3, '&:hover': { background: 'linear-gradient(90deg, #00cec9 0%, #00b894 100%)' } }}>\n                Tekrar Oyna\n              </Button>\n            )}\n          </Box>\n          {/* Finish button below actions to go to classic questions */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 0.5, mb: 3 }}>\n            <Button\n              aria-label=\"Bitir ve Klasik Sorulara Dön\"\n              onClick={() => navigate('/questions')}\n              sx={{\n                textTransform: 'none',\n                fontWeight: 700,\n                borderRadius: 3,\n                px: 3,\n                py: 1.1,\n                background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n                color: '#fff',\n                boxShadow: '0 8px 20px rgba(0,0,0,0.08)',\n                '&:hover': { background: 'linear-gradient(135deg, #00a085 0%, #00b8b3 100%)' }\n              }}\n              variant=\"contained\"\n            >\n              Bitir\n            </Button>\n          </Box>\n      </Paper>\n      \n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}