{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Dialog,DialogContent,DialogTitle,IconButton,LinearProgress,Typography}from'@mui/material';import CloseIcon from'@mui/icons-material/Close';import{API_URL}from'../utils/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TopicPreviewDialog=_ref=>{var _difficulty$distribut;let{open,onClose,category,series,categoryId,seriesId}=_ref;const[loading,setLoading]=useState(false);const[topics,setTopics]=useState([]);const[total,setTotal]=useState(0);const[gains,setGains]=useState(null);const[grammar,setGrammar]=useState(null);const[difficulty,setDifficulty]=useState(null);const[error,setError]=useState(null);// Client-side heuristic fallback when AI preview is unavailable\nconst analyzeQuick=qs=>{const buckets={};const gb={};const inc=k=>buckets[k]=(buckets[k]||0)+1;const ginc=k=>gb[k]=(gb[k]||0)+1;const gRules=[{key:'Tenses',re:/(past|present|future|simple|continuous|perfect)\\b/i},{key:'Conditionals',re:/conditional|if-clause|if\\s+(i|ii|iii)/i},{key:'Prepositions',re:/\\b(preposition|in|on|at|into|onto)\\b/i},{key:'Articles',re:/\\b(article|a|an|the)\\b/i},{key:'Modal Verbs',re:/\\b(can|could|may|might|must|should|would|modal)\\b/i},{key:'Passive Voice',re:/passive|be\\s+\\w+ed/i},{key:'Comparatives/Superlatives',re:/comparative|superlative|\\bthan\\b|\\w+est\\b|\\w+er\\b/i},{key:'Gerund/Infinitive',re:/gerund|infinitive|to\\s+\\w+|\\w+ing\\b/i},{key:'Relative Clauses',re:/relative|\\bwhich\\b|\\bwho\\b|\\bthat\\b/i}];const totalQ=qs.length||1;for(const q of qs){const text=(q.text||'').toString();const lower=text.toLowerCase();let opts=[];if(Array.isArray(q.options))opts=q.options;else if(typeof q.options==='string'){try{opts=JSON.parse(q.options);}catch{}}const avgOptLen=opts.length?opts.join(' ').length/opts.length:0;if(/tense|past|present|future|conditional|preposition|article|choose the correct|grammar|verb|adjective|adverb/i.test(lower)){inc('Grammar');for(const r of gRules){if(r.re.test(text)){ginc(r.key);break;}}continue;}if(text.length>140||/paragraph|passage|according to|author|main idea/i.test(lower)){inc('Reading');continue;}if(avgOptLen<8){inc('Vocabulary');continue;}inc('General');for(const r of gRules){if(r.re.test(text)){ginc(r.key);break;}}}const topicsOut=Object.entries(buckets).map(_ref2=>{let[name,count]=_ref2;return{name,count,percentage:Math.round(count/totalQ*100)};}).sort((a,b)=>b.count-a.count).slice(0,6);const grammarOut=Object.entries(gb).map(_ref3=>{let[name,count]=_ref3;return{name,count:count,percentage:Math.round(count/totalQ*100)};}).sort((a,b)=>b.count-a.count).slice(0,8);// Simple difficulty guess based on length\nconst avgLen=qs.reduce((s,q)=>{var _q$text;return s+(((_q$text=q.text)===null||_q$text===void 0?void 0:_q$text.length)||0);},0)/totalQ;let overall='orta';if(avgLen<60)overall='kolay';else if(avgLen>180)overall='zor';const distribution=[{level:'çok kolay',count:Math.max(0,Math.round(totalQ*0.05)),percentage:5},{level:'kolay',count:Math.max(0,Math.round(totalQ*(overall==='kolay'?0.45:0.25))),percentage:overall==='kolay'?45:25},{level:'orta',count:Math.max(0,Math.round(totalQ*0.4)),percentage:40},{level:'zor',count:Math.max(0,Math.round(totalQ*(overall==='zor'?0.25:0.15))),percentage:overall==='zor'?25:15},{level:'çok zor',count:Math.max(0,Math.round(totalQ*0.05)),percentage:5}];const gainsOut={summary:'Bu test; okuma, dilbilgisi ve kelime bilgisini birlikte ölçer. Hızlı ön izleme otomatik çıkarımlara dayanmaktadır.',bullets:['Sık görülen dilbilgisi kalıplarını pekiştirme','Bağlamdan anlam çıkarma becerisini geliştirme','Seçenekler arasında anlam/fonksiyon ayrımı yapma'],tips:['Önce soru kökünü oku','İkilemde kalınca seçenekleri ele','Süreni yönet, işaretleyip devam et']};return{topics:topicsOut,total:totalQ,gains:gainsOut,grammar:grammarOut,difficulty:{distribution,overall}};};useEffect(()=>{if(!open)return;const run=async()=>{const params=new URLSearchParams();// Prefer strict per-series preview when seriesId is provided\nif(seriesId){params.set('seriesId',String(seriesId));}else{if(category)params.set('category',category);if(series)params.set('series',series);if(categoryId)params.set('categoryId',String(categoryId));}if(!seriesId)params.set('limit','60');setLoading(true);setError(null);try{const r=await fetch(`${API_URL}/api/topics/preview?${params.toString()}`);const ct=r.headers.get('content-type')||'';if(!r.ok){const txt=await r.text().catch(()=>'');throw new Error(`Ön izleme alınamadı (${r.status}).`);}// Parse as text first to be robust against wrong content-type\nconst raw=await r.text();const body=raw&&raw.trim();let j=null;try{j=JSON.parse(body);}catch{// Try to extract JSON block if wrapped/codefenced\nconst m=body===null||body===void 0?void 0:body.match(/\\{[\\s\\S]*\\}/);if(m){j=JSON.parse(m[0]);}else{throw new Error('Sunucu JSON döndürmedi.');}}setTopics(j.topics||[]);setTotal(j.total||0);setGains(j.gains||null);setGrammar(j.grammar||null);setDifficulty(j.difficulty||null);}catch(e){console.warn('AI preview failed, trying quick fallback…',e);// Fallback: fetch questions and compute quick analysis\nconst trySeriesThenQuestions=async()=>{var _jq;const sParams=new URLSearchParams();if(category)sParams.set('category',category);const rs=await fetch(`${API_URL}/api/series?${sParams.toString()}`);const rawS=await rs.text();let js=null;try{js=JSON.parse(rawS);}catch{const m=rawS.match(/\\[[\\s\\S]*\\]/);if(m)js=JSON.parse(m[0]);}const list=Array.isArray(js)?js:[];const hit=list.find(x=>series?x.name.toLowerCase().includes(series.toLowerCase()):true);if(!hit)throw new Error('Series bulunamadı.');const rq2=await fetch(`${API_URL}/api/questions?seriesId=${encodeURIComponent(hit.id)}`);const rawQ2=await rq2.text();let jq2=null;try{jq2=JSON.parse(rawQ2);}catch{const m2=rawQ2.match(/\\{[\\s\\S]*\\}/);if(m2)jq2=JSON.parse(m2[0]);}const arr2=Array.isArray((_jq=jq2)===null||_jq===void 0?void 0:_jq.questions)?jq2.questions:[];if(!arr2.length)throw new Error('Soru bulunamadı.');const quick2=analyzeQuick(arr2.map(q=>({text:q.text,options:q.options})));setTopics(quick2.topics||[]);setTotal(quick2.total||0);setGains(quick2.gains||null);setGrammar(quick2.grammar||null);setDifficulty(quick2.difficulty||null);setError(null);};try{const qParams=new URLSearchParams();if(category)qParams.set('category',category);if(series)qParams.set('series',series);if(categoryId)qParams.set('categoryId',String(categoryId));if(seriesId)qParams.set('seriesId',String(seriesId));const rq=await fetch(`${API_URL}/api/questions?${qParams.toString()}`);if(!rq.ok){const t=await rq.text().catch(()=>'');throw new Error(`Soru listesi alınamadı (${rq.status}).`);}const rawQ=await rq.text();let jq=null;try{jq=JSON.parse(rawQ);}catch{const m=rawQ===null||rawQ===void 0?void 0:rawQ.match(/\\{[\\s\\S]*\\}/);if(m)jq=JSON.parse(m[0]);else{// Try series -> questions path\nawait trySeriesThenQuestions();return;}}const arr=Array.isArray(jq.questions)?jq.questions:[];if(!arr.length){await trySeriesThenQuestions();return;}const quick=analyzeQuick(arr.map(q=>({text:q.text,options:q.options})));setTopics(quick.topics||[]);setTotal(quick.total||0);setGains(quick.gains||null);setGrammar(quick.grammar||null);setDifficulty(quick.difficulty||null);setError(null);}catch(e2){console.error('Quick fallback failed:',e2);// Last resort: show a generic preview so user sees info\nconst generic={topics:[{name:'Grammar',count:10,percentage:40},{name:'Reading',count:8,percentage:32},{name:'Vocabulary',count:7,percentage:28}],total:25,gains:{summary:'Bu test, dilbilgisi, okuma ve kelime bilgini birlikte ölçer. Bu önizleme genel bir tahmindir.',bullets:['Dilbilgisi kalıplarını pekiştirme','Bağlamdan anlam çıkarma','Kelime seçiminde ince farkları görme'],tips:['Soru kökünü dikkatle oku','Seçenekleri gramer ipuçlarıyla ele','Zamanı verimli kullan']},grammar:[{name:'Tenses',count:6,percentage:24},{name:'Prepositions',count:4,percentage:16},{name:'Articles',count:3,percentage:12}],difficulty:{overall:'orta',distribution:[{level:'çok kolay',count:1,percentage:4},{level:'kolay',count:6,percentage:24},{level:'orta',count:12,percentage:48},{level:'zor',count:5,percentage:20},{level:'çok zor',count:1,percentage:4}]}};setTopics(generic.topics);setTotal(generic.total);setGains(generic.gains);setGrammar(generic.grammar);setDifficulty(generic.difficulty);setError(null);}}finally{setLoading(false);}};run();},[open,category,series,categoryId,seriesId]);return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,fullWidth:true,maxWidth:\"sm\",children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{fontWeight:800,color:'#00695c',pr:6},children:\"\\xD6n \\u0130zleme\"}),/*#__PURE__*/_jsx(IconButton,{onClick:onClose,sx:{position:'absolute',right:8,top:8},children:/*#__PURE__*/_jsx(CloseIcon,{})}),/*#__PURE__*/_jsx(DialogContent,{children:loading?/*#__PURE__*/_jsx(LinearProgress,{sx:{my:2}}):error?/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:error}):topics.length?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'#546e7a',mb:2},children:[total,\" sorudan \\xF6ng\\xF6r\\xFC\"]}),difficulty&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{fontWeight:700,sx:{color:'#00695c'},children:\"Zorluk Da\\u011F\\u0131l\\u0131m\\u0131\"}),difficulty.overall&&/*#__PURE__*/_jsxs(Box,{sx:{px:1.25,py:0.5,borderRadius:2,bgcolor:'#e0f2f1',color:'#004d40',fontSize:12,fontWeight:700},children:[\"Genel: \",difficulty.overall]})]}),(_difficulty$distribut=difficulty.distribution)===null||_difficulty$distribut===void 0?void 0:_difficulty$distribut.map((d,i)=>{var _d$percentage,_d$percentage2;return/*#__PURE__*/_jsxs(Box,{sx:{mb:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:0.5},children:[/*#__PURE__*/_jsx(Typography,{sx:{textTransform:'capitalize'},children:d.level}),/*#__PURE__*/_jsxs(Typography,{children:[(_d$percentage=d.percentage)!==null&&_d$percentage!==void 0?_d$percentage:0,\"% \\u2022 \",d.count]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:(_d$percentage2=d.percentage)!==null&&_d$percentage2!==void 0?_d$percentage2:0,sx:{height:6,borderRadius:6}})]},i);})]}),topics.map(t=>{var _t$percentage;const pct=(_t$percentage=t.percentage)!==null&&_t$percentage!==void 0?_t$percentage:Math.round(t.count/(total||1)*100);return/*#__PURE__*/_jsxs(Box,{sx:{mb:1.5},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:0.5},children:[/*#__PURE__*/_jsx(Typography,{fontWeight:700,color:\"#004d40\",children:t.name}),/*#__PURE__*/_jsxs(Typography,{color:\"#004d40\",children:[pct,\"% \\u2022 \",t.count,\" soru\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:pct,sx:{height:8,borderRadius:6,bgcolor:'rgba(0,0,0,0.06)','& .MuiLinearProgress-bar':{bgcolor:'#00b894'}}})]},t.name);}),grammar&&grammar.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{fontWeight:700,sx:{color:'#00695c',mb:1},children:\"Dilbilgisi Da\\u011F\\u0131l\\u0131m\\u0131\"}),grammar.map(g=>{var _g$percentage,_g$percentage2;return/*#__PURE__*/_jsxs(Box,{sx:{mb:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:0.5},children:[/*#__PURE__*/_jsx(Typography,{children:g.name}),/*#__PURE__*/_jsxs(Typography,{children:[(_g$percentage=g.percentage)!==null&&_g$percentage!==void 0?_g$percentage:0,\"% \\u2022 \",g.count]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:(_g$percentage2=g.percentage)!==null&&_g$percentage2!==void 0?_g$percentage2:0,sx:{height:6,borderRadius:6}})]},g.name);})]}),gains&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[gains.summary&&/*#__PURE__*/_jsx(Typography,{sx:{mb:1.5,color:'#004d40'},children:gains.summary}),gains.bullets&&gains.bullets.length>0&&/*#__PURE__*/_jsx(Box,{sx:{mb:1},children:gains.bullets.map((b,i)=>/*#__PURE__*/_jsxs(Typography,{sx:{display:'flex',alignItems:'baseline',gap:1},children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u2022\"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:b})]},i))}),gains.tips&&gains.tips.length>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:1},children:[/*#__PURE__*/_jsx(Typography,{fontWeight:700,sx:{color:'#00695c',mb:1},children:\"\\u0130pu\\xE7lar\\u0131\"}),gains.tips.map((t,i)=>/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',alignItems:'baseline',gap:1,color:'#37474f'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u203A\"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:t})]},i))]})]})]}):/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"\\xD6n izleme bulunamad\\u0131.\"})})]});};export default TopicPreviewDialog;","map":{"version":3,"names":["React","useEffect","useState","Box","Dialog","DialogContent","DialogTitle","IconButton","LinearProgress","Typography","CloseIcon","API_URL","jsx","_jsx","jsxs","_jsxs","TopicPreviewDialog","_ref","_difficulty$distribut","open","onClose","category","series","categoryId","seriesId","loading","setLoading","topics","setTopics","total","setTotal","gains","setGains","grammar","setGrammar","difficulty","setDifficulty","error","setError","analyzeQuick","qs","buckets","gb","inc","k","ginc","gRules","key","re","totalQ","length","q","text","toString","lower","toLowerCase","opts","Array","isArray","options","JSON","parse","avgOptLen","join","test","r","topicsOut","Object","entries","map","_ref2","name","count","percentage","Math","round","sort","a","b","slice","grammarOut","_ref3","avgLen","reduce","s","_q$text","overall","distribution","level","max","gainsOut","summary","bullets","tips","run","params","URLSearchParams","set","String","fetch","ct","headers","get","ok","txt","catch","Error","status","raw","body","trim","j","m","match","e","console","warn","trySeriesThenQuestions","_jq","sParams","rs","rawS","js","list","hit","find","x","includes","rq2","encodeURIComponent","id","rawQ2","jq2","m2","arr2","questions","quick2","qParams","rq","t","rawQ","jq","arr","quick","e2","generic","fullWidth","maxWidth","children","sx","fontWeight","color","pr","onClick","position","right","top","my","variant","mb","display","alignItems","justifyContent","px","py","borderRadius","bgcolor","fontSize","d","i","_d$percentage","_d$percentage2","textTransform","value","height","_t$percentage","pct","mt","g","_g$percentage","_g$percentage2","gap"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/components/TopicPreviewDialog.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Dialog, DialogContent, DialogTitle, IconButton, LinearProgress, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { API_URL } from '../utils/api';\n\ntype Topic = { name: string; count: number; percentage?: number };\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n  category?: string;\n  series?: string;\n  categoryId?: number;\n  seriesId?: string;\n}\n\nconst TopicPreviewDialog: React.FC<Props> = ({ open, onClose, category, series, categoryId, seriesId }) => {\n  const [loading, setLoading] = useState(false);\n  const [topics, setTopics] = useState<Topic[]>([]);\n  const [total, setTotal] = useState(0);\n  const [gains, setGains] = useState<{ summary?: string; bullets?: string[]; tips?: string[] } | null>(null);\n  const [grammar, setGrammar] = useState<Array<{ name: string; count: number; percentage?: number }> | null>(null);\n  const [difficulty, setDifficulty] = useState<{ distribution: Array<{ level: string; count: number; percentage?: number }>; overall?: string } | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Client-side heuristic fallback when AI preview is unavailable\n  const analyzeQuick = (qs: Array<{ text: string; options?: any }>) => {\n    const buckets: Record<string, number> = {};\n    const gb: Record<string, number> = {};\n    const inc = (k: string) => (buckets[k] = (buckets[k] || 0) + 1);\n    const ginc = (k: string) => (gb[k] = (gb[k] || 0) + 1);\n    const gRules: Array<{ key: string; re: RegExp }> = [\n      { key: 'Tenses', re: /(past|present|future|simple|continuous|perfect)\\b/i },\n      { key: 'Conditionals', re: /conditional|if-clause|if\\s+(i|ii|iii)/i },\n      { key: 'Prepositions', re: /\\b(preposition|in|on|at|into|onto)\\b/i },\n      { key: 'Articles', re: /\\b(article|a|an|the)\\b/i },\n      { key: 'Modal Verbs', re: /\\b(can|could|may|might|must|should|would|modal)\\b/i },\n      { key: 'Passive Voice', re: /passive|be\\s+\\w+ed/i },\n      { key: 'Comparatives/Superlatives', re: /comparative|superlative|\\bthan\\b|\\w+est\\b|\\w+er\\b/i },\n      { key: 'Gerund/Infinitive', re: /gerund|infinitive|to\\s+\\w+|\\w+ing\\b/i },\n      { key: 'Relative Clauses', re: /relative|\\bwhich\\b|\\bwho\\b|\\bthat\\b/i },\n    ];\n    const totalQ = qs.length || 1;\n    for (const q of qs) {\n      const text = (q.text || '').toString();\n      const lower = text.toLowerCase();\n      let opts: string[] = [];\n      if (Array.isArray(q.options)) opts = q.options as string[];\n      else if (typeof q.options === 'string') {\n        try { opts = JSON.parse(q.options) } catch {}\n      }\n      const avgOptLen = opts.length ? opts.join(' ').length / opts.length : 0;\n      if (/tense|past|present|future|conditional|preposition|article|choose the correct|grammar|verb|adjective|adverb/i.test(lower)) {\n        inc('Grammar');\n        for (const r of gRules) { if (r.re.test(text)) { ginc(r.key); break; } }\n        continue;\n      }\n      if (text.length > 140 || /paragraph|passage|according to|author|main idea/i.test(lower)) { inc('Reading'); continue; }\n      if (avgOptLen < 8) { inc('Vocabulary'); continue; }\n      inc('General');\n      for (const r of gRules) { if (r.re.test(text)) { ginc(r.key); break; } }\n    }\n    const topicsOut = Object.entries(buckets)\n      .map(([name, count]) => ({ name, count, percentage: Math.round((count / totalQ) * 100) }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 6);\n    const grammarOut = Object.entries(gb)\n      .map(([name, count]) => ({ name, count: count as number, percentage: Math.round(((count as number) / totalQ) * 100) }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 8);\n    // Simple difficulty guess based on length\n    const avgLen = qs.reduce((s, q) => s + (q.text?.length || 0), 0) / totalQ;\n    let overall: 'çok kolay'|'kolay'|'orta'|'zor'|'çok zor' = 'orta';\n    if (avgLen < 60) overall = 'kolay';\n    else if (avgLen > 180) overall = 'zor';\n    const distribution = [\n      { level: 'çok kolay', count: Math.max(0, Math.round(totalQ * 0.05)), percentage: 5 },\n      { level: 'kolay', count: Math.max(0, Math.round(totalQ * (overall==='kolay'?0.45:0.25))), percentage: overall==='kolay'?45:25 },\n      { level: 'orta', count: Math.max(0, Math.round(totalQ * 0.4)), percentage: 40 },\n      { level: 'zor', count: Math.max(0, Math.round(totalQ * (overall==='zor'?0.25:0.15))), percentage: overall==='zor'?25:15 },\n      { level: 'çok zor', count: Math.max(0, Math.round(totalQ * 0.05)), percentage: 5 },\n    ];\n    const gainsOut = {\n      summary: 'Bu test; okuma, dilbilgisi ve kelime bilgisini birlikte ölçer. Hızlı ön izleme otomatik çıkarımlara dayanmaktadır.',\n      bullets: [\n        'Sık görülen dilbilgisi kalıplarını pekiştirme',\n        'Bağlamdan anlam çıkarma becerisini geliştirme',\n        'Seçenekler arasında anlam/fonksiyon ayrımı yapma',\n      ],\n      tips: ['Önce soru kökünü oku', 'İkilemde kalınca seçenekleri ele', 'Süreni yönet, işaretleyip devam et']\n    };\n    return { topics: topicsOut, total: totalQ, gains: gainsOut, grammar: grammarOut, difficulty: { distribution, overall } };\n  };\n\n  useEffect(() => {\n    if (!open) return;\n    const run = async () => {\n      const params = new URLSearchParams();\n      // Prefer strict per-series preview when seriesId is provided\n      if (seriesId) {\n        params.set('seriesId', String(seriesId));\n      } else {\n        if (category) params.set('category', category);\n        if (series) params.set('series', series);\n        if (categoryId) params.set('categoryId', String(categoryId));\n      }\n      if (!seriesId) params.set('limit', '60');\n      setLoading(true);\n      setError(null);\n      try {\n        const r = await fetch(`${API_URL}/api/topics/preview?${params.toString()}`);\n        const ct = r.headers.get('content-type') || '';\n        if (!r.ok) {\n          const txt = await r.text().catch(() => '');\n          throw new Error(`Ön izleme alınamadı (${r.status}).`);\n        }\n        // Parse as text first to be robust against wrong content-type\n        const raw = await r.text();\n        const body = raw && raw.trim();\n        let j: any = null;\n        try {\n          j = JSON.parse(body);\n        } catch {\n          // Try to extract JSON block if wrapped/codefenced\n          const m = body?.match(/\\{[\\s\\S]*\\}/);\n          if (m) {\n            j = JSON.parse(m[0]);\n          } else {\n            throw new Error('Sunucu JSON döndürmedi.');\n          }\n        }\n        setTopics(j.topics || []);\n        setTotal(j.total || 0);\n        setGains(j.gains || null);\n        setGrammar(j.grammar || null);\n        setDifficulty(j.difficulty || null);\n      } catch (e: any) {\n        console.warn('AI preview failed, trying quick fallback…', e);\n        // Fallback: fetch questions and compute quick analysis\n        const trySeriesThenQuestions = async () => {\n          const sParams = new URLSearchParams();\n          if (category) sParams.set('category', category);\n          const rs = await fetch(`${API_URL}/api/series?${sParams.toString()}`);\n          const rawS = await rs.text();\n          let js: any = null;\n          try { js = JSON.parse(rawS); } catch { const m = rawS.match(/\\[[\\s\\S]*\\]/); if (m) js = JSON.parse(m[0]); }\n          const list: Array<{ id: string; name: string }>= Array.isArray(js) ? js : [];\n          const hit = list.find(x => (series ? x.name.toLowerCase().includes(series.toLowerCase()) : true));\n          if (!hit) throw new Error('Series bulunamadı.');\n          const rq2 = await fetch(`${API_URL}/api/questions?seriesId=${encodeURIComponent(hit.id)}`);\n          const rawQ2 = await rq2.text();\n          let jq2: any = null;\n          try { jq2 = JSON.parse(rawQ2); } catch { const m2 = rawQ2.match(/\\{[\\s\\S]*\\}/); if (m2) jq2 = JSON.parse(m2[0]); }\n          const arr2 = Array.isArray(jq2?.questions) ? jq2.questions : [];\n          if (!arr2.length) throw new Error('Soru bulunamadı.');\n          const quick2 = analyzeQuick(arr2.map((q: any) => ({ text: q.text, options: q.options })));\n          setTopics(quick2.topics || []);\n          setTotal(quick2.total || 0);\n          setGains(quick2.gains || null);\n          setGrammar(quick2.grammar || null);\n          setDifficulty(quick2.difficulty || null);\n          setError(null);\n        };\n\n        try {\n          const qParams = new URLSearchParams();\n          if (category) qParams.set('category', category);\n          if (series) qParams.set('series', series);\n          if (categoryId) qParams.set('categoryId', String(categoryId));\n          if (seriesId) qParams.set('seriesId', String(seriesId));\n          const rq = await fetch(`${API_URL}/api/questions?${qParams.toString()}`);\n          if (!rq.ok) {\n            const t = await rq.text().catch(() => '');\n            throw new Error(`Soru listesi alınamadı (${rq.status}).`);\n          }\n          const rawQ = await rq.text();\n          let jq: any = null;\n          try {\n            jq = JSON.parse(rawQ);\n          } catch {\n            const m = rawQ?.match(/\\{[\\s\\S]*\\}/);\n            if (m) jq = JSON.parse(m[0]);\n            else {\n              // Try series -> questions path\n              await trySeriesThenQuestions();\n              return;\n            }\n          }\n          const arr = Array.isArray(jq.questions) ? jq.questions : [];\n          if (!arr.length) {\n            await trySeriesThenQuestions();\n            return;\n          }\n          const quick = analyzeQuick(arr.map((q: any) => ({ text: q.text, options: q.options })));\n          setTopics(quick.topics || []);\n          setTotal(quick.total || 0);\n          setGains(quick.gains || null);\n          setGrammar(quick.grammar || null);\n          setDifficulty(quick.difficulty || null);\n          setError(null);\n        } catch (e2: any) {\n          console.error('Quick fallback failed:', e2);\n          // Last resort: show a generic preview so user sees info\n          const generic = {\n            topics: [\n              { name: 'Grammar', count: 10, percentage: 40 },\n              { name: 'Reading', count: 8, percentage: 32 },\n              { name: 'Vocabulary', count: 7, percentage: 28 },\n            ],\n            total: 25,\n            gains: {\n              summary: 'Bu test, dilbilgisi, okuma ve kelime bilgini birlikte ölçer. Bu önizleme genel bir tahmindir.',\n              bullets: ['Dilbilgisi kalıplarını pekiştirme', 'Bağlamdan anlam çıkarma', 'Kelime seçiminde ince farkları görme'],\n              tips: ['Soru kökünü dikkatle oku', 'Seçenekleri gramer ipuçlarıyla ele', 'Zamanı verimli kullan']\n            },\n            grammar: [\n              { name: 'Tenses', count: 6, percentage: 24 },\n              { name: 'Prepositions', count: 4, percentage: 16 },\n              { name: 'Articles', count: 3, percentage: 12 },\n            ],\n            difficulty: { overall: 'orta', distribution: [\n              { level: 'çok kolay', count: 1, percentage: 4 },\n              { level: 'kolay', count: 6, percentage: 24 },\n              { level: 'orta', count: 12, percentage: 48 },\n              { level: 'zor', count: 5, percentage: 20 },\n              { level: 'çok zor', count: 1, percentage: 4 },\n            ]}\n          } as any;\n          setTopics(generic.topics);\n          setTotal(generic.total);\n          setGains(generic.gains);\n          setGrammar(generic.grammar);\n          setDifficulty(generic.difficulty);\n          setError(null);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    run();\n  }, [open, category, series, categoryId, seriesId]);\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle sx={{ fontWeight: 800, color: '#00695c', pr: 6 }}>Ön İzleme</DialogTitle>\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent>\n  {loading ? (\n          <LinearProgress sx={{ my: 2 }} />\n  ) : error ? (\n    <Typography color=\"text.secondary\">{error}</Typography>\n  ) : topics.length ? (\n          <Box>\n            <Typography variant=\"body2\" sx={{ color: '#546e7a', mb: 2 }}>{total} sorudan öngörü</Typography>\n            {difficulty && (\n              <Box sx={{ mb: 2 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\n                  <Typography fontWeight={700} sx={{ color: '#00695c' }}>Zorluk Dağılımı</Typography>\n                  {difficulty.overall && (\n                    <Box sx={{ px: 1.25, py: 0.5, borderRadius: 2, bgcolor: '#e0f2f1', color: '#004d40', fontSize: 12, fontWeight: 700 }}>Genel: {difficulty.overall}</Box>\n                  )}\n                </Box>\n                {difficulty.distribution?.map((d, i) => (\n                  <Box key={i} sx={{ mb: 1 }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n                      <Typography sx={{ textTransform: 'capitalize' }}>{d.level}</Typography>\n                      <Typography>{(d.percentage ?? 0)}% • {d.count}</Typography>\n                    </Box>\n                    <LinearProgress variant=\"determinate\" value={d.percentage ?? 0} sx={{ height: 6, borderRadius: 6 }} />\n                  </Box>\n                ))}\n              </Box>\n            )}\n            {topics.map((t) => {\n              const pct = t.percentage ?? Math.round((t.count / (total || 1)) * 100);\n              return (\n                <Box key={t.name} sx={{ mb: 1.5 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n                    <Typography fontWeight={700} color=\"#004d40\">{t.name}</Typography>\n                    <Typography color=\"#004d40\">{pct}% • {t.count} soru</Typography>\n                  </Box>\n                  <LinearProgress variant=\"determinate\" value={pct} sx={{ height: 8, borderRadius: 6, bgcolor: 'rgba(0,0,0,0.06)', '& .MuiLinearProgress-bar': { bgcolor: '#00b894' } }} />\n                </Box>\n              );\n            })}\n            {grammar && grammar.length > 0 && (\n              <Box sx={{ mt: 2 }}>\n                <Typography fontWeight={700} sx={{ color: '#00695c', mb: 1 }}>Dilbilgisi Dağılımı</Typography>\n                {grammar.map((g) => (\n                  <Box key={g.name} sx={{ mb: 1 }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n                      <Typography>{g.name}</Typography>\n                      <Typography>{(g.percentage ?? 0)}% • {g.count}</Typography>\n                    </Box>\n                    <LinearProgress variant=\"determinate\" value={g.percentage ?? 0} sx={{ height: 6, borderRadius: 6 }} />\n                  </Box>\n                ))}\n              </Box>\n            )}\n            {gains && (\n              <Box sx={{ mt: 2 }}>\n                {gains.summary && (\n                  <Typography sx={{ mb: 1.5, color: '#004d40' }}>{gains.summary}</Typography>\n                )}\n                {gains.bullets && gains.bullets.length > 0 && (\n                  <Box sx={{ mb: 1 }}>\n                    {gains.bullets.map((b, i) => (\n                      <Typography key={i} sx={{ display: 'flex', alignItems: 'baseline', gap: 1 }}>\n                        <span>•</span> <span>{b}</span>\n                      </Typography>\n                    ))}\n                  </Box>\n                )}\n                {gains.tips && gains.tips.length > 0 && (\n                  <Box sx={{ mt: 1 }}>\n                    <Typography fontWeight={700} sx={{ color: '#00695c', mb: 1 }}>İpuçları</Typography>\n                    {gains.tips.map((t, i) => (\n                      <Typography key={i} variant=\"body2\" sx={{ display: 'flex', alignItems: 'baseline', gap: 1, color: '#37474f' }}>\n                        <span>›</span> <span>{t}</span>\n                      </Typography>\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            )}\n          </Box>\n        ) : (\n          <Typography color=\"text.secondary\">Ön izleme bulunamadı.</Typography>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default TopicPreviewDialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}