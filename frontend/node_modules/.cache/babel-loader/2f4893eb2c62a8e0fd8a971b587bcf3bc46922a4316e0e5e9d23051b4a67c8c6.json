{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Paper,Typography,Button,Alert,Fade}from'@mui/material';import ArrowBackIcon from'@mui/icons-material/ArrowBack';import RefreshIcon from'@mui/icons-material/Refresh';import CheckCircleIcon from'@mui/icons-material/CheckCircle';import ErrorIcon from'@mui/icons-material/Error';import{useNavigate,useSearchParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// Words will come from backend (MySQL via Prisma)\nconst formatTime=secs=>{const m=Math.floor(secs/60).toString().padStart(2,'0');const s=(secs%60).toString().padStart(2,'0');return`${m}:${s}`;};const shuffle=arr=>{const a=[...arr];for(let i=a.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[a[i],a[j]]=[a[j],a[i]];}return a;};export default function WordMatchingGame(){var _sets$find;const navigate=useNavigate();const[searchParams]=useSearchParams();const level=(searchParams.get('level')||'a1').toUpperCase();const setId=searchParams.get('setId');const[sets,setSets]=useState([]);const GAME_WORD_COUNT=15;// each game will have 15 words\nconst[pool,setPool]=useState([]);const[targets,setTargets]=useState([]);const[matched,setMatched]=useState(0);const[selectedWordId,setSelectedWordId]=useState(null);// tap support\nconst[elapsed,setElapsed]=useState(0);// stopwatch seconds (hidden while playing)\nconst[playing,setPlaying]=useState(true);const[gameCompleted,setGameCompleted]=useState(false);const[wrongMsg,setWrongMsg]=useState(false);const[successMsg,setSuccessMsg]=useState(false);// Prepare game by fetching: if setId is provided, use that set; otherwise choose 15 random from words API\nconst initGame=async()=>{try{let pairs=[];if(setId){const res=await fetch(`http://localhost:4000/api/games/word-matching/sets/${setId}`,{cache:'no-store'});const data=await res.json();const items=Array.isArray(data===null||data===void 0?void 0:data.items)?data.items:[];pairs=items.slice(0,GAME_WORD_COUNT).map((w,idx)=>({id:idx+1,english:w.english,turkish:w.turkish}));}else{const apiLevel=['A1','A2','B1','B2'].includes(level)?level:'A1';const res=await fetch(`http://localhost:4000/api/words?level=${apiLevel}&limit=200`,{cache:'no-store'});const data=await res.json();const raw=Array.isArray(data===null||data===void 0?void 0:data.words)?data.words:[];const chosen=shuffle(raw).slice(0,GAME_WORD_COUNT);pairs=chosen.map((w,idx)=>({id:idx+1,english:w.english,turkish:w.turkish}));}const newPool=shuffle(pairs.map(p=>({id:p.id,text:p.english,used:false})));const newTargets=pairs.map(p=>({id:p.id,turkish:p.turkish,english:p.english,matched:false,wrongFlash:false}));setPool(newPool);setTargets(newTargets);setMatched(0);setSelectedWordId(null);setElapsed(0);setPlaying(true);setGameCompleted(false);setWrongMsg(false);setSuccessMsg(false);}catch(e){// Fallback: basic static list if API is unreachable\nconst fallback=[{id:1,turkish:'merhaba',english:'hello'},{id:2,turkish:'dünya',english:'world'},{id:3,turkish:'aile',english:'family'},{id:4,turkish:'okul',english:'school'},{id:5,turkish:'kitap',english:'book'},{id:6,turkish:'su',english:'water'},{id:7,turkish:'ev',english:'house'},{id:8,turkish:'araba',english:'car'},{id:9,turkish:'yemek',english:'food'},{id:10,turkish:'zaman',english:'time'},{id:11,turkish:'para',english:'money'},{id:12,turkish:'çalışma',english:'work'},{id:13,turkish:'oyun',english:'game'},{id:14,turkish:'müzik',english:'music'}];const pairs=shuffle(fallback).slice(0,GAME_WORD_COUNT).map((p,i)=>({...p,id:i+1}));const newPool=shuffle(pairs.map(p=>({id:p.id,text:p.english,used:false})));const newTargets=pairs.map(p=>({id:p.id,turkish:p.turkish,english:p.english,matched:false,wrongFlash:false}));setPool(newPool);setTargets(newTargets);setMatched(0);setSelectedWordId(null);setElapsed(0);setPlaying(true);setGameCompleted(false);setWrongMsg(false);setSuccessMsg(false);}};// Load game whenever level or setId changes\nuseEffect(()=>{initGame();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[level,setId]);// Fetch available sets for arrows\nuseEffect(()=>{const loadSets=async()=>{try{const apiLevel=['A1','A2','B1','B2'].includes(level)?level:'A1';const res=await fetch(`http://localhost:4000/api/games/word-matching/sets?level=${apiLevel}`,{cache:'no-store'});const data=await res.json();const list=Array.isArray(data===null||data===void 0?void 0:data.sets)?data.sets.map(s=>({id:s.id,title:s.title})):[];setSets(list);}catch{}};loadSets();},[level]);// Stopwatch (hidden while playing)\nuseEffect(()=>{if(!playing||gameCompleted)return;const t=setInterval(()=>setElapsed(c=>c+1),1000);return()=>clearInterval(t);},[playing,gameCompleted]);// Drag handlers\nconst onDragStart=(e,wordId)=>{if(!playing)return;e.dataTransfer.setData('text/plain',String(wordId));e.dataTransfer.effectAllowed='move';};const onDragOver=e=>{if(!playing)return;e.preventDefault();e.dataTransfer.dropEffect='move';};const tryMatch=(targetId,wordId)=>{var _targets$find,_pool$find;if(!playing)return;if((_targets$find=targets.find(t=>t.id===targetId))!==null&&_targets$find!==void 0&&_targets$find.matched)return;if((_pool$find=pool.find(p=>p.id===wordId))!==null&&_pool$find!==void 0&&_pool$find.used)return;if(targetId===wordId){// success\nsetTargets(prev=>prev.map(t=>t.id===targetId?{...t,matched:true}:t));setPool(prev=>prev.map(w=>w.id===wordId?{...w,used:true}:w));setMatched(m=>m+1);setSelectedWordId(null);setSuccessMsg(true);setTimeout(()=>setSuccessMsg(false),800);}else{// wrong\nsetTargets(prev=>prev.map(t=>t.id===targetId?{...t,wrongFlash:true}:t));setWrongMsg(true);setTimeout(()=>{setWrongMsg(false);setTargets(prev=>prev.map(t=>({...t,wrongFlash:false})));},650);}};const onDrop=(e,targetId)=>{if(!playing)return;e.preventDefault();const data=e.dataTransfer.getData('text/plain');const wordId=Number(data);if(!Number.isFinite(wordId))return;tryMatch(targetId,wordId);};// Tap/click support\nconst handleWordClick=wordId=>{if(!playing)return;const word=pool.find(w=>w.id===wordId);if(!word||word.used)return;setSelectedWordId(prev=>prev===wordId?null:wordId);};const handleTargetClick=targetId=>{if(!playing)return;if(selectedWordId==null)return;tryMatch(targetId,selectedWordId);};// Complete detection\nuseEffect(()=>{if(targets.length>0&&matched===targets.length){setPlaying(false);setGameCompleted(true);}},[matched,targets.length]);const reset=()=>initGame();const handleNewWords=()=>{if(setId&&sets.length>1){// pick a different random set\nconst others=sets.filter(s=>s.id!==setId);const next=others[Math.floor(Math.random()*others.length)];navigate(`/kelime-eslestirme-game?level=${level.toLowerCase()}&setId=${next.id}`);}else{// no set: re-fetch and sample a new random 15\nreset();}};return/*#__PURE__*/_jsx(Box,{sx:{minHeight:'100vh',background:'#b2dfdb',display:'flex',flexDirection:'column',alignItems:'center',pb:{xs:12,md:16},pt:0,px:2},children:/*#__PURE__*/_jsxs(Paper,{elevation:6,sx:{p:0,borderRadius:4,minWidth:340,width:'100%',maxWidth:1000,mt:{xs:1,md:'15px'},background:'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)',backdropFilter:'blur(10px)',border:'1px solid rgba(255, 255, 255, 0.2)',boxShadow:'0 20px 40px rgba(0, 0, 0, 0.1)'},children:[/*#__PURE__*/_jsxs(Box,{sx:{background:'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',color:'#fff',p:{xs:3,md:4},borderTopLeftRadius:'inherit',borderTopRightRadius:'inherit',display:'flex',justifyContent:'space-between',alignItems:'center',position:'relative'},children:[/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:()=>navigate('/kelime-eslestirme'),sx:{color:'#fff',fontWeight:600},children:\"Geri\"}),/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',flex:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",fontWeight:700,mb:1,children:\"Kelime E\\u015Fle\\u015Ftirme\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{opacity:0.9},children:[\"Seviye: \",level]})]}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',alignItems:'center',gap:0.5},children:/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(RefreshIcon,{}),onClick:handleNewWords,sx:{color:'#fff',fontWeight:600},children:\"Yeni Kelimeler\"})})]}),/*#__PURE__*/_jsx(Box,{sx:{p:3,pt:2},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",color:\"#00695c\",fontWeight:600,children:[\"\\u0130lerleme: \",matched,\"/\",targets.length||GAME_WORD_COUNT]}),setId&&sets.length>0&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"#00695c\",sx:{opacity:0.8},children:[\"Set: \",((_sets$find=sets.find(s=>s.id===setId))===null||_sets$find===void 0?void 0:_sets$find.title)||'']})]})}),/*#__PURE__*/_jsxs(Box,{sx:{px:3},children:[wrongMsg&&/*#__PURE__*/_jsx(Fade,{in:wrongMsg,children:/*#__PURE__*/_jsx(Alert,{severity:\"error\",icon:/*#__PURE__*/_jsx(ErrorIcon,{}),sx:{mb:2,borderRadius:2},children:\"Yanl\\u0131\\u015F e\\u015Fle\\u015Fme! Tekrar deneyin.\"})}),successMsg&&/*#__PURE__*/_jsx(Fade,{in:successMsg,children:/*#__PURE__*/_jsx(Alert,{severity:\"success\",icon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),sx:{mb:2,borderRadius:2},children:\"Do\\u011Fru! Devam.\"})}),gameCompleted&&/*#__PURE__*/_jsxs(Alert,{severity:\"success\",icon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),sx:{mb:3,borderRadius:2,fontSize:16},children:[\"Tebrikler! T\\xFCm e\\u015Fle\\u015Fmeler tamamland\\u0131. S\\xFCreniz: \",formatTime(elapsed)]})]}),/*#__PURE__*/_jsx(Box,{sx:{px:3,pb:1},children:(()=>{const half=Math.ceil(pool.length/2);const rows=[pool.slice(0,half),pool.slice(half)];return/*#__PURE__*/_jsx(_Fragment,{children:rows.map((row,idx)=>/*#__PURE__*/_jsx(Box,{sx:{display:'grid',gridAutoFlow:'column',gridAutoColumns:'1fr',gap:1.5,overflowX:{xs:'auto',md:'visible'},pb:1},children:row.map(w=>/*#__PURE__*/_jsx(Box,{draggable:!w.used&&playing,onDragStart:e=>onDragStart(e,w.id),onClick:()=>handleWordClick(w.id),sx:{userSelect:'none',cursor:w.used||!playing?'default':'grab',opacity:w.used?0.35:1,borderRadius:2,p:1.2,textAlign:'center',color:'#fff',fontWeight:700,fontSize:{xs:12,sm:14},boxShadow:'0 1px 4px rgba(0,0,0,0.12)',outline:selectedWordId===w.id?'3px solid rgba(0, 184, 148, 0.9)':'none',background:`linear-gradient(135deg, ${['#42a5f5','#ffca28','#ab47bc','#26a69a','#ef5350','#8d6e63','#66bb6a'][w.id%7]} 0%, rgba(255,255,255,0.15) 100%)`,transition:'transform .15s ease','&:active':{transform:'scale(0.98)'},minWidth:88},children:w.text},w.id))},idx))});})()}),/*#__PURE__*/_jsx(Box,{sx:{p:3,pt:1},children:/*#__PURE__*/_jsx(Box,{sx:{display:'grid',gridTemplateColumns:{xs:'repeat(2, 1fr)',sm:'repeat(3, 1fr)',md:'repeat(5, 1fr)'},gap:2},children:targets.map(t=>/*#__PURE__*/_jsxs(Box,{onDragOver:onDragOver,onDrop:e=>onDrop(e,t.id),onClick:()=>handleTargetClick(t.id),sx:{display:'flex',flexDirection:'column',alignItems:'center',gap:1},children:[/*#__PURE__*/_jsx(Box,{sx:{width:'100%',height:54,borderRadius:2,border:t.matched?'2px solid #4CAF50':t.wrongFlash?'2px solid #ef5350':selectedWordId!=null?'2px dashed #00b894':'2px dashed rgba(0,0,0,0.25)',background:t.matched?'linear-gradient(135deg, #4CAF50 0%, #66BB6A 100%)':'rgba(0,0,0,0.03)',display:'flex',alignItems:'center',justifyContent:'center',color:t.matched?'#fff':'inherit',fontWeight:700,textTransform:'uppercase',letterSpacing:0.4,transition:'all .15s ease'},children:t.matched?t.english:''}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:700,color:'#37474F',textAlign:'center'},children:t.turkish})]},t.id))})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'center',gap:2,mt:1.5},children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:()=>navigate('/kelime-eslestirme'),sx:{borderColor:'#00b894',color:'#00695c',fontWeight:600,borderRadius:2,px:3,mb:'15px','&:hover':{borderColor:'#00cec9',backgroundColor:'rgba(0, 184, 148, 0.04)'}},children:\"Seviye De\\u011Fi\\u015Ftir\"}),gameCompleted&&/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:reset,sx:{background:'linear-gradient(90deg, #00b894 0%, #00cec9 100%)',color:'#fff',fontWeight:600,borderRadius:2,px:3,'&:hover':{background:'linear-gradient(90deg, #00cec9 0%, #00b894 100%)'}},children:\"Tekrar Oyna\"})]}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',mt:0.5,mb:3},children:/*#__PURE__*/_jsx(Button,{\"aria-label\":\"Bitir ve Klasik Sorulara D\\xF6n\",onClick:()=>navigate('/questions'),sx:{textTransform:'none',fontWeight:700,borderRadius:3,px:3,py:1.1,background:'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',color:'#fff',boxShadow:'0 8px 20px rgba(0,0,0,0.08)','&:hover':{background:'linear-gradient(135deg, #00a085 0%, #00b8b3 100%)'}},variant:\"contained\",children:\"Bitir\"})})]})});}","map":{"version":3,"names":["React","useEffect","useState","Box","Paper","Typography","Button","Alert","Fade","ArrowBackIcon","RefreshIcon","CheckCircleIcon","ErrorIcon","useNavigate","useSearchParams","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","formatTime","secs","m","Math","floor","toString","padStart","s","shuffle","arr","a","i","length","j","random","WordMatchingGame","_sets$find","navigate","searchParams","level","get","toUpperCase","setId","sets","setSets","GAME_WORD_COUNT","pool","setPool","targets","setTargets","matched","setMatched","selectedWordId","setSelectedWordId","elapsed","setElapsed","playing","setPlaying","gameCompleted","setGameCompleted","wrongMsg","setWrongMsg","successMsg","setSuccessMsg","initGame","pairs","res","fetch","cache","data","json","items","Array","isArray","slice","map","w","idx","id","english","turkish","apiLevel","includes","raw","words","chosen","newPool","p","text","used","newTargets","wrongFlash","e","fallback","loadSets","list","title","t","setInterval","c","clearInterval","onDragStart","wordId","dataTransfer","setData","String","effectAllowed","onDragOver","preventDefault","dropEffect","tryMatch","targetId","_targets$find","_pool$find","find","prev","setTimeout","onDrop","getData","Number","isFinite","handleWordClick","word","handleTargetClick","reset","handleNewWords","others","filter","next","toLowerCase","sx","minHeight","background","display","flexDirection","alignItems","pb","xs","md","pt","px","children","elevation","borderRadius","minWidth","width","maxWidth","mt","backdropFilter","border","boxShadow","color","borderTopLeftRadius","borderTopRightRadius","justifyContent","position","startIcon","onClick","fontWeight","textAlign","flex","variant","mb","opacity","gap","in","severity","icon","fontSize","half","ceil","rows","row","gridAutoFlow","gridAutoColumns","overflowX","draggable","userSelect","cursor","sm","outline","transition","transform","gridTemplateColumns","height","textTransform","letterSpacing","borderColor","backgroundColor","py"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/WordMatchingGame.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Paper, Typography, Button, Alert, Fade } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n \n\ntype WordPair = {\n  id: number; // internal sequential id for matching\n  turkish: string;\n  english: string;\n};\n\ntype PoolWord = {\n  id: number; // pair id\n  text: string; // english\n  used: boolean;\n};\n\ntype Target = {\n  id: number; // pair id\n  turkish: string;\n  english: string; // reveal when matched\n  matched: boolean;\n  wrongFlash: boolean;\n};\n\n// Words will come from backend (MySQL via Prisma)\n\nconst formatTime = (secs: number) => {\n  const m = Math.floor(secs / 60)\n    .toString()\n    .padStart(2, '0');\n  const s = (secs % 60)\n    .toString()\n    .padStart(2, '0');\n  return `${m}:${s}`;\n};\n\nconst shuffle = <T,>(arr: T[]): T[] => {\n  const a = [...arr];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\n\nexport default function WordMatchingGame() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const level = (searchParams.get('level') || 'a1').toUpperCase();\n  const setId = searchParams.get('setId');\n  const [sets, setSets] = useState<Array<{ id: string; title: string }>>([]);\n\n  const GAME_WORD_COUNT = 15; // each game will have 15 words\n\n  const [pool, setPool] = useState<PoolWord[]>([]);\n  const [targets, setTargets] = useState<Target[]>([]);\n  const [matched, setMatched] = useState(0);\n  const [selectedWordId, setSelectedWordId] = useState<number | null>(null); // tap support\n  const [elapsed, setElapsed] = useState(0); // stopwatch seconds (hidden while playing)\n  const [playing, setPlaying] = useState(true);\n  const [gameCompleted, setGameCompleted] = useState(false);\n  const [wrongMsg, setWrongMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  // Prepare game by fetching: if setId is provided, use that set; otherwise choose 15 random from words API\n  const initGame = async () => {\n    try {\n      let pairs: WordPair[] = [];\n      if (setId) {\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets/${setId}`, { cache: 'no-store' });\n        const data = await res.json();\n        const items: Array<{ english: string; turkish: string }> = Array.isArray(data?.items) ? data.items : [];\n        pairs = items.slice(0, GAME_WORD_COUNT).map((w, idx) => ({ id: idx + 1, english: w.english, turkish: w.turkish }));\n      } else {\n        const apiLevel = ['A1','A2','B1','B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/words?level=${apiLevel}&limit=200`, { cache: 'no-store' });\n        const data = await res.json();\n        const raw: Array<{ id: string; english: string; turkish: string }> = Array.isArray(data?.words) ? data.words : [];\n        const chosen = shuffle(raw).slice(0, GAME_WORD_COUNT);\n        pairs = chosen.map((w, idx) => ({ id: idx + 1, english: w.english, turkish: w.turkish }));\n      }\n\n      const newPool: PoolWord[] = shuffle(\n        pairs.map((p) => ({ id: p.id, text: p.english, used: false }))\n      );\n      const newTargets: Target[] = pairs.map((p) => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false,\n      }));\n\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    } catch (e) {\n      // Fallback: basic static list if API is unreachable\n      const fallback: WordPair[] = [\n        { id: 1, turkish: 'merhaba', english: 'hello' },\n        { id: 2, turkish: 'dünya', english: 'world' },\n        { id: 3, turkish: 'aile', english: 'family' },\n        { id: 4, turkish: 'okul', english: 'school' },\n        { id: 5, turkish: 'kitap', english: 'book' },\n        { id: 6, turkish: 'su', english: 'water' },\n        { id: 7, turkish: 'ev', english: 'house' },\n        { id: 8, turkish: 'araba', english: 'car' },\n        { id: 9, turkish: 'yemek', english: 'food' },\n        { id: 10, turkish: 'zaman', english: 'time' },\n        { id: 11, turkish: 'para', english: 'money' },\n        { id: 12, turkish: 'çalışma', english: 'work' },\n        { id: 13, turkish: 'oyun', english: 'game' },\n        { id: 14, turkish: 'müzik', english: 'music' },\n      ];\n      const pairs = shuffle(fallback).slice(0, GAME_WORD_COUNT).map((p, i) => ({ ...p, id: i + 1 }));\n      const newPool: PoolWord[] = shuffle(\n        pairs.map((p) => ({ id: p.id, text: p.english, used: false }))\n      );\n      const newTargets: Target[] = pairs.map((p) => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false,\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    }\n  };\n\n  // Load game whenever level or setId changes\n  useEffect(() => {\n    initGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [level, setId]);\n\n  // Fetch available sets for arrows\n  useEffect(() => {\n    const loadSets = async () => {\n      try {\n        const apiLevel = ['A1','A2','B1','B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets?level=${apiLevel}`, { cache: 'no-store' });\n        const data = await res.json();\n        const list: Array<{ id: string; title: string }> = Array.isArray(data?.sets) ? data.sets.map((s: any) => ({ id: s.id, title: s.title })) : [];\n        setSets(list);\n      } catch {}\n    };\n    loadSets();\n  }, [level]);\n\n  // Stopwatch (hidden while playing)\n  useEffect(() => {\n    if (!playing || gameCompleted) return;\n    const t = setInterval(() => setElapsed((c) => c + 1), 1000);\n    return () => clearInterval(t);\n  }, [playing, gameCompleted]);\n\n  // Drag handlers\n  const onDragStart = (\n    e: React.DragEvent<HTMLDivElement>,\n    wordId: number\n  ) => {\n    if (!playing) return;\n    e.dataTransfer.setData('text/plain', String(wordId));\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    if (!playing) return;\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const tryMatch = (targetId: number, wordId: number) => {\n    if (!playing) return;\n    if (targets.find((t) => t.id === targetId)?.matched) return;\n    if (pool.find((p) => p.id === wordId)?.used) return;\n\n    if (targetId === wordId) {\n      // success\n      setTargets((prev) =>\n        prev.map((t) => (t.id === targetId ? { ...t, matched: true } : t))\n      );\n      setPool((prev) => prev.map((w) => (w.id === wordId ? { ...w, used: true } : w)));\n      setMatched((m) => m + 1);\n      setSelectedWordId(null);\n      setSuccessMsg(true);\n      setTimeout(() => setSuccessMsg(false), 800);\n    } else {\n      // wrong\n      setTargets((prev) =>\n        prev.map((t) =>\n          t.id === targetId ? { ...t, wrongFlash: true } : t\n        )\n      );\n      setWrongMsg(true);\n      setTimeout(() => {\n        setWrongMsg(false);\n        setTargets((prev) => prev.map((t) => ({ ...t, wrongFlash: false })));\n      }, 650);\n    }\n  };\n\n  const onDrop = (\n    e: React.DragEvent<HTMLDivElement>,\n    targetId: number\n  ) => {\n    if (!playing) return;\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const wordId = Number(data);\n    if (!Number.isFinite(wordId)) return;\n    tryMatch(targetId, wordId);\n  };\n\n  // Tap/click support\n  const handleWordClick = (wordId: number) => {\n    if (!playing) return;\n    const word = pool.find((w) => w.id === wordId);\n    if (!word || word.used) return;\n    setSelectedWordId((prev) => (prev === wordId ? null : wordId));\n  };\n\n  const handleTargetClick = (targetId: number) => {\n    if (!playing) return;\n    if (selectedWordId == null) return;\n    tryMatch(targetId, selectedWordId);\n  };\n\n  // Complete detection\n  useEffect(() => {\n    if (targets.length > 0 && matched === targets.length) {\n      setPlaying(false);\n      setGameCompleted(true);\n    }\n  }, [matched, targets.length]);\n\n  const reset = () => initGame();\n\n  const handleNewWords = () => {\n    if (setId && sets.length > 1) {\n      // pick a different random set\n      const others = sets.filter((s) => s.id !== setId);\n      const next = others[Math.floor(Math.random() * others.length)];\n      navigate(`/kelime-eslestirme-game?level=${level.toLowerCase()}&setId=${next.id}`);\n    } else {\n      // no set: re-fetch and sample a new random 15\n      reset();\n    }\n  };\n\n  return (\n    <Box sx={{ minHeight: '100vh', background: '#b2dfdb', display: 'flex', flexDirection: 'column', alignItems: 'center', pb: { xs: 12, md: 16 }, pt: 0, px: 2 }}>\n      <Paper elevation={6} sx={{ p: 0, borderRadius: 4, minWidth: 340, width: '100%', maxWidth: 1000, mt: { xs: 1, md: '15px' }, background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)', backdropFilter: 'blur(10px)', border: '1px solid rgba(255, 255, 255, 0.2)', boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)' }}>\n        {/* Header */}\n        <Box sx={{ background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)', color: '#fff', p: { xs: 3, md: 4 }, borderTopLeftRadius: 'inherit', borderTopRightRadius: 'inherit', display: 'flex', justifyContent: 'space-between', alignItems: 'center', position: 'relative' }}>\n          <Button startIcon={<ArrowBackIcon />} onClick={() => navigate('/kelime-eslestirme')} sx={{ color: '#fff', fontWeight: 600 }}>\n            Geri\n          </Button>\n          <Box sx={{ textAlign: 'center', flex: 1 }}>\n            <Typography variant=\"h5\" fontWeight={700} mb={1}>\n              Kelime Eşleştirme\n            </Typography>\n            <Typography variant=\"body2\" sx={{ opacity: 0.9 }}>\n              Seviye: {level}\n            </Typography>\n          </Box>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n            <Button startIcon={<RefreshIcon />} onClick={handleNewWords} sx={{ color: '#fff', fontWeight: 600 }}>\n              Yeni Kelimeler\n            </Button>\n          </Box>\n        </Box>\n        {/* Simple progress text (no filling bar, no live time) */}\n        <Box sx={{ p: 3, pt: 2 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Typography variant=\"h6\" color=\"#00695c\" fontWeight={600}>\n              İlerleme: {matched}/{targets.length || GAME_WORD_COUNT}\n            </Typography>\n            {setId && sets.length > 0 && (\n              <Typography variant=\"body2\" color=\"#00695c\" sx={{ opacity: 0.8 }}>\n                Set: {sets.find((s) => s.id === setId)?.title || ''}\n              </Typography>\n            )}\n          </Box>\n        </Box>\n\n        {/* Alerts */}\n        <Box sx={{ px: 3 }}>\n          {wrongMsg && (\n            <Fade in={wrongMsg}>\n              <Alert severity=\"error\" icon={<ErrorIcon />} sx={{ mb: 2, borderRadius: 2 }}>\n                Yanlış eşleşme! Tekrar deneyin.\n              </Alert>\n            </Fade>\n          )}\n          {successMsg && (\n            <Fade in={successMsg}>\n              <Alert severity=\"success\" icon={<CheckCircleIcon />} sx={{ mb: 2, borderRadius: 2 }}>\n                Doğru! Devam.\n              </Alert>\n            </Fade>\n          )}\n          {gameCompleted && (\n            <Alert severity=\"success\" icon={<CheckCircleIcon />} sx={{ mb: 3, borderRadius: 2, fontSize: 16 }}>\n              Tebrikler! Tüm eşleşmeler tamamlandı. Süreniz: {formatTime(elapsed)}\n            </Alert>\n          )}\n        </Box>\n\n        {/* Top pool (English words) fixed to two rows) */}\n        <Box sx={{ px: 3, pb: 1 }}>\n          {(() => {\n            const half = Math.ceil(pool.length / 2);\n            const rows = [pool.slice(0, half), pool.slice(half)];\n            return (\n              <>\n                {rows.map((row, idx) => (\n                  <Box key={idx} sx={{ display: 'grid', gridAutoFlow: 'column', gridAutoColumns: '1fr', gap: 1.5, overflowX: { xs: 'auto', md: 'visible' }, pb: 1 }}>\n                    {row.map((w) => (\n                      <Box\n                        key={w.id}\n                        draggable={!w.used && playing}\n                        onDragStart={(e) => onDragStart(e, w.id)}\n                        onClick={() => handleWordClick(w.id)}\n                        sx={{\n                          userSelect: 'none',\n                          cursor: w.used || !playing ? 'default' : 'grab',\n                          opacity: w.used ? 0.35 : 1,\n                          borderRadius: 2,\n                          p: 1.2,\n                          textAlign: 'center',\n                          color: '#fff',\n                          fontWeight: 700,\n                          fontSize: { xs: 12, sm: 14 },\n                          boxShadow: '0 1px 4px rgba(0,0,0,0.12)',\n                          outline: selectedWordId === w.id ? '3px solid rgba(0, 184, 148, 0.9)' : 'none',\n                          background: `linear-gradient(135deg, ${['#42a5f5','#ffca28','#ab47bc','#26a69a','#ef5350','#8d6e63','#66bb6a'][w.id % 7]} 0%, rgba(255,255,255,0.15) 100%)`,\n                          transition: 'transform .15s ease',\n                          '&:active': { transform: 'scale(0.98)' },\n                          minWidth: 88,\n                        }}\n                      >\n                        {w.text}\n                      </Box>\n                    ))}\n                  </Box>\n                ))}\n              </>\n            );\n          })()}\n        </Box>\n\n        {/* Bottom targets (Turkish labels) - fixed 3x5 grid */}\n        <Box sx={{ p: 3, pt: 1 }}>\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: 'repeat(2, 1fr)', sm: 'repeat(3, 1fr)', md: 'repeat(5, 1fr)' }, gap: 2 }}>\n            {targets.map((t) => (\n              <Box key={t.id} onDragOver={onDragOver} onDrop={(e) => onDrop(e, t.id)} onClick={() => handleTargetClick(t.id)} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 1 }}>\n                <Box sx={{\n                  width: '100%',\n                  height: 54,\n                  borderRadius: 2,\n                  border: t.matched\n                    ? '2px solid #4CAF50'\n                    : t.wrongFlash\n                    ? '2px solid #ef5350'\n                    : selectedWordId != null\n                    ? '2px dashed #00b894'\n                    : '2px dashed rgba(0,0,0,0.25)',\n                  background: t.matched\n                    ? 'linear-gradient(135deg, #4CAF50 0%, #66BB6A 100%)'\n                    : 'rgba(0,0,0,0.03)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: t.matched ? '#fff' : 'inherit',\n                  fontWeight: 700,\n                  textTransform: 'uppercase',\n                  letterSpacing: 0.4,\n                  transition: 'all .15s ease',\n                }}>\n                  {t.matched ? t.english : ''}\n                </Box>\n                <Typography variant=\"body2\" sx={{ fontWeight: 700, color: '#37474F', textAlign: 'center' }}>\n                  {t.turkish}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </Box>\n          {/* Actions */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mt: 1.5 }}>\n            <Button variant=\"outlined\" onClick={() => navigate('/kelime-eslestirme')} sx={{ borderColor: '#00b894', color: '#00695c', fontWeight: 600, borderRadius: 2, px: 3, mb: '15px', '&:hover': { borderColor: '#00cec9', backgroundColor: 'rgba(0, 184, 148, 0.04)' } }}>\n              Seviye Değiştir\n            </Button>\n            {gameCompleted && (\n              <Button variant=\"contained\" onClick={reset} sx={{ background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)', color: '#fff', fontWeight: 600, borderRadius: 2, px: 3, '&:hover': { background: 'linear-gradient(90deg, #00cec9 0%, #00b894 100%)' } }}>\n                Tekrar Oyna\n              </Button>\n            )}\n          </Box>\n          {/* Finish button below actions to go to classic questions */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 0.5, mb: 3 }}>\n            <Button\n              aria-label=\"Bitir ve Klasik Sorulara Dön\"\n              onClick={() => navigate('/questions')}\n              sx={{\n                textTransform: 'none',\n                fontWeight: 700,\n                borderRadius: 3,\n                px: 3,\n                py: 1.1,\n                background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n                color: '#fff',\n                boxShadow: '0 8px 20px rgba(0,0,0,0.08)',\n                '&:hover': { background: 'linear-gradient(135deg, #00a085 0%, #00b8b3 100%)' }\n              }}\n              variant=\"contained\"\n            >\n              Bitir\n            </Button>\n          </Box>\n      </Paper>\n      \n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}