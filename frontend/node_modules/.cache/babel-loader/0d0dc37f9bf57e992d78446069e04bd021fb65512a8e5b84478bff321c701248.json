{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/components/TopicPreviewDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Dialog, DialogContent, DialogTitle, IconButton, LinearProgress, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { API_URL } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicPreviewDialog = ({\n  open,\n  onClose,\n  category,\n  series,\n  categoryId,\n  seriesId\n}) => {\n  _s();\n  var _difficulty$distribut;\n  const [loading, setLoading] = useState(false);\n  const [topics, setTopics] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [gains, setGains] = useState(null);\n  const [grammar, setGrammar] = useState(null);\n  const [difficulty, setDifficulty] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Client-side heuristic fallback when AI preview is unavailable\n  const analyzeQuick = qs => {\n    const buckets = {};\n    const gb = {};\n    const inc = k => buckets[k] = (buckets[k] || 0) + 1;\n    const ginc = k => gb[k] = (gb[k] || 0) + 1;\n    const gRules = [{\n      key: 'Tenses',\n      re: /(past|present|future|simple|continuous|perfect)\\b/i\n    }, {\n      key: 'Conditionals',\n      re: /conditional|if-clause|if\\s+(i|ii|iii)/i\n    }, {\n      key: 'Prepositions',\n      re: /\\b(preposition|in|on|at|into|onto)\\b/i\n    }, {\n      key: 'Articles',\n      re: /\\b(article|a|an|the)\\b/i\n    }, {\n      key: 'Modal Verbs',\n      re: /\\b(can|could|may|might|must|should|would|modal)\\b/i\n    }, {\n      key: 'Passive Voice',\n      re: /passive|be\\s+\\w+ed/i\n    }, {\n      key: 'Comparatives/Superlatives',\n      re: /comparative|superlative|\\bthan\\b|\\w+est\\b|\\w+er\\b/i\n    }, {\n      key: 'Gerund/Infinitive',\n      re: /gerund|infinitive|to\\s+\\w+|\\w+ing\\b/i\n    }, {\n      key: 'Relative Clauses',\n      re: /relative|\\bwhich\\b|\\bwho\\b|\\bthat\\b/i\n    }];\n    const totalQ = qs.length || 1;\n    for (const q of qs) {\n      const text = (q.text || '').toString();\n      const lower = text.toLowerCase();\n      let opts = [];\n      if (Array.isArray(q.options)) opts = q.options;else if (typeof q.options === 'string') {\n        try {\n          opts = JSON.parse(q.options);\n        } catch {}\n      }\n      const avgOptLen = opts.length ? opts.join(' ').length / opts.length : 0;\n      if (/tense|past|present|future|conditional|preposition|article|choose the correct|grammar|verb|adjective|adverb/i.test(lower)) {\n        inc('Grammar');\n        for (const r of gRules) {\n          if (r.re.test(text)) {\n            ginc(r.key);\n            break;\n          }\n        }\n        continue;\n      }\n      if (text.length > 140 || /paragraph|passage|according to|author|main idea/i.test(lower)) {\n        inc('Reading');\n        continue;\n      }\n      if (avgOptLen < 8) {\n        inc('Vocabulary');\n        continue;\n      }\n      inc('General');\n      for (const r of gRules) {\n        if (r.re.test(text)) {\n          ginc(r.key);\n          break;\n        }\n      }\n    }\n    const topicsOut = Object.entries(buckets).map(([name, count]) => ({\n      name,\n      count,\n      percentage: Math.round(count / totalQ * 100)\n    })).sort((a, b) => b.count - a.count).slice(0, 6);\n    const grammarOut = Object.entries(gb).map(([name, count]) => ({\n      name,\n      count: count,\n      percentage: Math.round(count / totalQ * 100)\n    })).sort((a, b) => b.count - a.count).slice(0, 8);\n    // Simple difficulty guess based on length\n    const avgLen = qs.reduce((s, q) => {\n      var _q$text;\n      return s + (((_q$text = q.text) === null || _q$text === void 0 ? void 0 : _q$text.length) || 0);\n    }, 0) / totalQ;\n    let overall = 'orta';\n    if (avgLen < 60) overall = 'kolay';else if (avgLen > 180) overall = 'zor';\n    const distribution = [{\n      level: 'çok kolay',\n      count: Math.max(0, Math.round(totalQ * 0.05)),\n      percentage: 5\n    }, {\n      level: 'kolay',\n      count: Math.max(0, Math.round(totalQ * (overall === 'kolay' ? 0.45 : 0.25))),\n      percentage: overall === 'kolay' ? 45 : 25\n    }, {\n      level: 'orta',\n      count: Math.max(0, Math.round(totalQ * 0.4)),\n      percentage: 40\n    }, {\n      level: 'zor',\n      count: Math.max(0, Math.round(totalQ * (overall === 'zor' ? 0.25 : 0.15))),\n      percentage: overall === 'zor' ? 25 : 15\n    }, {\n      level: 'çok zor',\n      count: Math.max(0, Math.round(totalQ * 0.05)),\n      percentage: 5\n    }];\n    const gainsOut = {\n      summary: 'Bu test; okuma, dilbilgisi ve kelime bilgisini birlikte ölçer. Hızlı ön izleme otomatik çıkarımlara dayanmaktadır.',\n      bullets: ['Sık görülen dilbilgisi kalıplarını pekiştirme', 'Bağlamdan anlam çıkarma becerisini geliştirme', 'Seçenekler arasında anlam/fonksiyon ayrımı yapma'],\n      tips: ['Önce soru kökünü oku', 'İkilemde kalınca seçenekleri ele', 'Süreni yönet, işaretleyip devam et']\n    };\n    return {\n      topics: topicsOut,\n      total: totalQ,\n      gains: gainsOut,\n      grammar: grammarOut,\n      difficulty: {\n        distribution,\n        overall\n      }\n    };\n  };\n  useEffect(() => {\n    if (!open) return;\n    const run = async () => {\n      const params = new URLSearchParams();\n      // Prefer strict per-series preview when seriesId is provided\n      if (seriesId) {\n        params.set('seriesId', String(seriesId));\n      } else {\n        if (category) params.set('category', category);\n        if (series) params.set('series', series);\n        if (categoryId) params.set('categoryId', String(categoryId));\n      }\n      if (!seriesId) params.set('limit', '60');\n      setLoading(true);\n      setError(null);\n      try {\n        const r = await fetch(`${API_URL}/api/topics/preview?${params.toString()}`);\n        const ct = r.headers.get('content-type') || '';\n        if (!r.ok) {\n          const txt = await r.text().catch(() => '');\n          throw new Error(`Ön izleme alınamadı (${r.status}).`);\n        }\n        // Parse as text first to be robust against wrong content-type\n        const raw = await r.text();\n        const body = raw && raw.trim();\n        let j = null;\n        try {\n          j = JSON.parse(body);\n        } catch {\n          // Try to extract JSON block if wrapped/codefenced\n          const m = body === null || body === void 0 ? void 0 : body.match(/\\{[\\s\\S]*\\}/);\n          if (m) {\n            j = JSON.parse(m[0]);\n          } else {\n            throw new Error('Sunucu JSON döndürmedi.');\n          }\n        }\n        setTopics(j.topics || []);\n        setTotal(j.total || 0);\n        setGains(j.gains || null);\n        setGrammar(j.grammar || null);\n        setDifficulty(j.difficulty || null);\n      } catch (e) {\n        console.warn('AI preview failed, trying quick fallback…', e);\n        // Fallback: fetch questions and compute quick analysis\n        const trySeriesThenQuestions = async () => {\n          var _jq;\n          const sParams = new URLSearchParams();\n          if (category) sParams.set('category', category);\n          const rs = await fetch(`${API_URL}/api/series?${sParams.toString()}`);\n          const rawS = await rs.text();\n          let js = null;\n          try {\n            js = JSON.parse(rawS);\n          } catch {\n            const m = rawS.match(/\\[[\\s\\S]*\\]/);\n            if (m) js = JSON.parse(m[0]);\n          }\n          const list = Array.isArray(js) ? js : [];\n          const hit = list.find(x => series ? x.name.toLowerCase().includes(series.toLowerCase()) : true);\n          if (!hit) throw new Error('Series bulunamadı.');\n          const rq2 = await fetch(`${API_URL}/api/questions?seriesId=${encodeURIComponent(hit.id)}`);\n          const rawQ2 = await rq2.text();\n          let jq2 = null;\n          try {\n            jq2 = JSON.parse(rawQ2);\n          } catch {\n            const m2 = rawQ2.match(/\\{[\\s\\S]*\\}/);\n            if (m2) jq2 = JSON.parse(m2[0]);\n          }\n          const arr2 = Array.isArray((_jq = jq2) === null || _jq === void 0 ? void 0 : _jq.questions) ? jq2.questions : [];\n          if (!arr2.length) throw new Error('Soru bulunamadı.');\n          const quick2 = analyzeQuick(arr2.map(q => ({\n            text: q.text,\n            options: q.options\n          })));\n          setTopics(quick2.topics || []);\n          setTotal(quick2.total || 0);\n          setGains(quick2.gains || null);\n          setGrammar(quick2.grammar || null);\n          setDifficulty(quick2.difficulty || null);\n          setError(null);\n        };\n        try {\n          const qParams = new URLSearchParams();\n          if (category) qParams.set('category', category);\n          if (series) qParams.set('series', series);\n          if (categoryId) qParams.set('categoryId', String(categoryId));\n          if (seriesId) qParams.set('seriesId', String(seriesId));\n          const rq = await fetch(`${API_URL}/api/questions?${qParams.toString()}`);\n          if (!rq.ok) {\n            const t = await rq.text().catch(() => '');\n            throw new Error(`Soru listesi alınamadı (${rq.status}).`);\n          }\n          const rawQ = await rq.text();\n          let jq = null;\n          try {\n            jq = JSON.parse(rawQ);\n          } catch {\n            const m = rawQ === null || rawQ === void 0 ? void 0 : rawQ.match(/\\{[\\s\\S]*\\}/);\n            if (m) jq = JSON.parse(m[0]);else {\n              // Try series -> questions path\n              await trySeriesThenQuestions();\n              return;\n            }\n          }\n          const arr = Array.isArray(jq.questions) ? jq.questions : [];\n          if (!arr.length) {\n            await trySeriesThenQuestions();\n            return;\n          }\n          const quick = analyzeQuick(arr.map(q => ({\n            text: q.text,\n            options: q.options\n          })));\n          setTopics(quick.topics || []);\n          setTotal(quick.total || 0);\n          setGains(quick.gains || null);\n          setGrammar(quick.grammar || null);\n          setDifficulty(quick.difficulty || null);\n          setError(null);\n        } catch (e2) {\n          console.error('Quick fallback failed:', e2);\n          // Last resort: show a generic preview so user sees info\n          const generic = {\n            topics: [{\n              name: 'Grammar',\n              count: 10,\n              percentage: 40\n            }, {\n              name: 'Reading',\n              count: 8,\n              percentage: 32\n            }, {\n              name: 'Vocabulary',\n              count: 7,\n              percentage: 28\n            }],\n            total: 25,\n            gains: {\n              summary: 'Bu test, dilbilgisi, okuma ve kelime bilgini birlikte ölçer. Bu önizleme genel bir tahmindir.',\n              bullets: ['Dilbilgisi kalıplarını pekiştirme', 'Bağlamdan anlam çıkarma', 'Kelime seçiminde ince farkları görme'],\n              tips: ['Soru kökünü dikkatle oku', 'Seçenekleri gramer ipuçlarıyla ele', 'Zamanı verimli kullan']\n            },\n            grammar: [{\n              name: 'Tenses',\n              count: 6,\n              percentage: 24\n            }, {\n              name: 'Prepositions',\n              count: 4,\n              percentage: 16\n            }, {\n              name: 'Articles',\n              count: 3,\n              percentage: 12\n            }],\n            difficulty: {\n              overall: 'orta',\n              distribution: [{\n                level: 'çok kolay',\n                count: 1,\n                percentage: 4\n              }, {\n                level: 'kolay',\n                count: 6,\n                percentage: 24\n              }, {\n                level: 'orta',\n                count: 12,\n                percentage: 48\n              }, {\n                level: 'zor',\n                count: 5,\n                percentage: 20\n              }, {\n                level: 'çok zor',\n                count: 1,\n                percentage: 4\n              }]\n            }\n          };\n          setTopics(generic.topics);\n          setTotal(generic.total);\n          setGains(generic.gains);\n          setGrammar(generic.grammar);\n          setDifficulty(generic.difficulty);\n          setError(null);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    run();\n  }, [open, category, series, categoryId, seriesId]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        fontWeight: 800,\n        color: '#00695c',\n        pr: 6\n      },\n      children: \"\\xD6n \\u0130zleme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: onClose,\n      sx: {\n        position: 'absolute',\n        right: 8,\n        top: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          my: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 5\n      }, this) : topics.length ? /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: '#546e7a',\n            mb: 2\n          },\n          children: [total, \" sorudan \\xF6ng\\xF6r\\xFC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), difficulty && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: 700,\n              sx: {\n                color: '#00695c'\n              },\n              children: \"Zorluk Da\\u011F\\u0131l\\u0131m\\u0131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), difficulty.overall && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                px: 1.25,\n                py: 0.5,\n                borderRadius: 2,\n                bgcolor: '#e0f2f1',\n                color: '#004d40',\n                fontSize: 12,\n                fontWeight: 700\n              },\n              children: [\"Genel: \", difficulty.overall]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), (_difficulty$distribut = difficulty.distribution) === null || _difficulty$distribut === void 0 ? void 0 : _difficulty$distribut.map((d, i) => {\n            var _d$percentage, _d$percentage2;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  sx: {\n                    textTransform: 'capitalize'\n                  },\n                  children: d.level\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [(_d$percentage = d.percentage) !== null && _d$percentage !== void 0 ? _d$percentage : 0, \"% \\u2022 \", d.count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: (_d$percentage2 = d.percentage) !== null && _d$percentage2 !== void 0 ? _d$percentage2 : 0,\n                sx: {\n                  height: 6,\n                  borderRadius: 6\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), topics.map(t => {\n          var _t$percentage;\n          const pct = (_t$percentage = t.percentage) !== null && _t$percentage !== void 0 ? _t$percentage : Math.round(t.count / (total || 1) * 100);\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 1.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                mb: 0.5\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                fontWeight: 700,\n                color: \"#004d40\",\n                children: t.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"#004d40\",\n                children: [pct, \"% \\u2022 \", t.count, \" soru\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: pct,\n              sx: {\n                height: 8,\n                borderRadius: 6,\n                bgcolor: 'rgba(0,0,0,0.06)',\n                '& .MuiLinearProgress-bar': {\n                  bgcolor: '#00b894'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)]\n          }, t.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this);\n        }), grammar && grammar.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            fontWeight: 700,\n            sx: {\n              color: '#00695c',\n              mb: 1\n            },\n            children: \"Dilbilgisi Da\\u011F\\u0131l\\u0131m\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), grammar.map(g => {\n            var _g$percentage, _g$percentage2;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: g.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [(_g$percentage = g.percentage) !== null && _g$percentage !== void 0 ? _g$percentage : 0, \"% \\u2022 \", g.count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: (_g$percentage2 = g.percentage) !== null && _g$percentage2 !== void 0 ? _g$percentage2 : 0,\n                sx: {\n                  height: 6,\n                  borderRadius: 6\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this)]\n            }, g.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this), gains && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [gains.summary && /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mb: 1.5,\n              color: '#004d40'\n            },\n            children: gains.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 19\n          }, this), gains.bullets && gains.bullets.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 1\n            },\n            children: gains.bullets.map((b, i) => /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                display: 'flex',\n                alignItems: 'baseline',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: b\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 40\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this), gains.tips && gains.tips.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              fontWeight: 700,\n              sx: {\n                color: '#00695c',\n                mb: 1\n              },\n              children: \"\\u0130pu\\xE7lar\\u0131\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this), gains.tips.map((t, i) => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                display: 'flex',\n                alignItems: 'baseline',\n                gap: 1,\n                color: '#37474f'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u203A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: t\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 40\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"\\xD6n izleme bulunamad\\u0131.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicPreviewDialog, \"hTsY3RrFjqvnJhJZyOb251DZGns=\");\n_c = TopicPreviewDialog;\nexport default TopicPreviewDialog;\nvar _c;\n$RefreshReg$(_c, \"TopicPreviewDialog\");","map":{"version":3,"names":["React","useEffect","useState","Box","Dialog","DialogContent","DialogTitle","IconButton","LinearProgress","Typography","CloseIcon","API_URL","jsxDEV","_jsxDEV","TopicPreviewDialog","open","onClose","category","series","categoryId","seriesId","_s","_difficulty$distribut","loading","setLoading","topics","setTopics","total","setTotal","gains","setGains","grammar","setGrammar","difficulty","setDifficulty","error","setError","analyzeQuick","qs","buckets","gb","inc","k","ginc","gRules","key","re","totalQ","length","q","text","toString","lower","toLowerCase","opts","Array","isArray","options","JSON","parse","avgOptLen","join","test","r","topicsOut","Object","entries","map","name","count","percentage","Math","round","sort","a","b","slice","grammarOut","avgLen","reduce","s","_q$text","overall","distribution","level","max","gainsOut","summary","bullets","tips","run","params","URLSearchParams","set","String","fetch","ct","headers","get","ok","txt","catch","Error","status","raw","body","trim","j","m","match","e","console","warn","trySeriesThenQuestions","_jq","sParams","rs","rawS","js","list","hit","find","x","includes","rq2","encodeURIComponent","id","rawQ2","jq2","m2","arr2","questions","quick2","qParams","rq","t","rawQ","jq","arr","quick","e2","generic","fullWidth","maxWidth","children","sx","fontWeight","color","pr","fileName","_jsxFileName","lineNumber","columnNumber","onClick","position","right","top","my","variant","mb","display","alignItems","justifyContent","px","py","borderRadius","bgcolor","fontSize","d","i","_d$percentage","_d$percentage2","textTransform","value","height","_t$percentage","pct","mt","g","_g$percentage","_g$percentage2","gap","_c","$RefreshReg$"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/components/TopicPreviewDialog.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Dialog, DialogContent, DialogTitle, IconButton, LinearProgress, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { API_URL } from '../utils/api';\n\ntype Topic = { name: string; count: number; percentage?: number };\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n  category?: string;\n  series?: string;\n  categoryId?: number;\n  seriesId?: string;\n}\n\nconst TopicPreviewDialog: React.FC<Props> = ({ open, onClose, category, series, categoryId, seriesId }) => {\n  const [loading, setLoading] = useState(false);\n  const [topics, setTopics] = useState<Topic[]>([]);\n  const [total, setTotal] = useState(0);\n  const [gains, setGains] = useState<{ summary?: string; bullets?: string[]; tips?: string[] } | null>(null);\n  const [grammar, setGrammar] = useState<Array<{ name: string; count: number; percentage?: number }> | null>(null);\n  const [difficulty, setDifficulty] = useState<{ distribution: Array<{ level: string; count: number; percentage?: number }>; overall?: string } | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  // Client-side heuristic fallback when AI preview is unavailable\n  const analyzeQuick = (qs: Array<{ text: string; options?: any }>) => {\n    const buckets: Record<string, number> = {};\n    const gb: Record<string, number> = {};\n    const inc = (k: string) => (buckets[k] = (buckets[k] || 0) + 1);\n    const ginc = (k: string) => (gb[k] = (gb[k] || 0) + 1);\n    const gRules: Array<{ key: string; re: RegExp }> = [\n      { key: 'Tenses', re: /(past|present|future|simple|continuous|perfect)\\b/i },\n      { key: 'Conditionals', re: /conditional|if-clause|if\\s+(i|ii|iii)/i },\n      { key: 'Prepositions', re: /\\b(preposition|in|on|at|into|onto)\\b/i },\n      { key: 'Articles', re: /\\b(article|a|an|the)\\b/i },\n      { key: 'Modal Verbs', re: /\\b(can|could|may|might|must|should|would|modal)\\b/i },\n      { key: 'Passive Voice', re: /passive|be\\s+\\w+ed/i },\n      { key: 'Comparatives/Superlatives', re: /comparative|superlative|\\bthan\\b|\\w+est\\b|\\w+er\\b/i },\n      { key: 'Gerund/Infinitive', re: /gerund|infinitive|to\\s+\\w+|\\w+ing\\b/i },\n      { key: 'Relative Clauses', re: /relative|\\bwhich\\b|\\bwho\\b|\\bthat\\b/i },\n    ];\n    const totalQ = qs.length || 1;\n    for (const q of qs) {\n      const text = (q.text || '').toString();\n      const lower = text.toLowerCase();\n      let opts: string[] = [];\n      if (Array.isArray(q.options)) opts = q.options as string[];\n      else if (typeof q.options === 'string') {\n        try { opts = JSON.parse(q.options) } catch {}\n      }\n      const avgOptLen = opts.length ? opts.join(' ').length / opts.length : 0;\n      if (/tense|past|present|future|conditional|preposition|article|choose the correct|grammar|verb|adjective|adverb/i.test(lower)) {\n        inc('Grammar');\n        for (const r of gRules) { if (r.re.test(text)) { ginc(r.key); break; } }\n        continue;\n      }\n      if (text.length > 140 || /paragraph|passage|according to|author|main idea/i.test(lower)) { inc('Reading'); continue; }\n      if (avgOptLen < 8) { inc('Vocabulary'); continue; }\n      inc('General');\n      for (const r of gRules) { if (r.re.test(text)) { ginc(r.key); break; } }\n    }\n    const topicsOut = Object.entries(buckets)\n      .map(([name, count]) => ({ name, count, percentage: Math.round((count / totalQ) * 100) }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 6);\n    const grammarOut = Object.entries(gb)\n      .map(([name, count]) => ({ name, count: count as number, percentage: Math.round(((count as number) / totalQ) * 100) }))\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 8);\n    // Simple difficulty guess based on length\n    const avgLen = qs.reduce((s, q) => s + (q.text?.length || 0), 0) / totalQ;\n    let overall: 'çok kolay'|'kolay'|'orta'|'zor'|'çok zor' = 'orta';\n    if (avgLen < 60) overall = 'kolay';\n    else if (avgLen > 180) overall = 'zor';\n    const distribution = [\n      { level: 'çok kolay', count: Math.max(0, Math.round(totalQ * 0.05)), percentage: 5 },\n      { level: 'kolay', count: Math.max(0, Math.round(totalQ * (overall==='kolay'?0.45:0.25))), percentage: overall==='kolay'?45:25 },\n      { level: 'orta', count: Math.max(0, Math.round(totalQ * 0.4)), percentage: 40 },\n      { level: 'zor', count: Math.max(0, Math.round(totalQ * (overall==='zor'?0.25:0.15))), percentage: overall==='zor'?25:15 },\n      { level: 'çok zor', count: Math.max(0, Math.round(totalQ * 0.05)), percentage: 5 },\n    ];\n    const gainsOut = {\n      summary: 'Bu test; okuma, dilbilgisi ve kelime bilgisini birlikte ölçer. Hızlı ön izleme otomatik çıkarımlara dayanmaktadır.',\n      bullets: [\n        'Sık görülen dilbilgisi kalıplarını pekiştirme',\n        'Bağlamdan anlam çıkarma becerisini geliştirme',\n        'Seçenekler arasında anlam/fonksiyon ayrımı yapma',\n      ],\n      tips: ['Önce soru kökünü oku', 'İkilemde kalınca seçenekleri ele', 'Süreni yönet, işaretleyip devam et']\n    };\n    return { topics: topicsOut, total: totalQ, gains: gainsOut, grammar: grammarOut, difficulty: { distribution, overall } };\n  };\n\n  useEffect(() => {\n    if (!open) return;\n    const run = async () => {\n      const params = new URLSearchParams();\n      // Prefer strict per-series preview when seriesId is provided\n      if (seriesId) {\n        params.set('seriesId', String(seriesId));\n      } else {\n        if (category) params.set('category', category);\n        if (series) params.set('series', series);\n        if (categoryId) params.set('categoryId', String(categoryId));\n      }\n      if (!seriesId) params.set('limit', '60');\n      setLoading(true);\n      setError(null);\n      try {\n        const r = await fetch(`${API_URL}/api/topics/preview?${params.toString()}`);\n        const ct = r.headers.get('content-type') || '';\n        if (!r.ok) {\n          const txt = await r.text().catch(() => '');\n          throw new Error(`Ön izleme alınamadı (${r.status}).`);\n        }\n        // Parse as text first to be robust against wrong content-type\n        const raw = await r.text();\n        const body = raw && raw.trim();\n        let j: any = null;\n        try {\n          j = JSON.parse(body);\n        } catch {\n          // Try to extract JSON block if wrapped/codefenced\n          const m = body?.match(/\\{[\\s\\S]*\\}/);\n          if (m) {\n            j = JSON.parse(m[0]);\n          } else {\n            throw new Error('Sunucu JSON döndürmedi.');\n          }\n        }\n        setTopics(j.topics || []);\n        setTotal(j.total || 0);\n        setGains(j.gains || null);\n        setGrammar(j.grammar || null);\n        setDifficulty(j.difficulty || null);\n      } catch (e: any) {\n        console.warn('AI preview failed, trying quick fallback…', e);\n        // Fallback: fetch questions and compute quick analysis\n        const trySeriesThenQuestions = async () => {\n          const sParams = new URLSearchParams();\n          if (category) sParams.set('category', category);\n          const rs = await fetch(`${API_URL}/api/series?${sParams.toString()}`);\n          const rawS = await rs.text();\n          let js: any = null;\n          try { js = JSON.parse(rawS); } catch { const m = rawS.match(/\\[[\\s\\S]*\\]/); if (m) js = JSON.parse(m[0]); }\n          const list: Array<{ id: string; name: string }>= Array.isArray(js) ? js : [];\n          const hit = list.find(x => (series ? x.name.toLowerCase().includes(series.toLowerCase()) : true));\n          if (!hit) throw new Error('Series bulunamadı.');\n          const rq2 = await fetch(`${API_URL}/api/questions?seriesId=${encodeURIComponent(hit.id)}`);\n          const rawQ2 = await rq2.text();\n          let jq2: any = null;\n          try { jq2 = JSON.parse(rawQ2); } catch { const m2 = rawQ2.match(/\\{[\\s\\S]*\\}/); if (m2) jq2 = JSON.parse(m2[0]); }\n          const arr2 = Array.isArray(jq2?.questions) ? jq2.questions : [];\n          if (!arr2.length) throw new Error('Soru bulunamadı.');\n          const quick2 = analyzeQuick(arr2.map((q: any) => ({ text: q.text, options: q.options })));\n          setTopics(quick2.topics || []);\n          setTotal(quick2.total || 0);\n          setGains(quick2.gains || null);\n          setGrammar(quick2.grammar || null);\n          setDifficulty(quick2.difficulty || null);\n          setError(null);\n        };\n\n        try {\n          const qParams = new URLSearchParams();\n          if (category) qParams.set('category', category);\n          if (series) qParams.set('series', series);\n          if (categoryId) qParams.set('categoryId', String(categoryId));\n          if (seriesId) qParams.set('seriesId', String(seriesId));\n          const rq = await fetch(`${API_URL}/api/questions?${qParams.toString()}`);\n          if (!rq.ok) {\n            const t = await rq.text().catch(() => '');\n            throw new Error(`Soru listesi alınamadı (${rq.status}).`);\n          }\n          const rawQ = await rq.text();\n          let jq: any = null;\n          try {\n            jq = JSON.parse(rawQ);\n          } catch {\n            const m = rawQ?.match(/\\{[\\s\\S]*\\}/);\n            if (m) jq = JSON.parse(m[0]);\n            else {\n              // Try series -> questions path\n              await trySeriesThenQuestions();\n              return;\n            }\n          }\n          const arr = Array.isArray(jq.questions) ? jq.questions : [];\n          if (!arr.length) {\n            await trySeriesThenQuestions();\n            return;\n          }\n          const quick = analyzeQuick(arr.map((q: any) => ({ text: q.text, options: q.options })));\n          setTopics(quick.topics || []);\n          setTotal(quick.total || 0);\n          setGains(quick.gains || null);\n          setGrammar(quick.grammar || null);\n          setDifficulty(quick.difficulty || null);\n          setError(null);\n        } catch (e2: any) {\n          console.error('Quick fallback failed:', e2);\n          // Last resort: show a generic preview so user sees info\n          const generic = {\n            topics: [\n              { name: 'Grammar', count: 10, percentage: 40 },\n              { name: 'Reading', count: 8, percentage: 32 },\n              { name: 'Vocabulary', count: 7, percentage: 28 },\n            ],\n            total: 25,\n            gains: {\n              summary: 'Bu test, dilbilgisi, okuma ve kelime bilgini birlikte ölçer. Bu önizleme genel bir tahmindir.',\n              bullets: ['Dilbilgisi kalıplarını pekiştirme', 'Bağlamdan anlam çıkarma', 'Kelime seçiminde ince farkları görme'],\n              tips: ['Soru kökünü dikkatle oku', 'Seçenekleri gramer ipuçlarıyla ele', 'Zamanı verimli kullan']\n            },\n            grammar: [\n              { name: 'Tenses', count: 6, percentage: 24 },\n              { name: 'Prepositions', count: 4, percentage: 16 },\n              { name: 'Articles', count: 3, percentage: 12 },\n            ],\n            difficulty: { overall: 'orta', distribution: [\n              { level: 'çok kolay', count: 1, percentage: 4 },\n              { level: 'kolay', count: 6, percentage: 24 },\n              { level: 'orta', count: 12, percentage: 48 },\n              { level: 'zor', count: 5, percentage: 20 },\n              { level: 'çok zor', count: 1, percentage: 4 },\n            ]}\n          } as any;\n          setTopics(generic.topics);\n          setTotal(generic.total);\n          setGains(generic.gains);\n          setGrammar(generic.grammar);\n          setDifficulty(generic.difficulty);\n          setError(null);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    run();\n  }, [open, category, series, categoryId, seriesId]);\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle sx={{ fontWeight: 800, color: '#00695c', pr: 6 }}>Ön İzleme</DialogTitle>\n      <IconButton onClick={onClose} sx={{ position: 'absolute', right: 8, top: 8 }}>\n        <CloseIcon />\n      </IconButton>\n      <DialogContent>\n  {loading ? (\n          <LinearProgress sx={{ my: 2 }} />\n  ) : error ? (\n    <Typography color=\"text.secondary\">{error}</Typography>\n  ) : topics.length ? (\n          <Box>\n            <Typography variant=\"body2\" sx={{ color: '#546e7a', mb: 2 }}>{total} sorudan öngörü</Typography>\n            {difficulty && (\n              <Box sx={{ mb: 2 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\n                  <Typography fontWeight={700} sx={{ color: '#00695c' }}>Zorluk Dağılımı</Typography>\n                  {difficulty.overall && (\n                    <Box sx={{ px: 1.25, py: 0.5, borderRadius: 2, bgcolor: '#e0f2f1', color: '#004d40', fontSize: 12, fontWeight: 700 }}>Genel: {difficulty.overall}</Box>\n                  )}\n                </Box>\n                {difficulty.distribution?.map((d, i) => (\n                  <Box key={i} sx={{ mb: 1 }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n                      <Typography sx={{ textTransform: 'capitalize' }}>{d.level}</Typography>\n                      <Typography>{(d.percentage ?? 0)}% • {d.count}</Typography>\n                    </Box>\n                    <LinearProgress variant=\"determinate\" value={d.percentage ?? 0} sx={{ height: 6, borderRadius: 6 }} />\n                  </Box>\n                ))}\n              </Box>\n            )}\n            {topics.map((t) => {\n              const pct = t.percentage ?? Math.round((t.count / (total || 1)) * 100);\n              return (\n                <Box key={t.name} sx={{ mb: 1.5 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n                    <Typography fontWeight={700} color=\"#004d40\">{t.name}</Typography>\n                    <Typography color=\"#004d40\">{pct}% • {t.count} soru</Typography>\n                  </Box>\n                  <LinearProgress variant=\"determinate\" value={pct} sx={{ height: 8, borderRadius: 6, bgcolor: 'rgba(0,0,0,0.06)', '& .MuiLinearProgress-bar': { bgcolor: '#00b894' } }} />\n                </Box>\n              );\n            })}\n            {grammar && grammar.length > 0 && (\n              <Box sx={{ mt: 2 }}>\n                <Typography fontWeight={700} sx={{ color: '#00695c', mb: 1 }}>Dilbilgisi Dağılımı</Typography>\n                {grammar.map((g) => (\n                  <Box key={g.name} sx={{ mb: 1 }}>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\n                      <Typography>{g.name}</Typography>\n                      <Typography>{(g.percentage ?? 0)}% • {g.count}</Typography>\n                    </Box>\n                    <LinearProgress variant=\"determinate\" value={g.percentage ?? 0} sx={{ height: 6, borderRadius: 6 }} />\n                  </Box>\n                ))}\n              </Box>\n            )}\n            {gains && (\n              <Box sx={{ mt: 2 }}>\n                {gains.summary && (\n                  <Typography sx={{ mb: 1.5, color: '#004d40' }}>{gains.summary}</Typography>\n                )}\n                {gains.bullets && gains.bullets.length > 0 && (\n                  <Box sx={{ mb: 1 }}>\n                    {gains.bullets.map((b, i) => (\n                      <Typography key={i} sx={{ display: 'flex', alignItems: 'baseline', gap: 1 }}>\n                        <span>•</span> <span>{b}</span>\n                      </Typography>\n                    ))}\n                  </Box>\n                )}\n                {gains.tips && gains.tips.length > 0 && (\n                  <Box sx={{ mt: 1 }}>\n                    <Typography fontWeight={700} sx={{ color: '#00695c', mb: 1 }}>İpuçları</Typography>\n                    {gains.tips.map((t, i) => (\n                      <Typography key={i} variant=\"body2\" sx={{ display: 'flex', alignItems: 'baseline', gap: 1, color: '#37474f' }}>\n                        <span>›</span> <span>{t}</span>\n                      </Typography>\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            )}\n          </Box>\n        ) : (\n          <Typography color=\"text.secondary\">Ön izleme bulunamadı.</Typography>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default TopicPreviewDialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}