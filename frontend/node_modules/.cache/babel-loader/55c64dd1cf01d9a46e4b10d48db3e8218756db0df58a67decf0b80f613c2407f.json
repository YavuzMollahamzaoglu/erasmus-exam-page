{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/components/TopicPreview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Chip, LinearProgress, Typography, Tooltip } from '@mui/material';\nimport { API_URL } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#00b894', '#0984e3', '#fdcb6e', '#e17055', '#6c5ce7', '#00cec9'];\nconst TopicPreview = ({\n  category,\n  series,\n  categoryId,\n  seriesId\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [topics, setTopics] = useState([]);\n  const [grammar, setGrammar] = useState(null);\n  const [total, setTotal] = useState(0);\n  const [error, setError] = useState(null);\n  const [difficultyOverall, setDifficultyOverall] = useState(null);\n  useEffect(() => {\n    const params = new URLSearchParams();\n    // If seriesId is known, use only seriesId to prevent general mixing\n    if (seriesId) {\n      params.set('seriesId', String(seriesId));\n    } else {\n      if (category) params.set('category', category);\n      if (series) params.set('series', series);\n      if (categoryId) params.set('categoryId', String(categoryId));\n    }\n    if (!seriesId) params.set('limit', '60');\n    setLoading(true);\n    fetch(`${API_URL}/api/topics/preview?${params.toString()}`).then(async r => {\n      // Be tolerant to wrong content-type: parse as text first\n      const text = await r.text();\n      if (!r.ok) throw new Error(`status ${r.status}`);\n      let json = null;\n      try {\n        json = JSON.parse(text);\n      } catch {\n        const m = text.match(/\\{[\\s\\S]*\\}/);\n        if (m) json = JSON.parse(m[0]);else throw new Error('JSON parse error');\n      }\n      return json;\n    }).then(json => {\n      var _json$difficulty;\n      setTopics(json.topics || []);\n      setGrammar(json.grammar || null);\n      setTotal(json.total || 0);\n      setDifficultyOverall(((_json$difficulty = json.difficulty) === null || _json$difficulty === void 0 ? void 0 : _json$difficulty.overall) || null);\n      setLoading(false);\n    }).catch(e => {\n      setError('öngörü alınamadı');\n      setLoading(false);\n    });\n  }, [category, series, categoryId, seriesId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          height: 6,\n          borderRadius: 3,\n          bgcolor: 'rgba(0,0,0,0.06)',\n          '& .MuiLinearProgress-bar': {\n            bgcolor: '#00b894'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  const useItems = (grammar && grammar.length ? grammar : topics) || [];\n  if (error || !useItems.length) return null;\n  const trMap = {\n    'vocabulary': 'Kelime Bilgisi',\n    'pronouns': 'Zamirler',\n    'prepositions': 'Edatlar',\n    'question forms': 'Soru Cümleleri',\n    'tenses': 'Zamanlar',\n    'conditionals': 'Koşul Cümleleri',\n    'articles': 'Tanımlıklar',\n    'modal verbs': 'Yardımcı Fiiller',\n    'passive voice': 'Edilgen Çatı',\n    'comparatives/superlatives': 'Karşılaştırma/Üstünlük',\n    'gerund/infinitive': 'Fiilimsi/Yalın Fiil',\n    'relative clauses': 'İlgi Cümleleri',\n    'phrasal verbs': 'Deyimsel Fiiller',\n    'reading': 'Okuma',\n    'grammar': 'Dilbilgisi',\n    'general': 'Genel'\n  };\n  const labelTR = name => {\n    const key = name.toLowerCase();\n    const tr = trMap[key];\n    return tr ? `${name} (${tr})` : name;\n  };\n  const diffChip = (() => {\n    if (!difficultyOverall) return null;\n    const diff = (difficultyOverall || '').toString().toLowerCase();\n    let bg = '#90caf9',\n      fg = '#083a6b',\n      bd = '#64b5f6'; // orta -> blue\n    if (diff.includes('kolay')) {\n      bg = '#fff3cd';\n      fg = '#5d4037';\n      bd = '#ffe082';\n    }\n    if (diff.includes('zor')) {\n      bg = '#ffcdd2';\n      fg = '#8a1c1c';\n      bd = '#ef9a9a';\n    }\n    return /*#__PURE__*/_jsxDEV(Chip, {\n      size: \"small\",\n      \"aria-label\": `Zorluk: ${diff}`,\n      label: `Zorluk: ${diff}`,\n      sx: {\n        bgcolor: bg,\n        color: fg,\n        border: `1px solid ${bd}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  })();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 1.25\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 1,\n        flexWrap: 'wrap',\n        mb: 1,\n        alignItems: 'center'\n      },\n      children: [diffChip, useItems.slice(0, 4).map((t, i) => {\n        var _t$percentage;\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          size: \"small\",\n          label: `${labelTR(t.name)} • ${(_t$percentage = t.percentage) !== null && _t$percentage !== void 0 ? _t$percentage : Math.round(t.count / (total || 1) * 100)}% • ${t.count} soru`,\n          sx: {\n            bgcolor: `${COLORS[i % COLORS.length]}22`,\n            color: '#004d40',\n            border: `1px solid ${COLORS[i % COLORS.length]}55`\n          }\n        }, t.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), (() => {\n      // Build exact percentage segments by count/total and ensure full 100% fill\n      const items = useItems.filter(it => {\n        var _it$count;\n        return ((_it$count = it.count) !== null && _it$count !== void 0 ? _it$count : 0) > 0;\n      });\n      const segs = items.map((t, i) => ({\n        name: t.name,\n        count: t.count,\n        pct: total > 0 ? t.count / total * 100 : 0,\n        color: COLORS[i % COLORS.length]\n      }));\n      const knownCount = segs.reduce((a, s) => a + s.count, 0);\n      if (total > knownCount) {\n        // Add an explicit remainder segment so the bar never stays colorless\n        const otherCount = total - knownCount;\n        segs.push({\n          name: '__other__',\n          count: otherCount,\n          pct: otherCount / total * 100,\n          color: '#90a4ae'\n        });\n      }\n      const sum = segs.reduce((a, s) => a + s.pct, 0);\n      if (segs.length && sum !== 100) {\n        // Assign floating remainder (or deficit) to the last visible segment\n        segs[segs.length - 1].pct += 100 - sum;\n      }\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          height: 8,\n          borderRadius: 6,\n          overflow: 'hidden',\n          bgcolor: 'rgba(0,0,0,0.06)'\n        },\n        children: segs.map(s => {\n          const pctRoundedForLabel = Math.round(s.count / (total || 1) * 100);\n          const label = s.name === '__other__' ? `Diğer` : labelTR(s.name);\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `${label}: ${pctRoundedForLabel}% (${s.count})`,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: `${s.pct}%`,\n                bgcolor: s.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)\n          }, s.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this);\n    })(), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      sx: {\n        color: '#546e7a'\n      },\n      children: [total, \" sorudan \\xF6ng\\xF6r\\xFC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicPreview, \"gxh6Az/+ZOtF6lOLgMppQJSr/nw=\");\n_c = TopicPreview;\nexport default TopicPreview;\nvar _c;\n$RefreshReg$(_c, \"TopicPreview\");","map":{"version":3,"names":["React","useEffect","useState","Box","Chip","LinearProgress","Typography","Tooltip","API_URL","jsxDEV","_jsxDEV","COLORS","TopicPreview","category","series","categoryId","seriesId","_s","loading","setLoading","topics","setTopics","grammar","setGrammar","total","setTotal","error","setError","difficultyOverall","setDifficultyOverall","params","URLSearchParams","set","String","fetch","toString","then","r","text","ok","Error","status","json","JSON","parse","m","match","_json$difficulty","difficulty","overall","catch","e","sx","mt","children","height","borderRadius","bgcolor","fileName","_jsxFileName","lineNumber","columnNumber","useItems","length","trMap","labelTR","name","key","toLowerCase","tr","diffChip","diff","bg","fg","bd","includes","size","label","color","border","display","gap","flexWrap","mb","alignItems","slice","map","t","i","_t$percentage","percentage","Math","round","count","items","filter","it","_it$count","segs","pct","knownCount","reduce","a","s","otherCount","push","sum","overflow","pctRoundedForLabel","title","width","variant","_c","$RefreshReg$"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/components/TopicPreview.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Chip, LinearProgress, Typography, Tooltip } from '@mui/material';\nimport { API_URL } from '../utils/api';\n\ntype Topic = { name: string; count: number; percentage?: number };\n\ninterface Props {\n  category?: string; // A1, A2, ... or id\n  series?: string; // Erasmus, Genel İngilizce ... or id\n  categoryId?: number;\n  seriesId?: string;\n}\n\nconst COLORS = ['#00b894', '#0984e3', '#fdcb6e', '#e17055', '#6c5ce7', '#00cec9'];\n\nconst TopicPreview: React.FC<Props> = ({ category, series, categoryId, seriesId }) => {\n  const [loading, setLoading] = useState(true);\n  const [topics, setTopics] = useState<Topic[]>([]);\n  const [grammar, setGrammar] = useState<Topic[] | null>(null);\n  const [total, setTotal] = useState(0);\n  const [error, setError] = useState<string | null>(null);\n  const [difficultyOverall, setDifficultyOverall] = useState<string | null>(null);\n\n  useEffect(() => {\n    const params = new URLSearchParams();\n    // If seriesId is known, use only seriesId to prevent general mixing\n    if (seriesId) {\n      params.set('seriesId', String(seriesId));\n    } else {\n      if (category) params.set('category', category);\n      if (series) params.set('series', series);\n      if (categoryId) params.set('categoryId', String(categoryId));\n    }\n    if (!seriesId) params.set('limit', '60');\n\n  setLoading(true);\n  fetch(`${API_URL}/api/topics/preview?${params.toString()}`)\n      .then(async (r) => {\n        // Be tolerant to wrong content-type: parse as text first\n        const text = await r.text();\n        if (!r.ok) throw new Error(`status ${r.status}`);\n        let json: any = null;\n        try { json = JSON.parse(text); }\n        catch {\n          const m = text.match(/\\{[\\s\\S]*\\}/);\n          if (m) json = JSON.parse(m[0]);\n          else throw new Error('JSON parse error');\n        }\n        return json;\n      })\n      .then(json => {\n        setTopics(json.topics || []);\n        setGrammar(json.grammar || null);\n        setTotal(json.total || 0);\n        setDifficultyOverall(json.difficulty?.overall || null);\n        setLoading(false);\n      })\n      .catch((e) => {\n        setError('öngörü alınamadı');\n        setLoading(false);\n      });\n  }, [category, series, categoryId, seriesId]);\n\n  if (loading) {\n    return (\n      <Box sx={{ mt: 1 }}>\n        <LinearProgress sx={{ height: 6, borderRadius: 3, bgcolor: 'rgba(0,0,0,0.06)', '& .MuiLinearProgress-bar': { bgcolor: '#00b894' } }} />\n      </Box>\n    );\n  }\n  const useItems: Topic[] = (grammar && grammar.length ? grammar : topics) || [];\n  if (error || !useItems.length) return null;\n\n  const trMap: Record<string, string> = {\n    'vocabulary': 'Kelime Bilgisi',\n    'pronouns': 'Zamirler',\n    'prepositions': 'Edatlar',\n    'question forms': 'Soru Cümleleri',\n    'tenses': 'Zamanlar',\n    'conditionals': 'Koşul Cümleleri',\n    'articles': 'Tanımlıklar',\n    'modal verbs': 'Yardımcı Fiiller',\n    'passive voice': 'Edilgen Çatı',\n    'comparatives/superlatives': 'Karşılaştırma/Üstünlük',\n    'gerund/infinitive': 'Fiilimsi/Yalın Fiil',\n    'relative clauses': 'İlgi Cümleleri',\n    'phrasal verbs': 'Deyimsel Fiiller',\n    'reading': 'Okuma',\n    'grammar': 'Dilbilgisi',\n    'general': 'Genel',\n  };\n  const labelTR = (name: string) => {\n    const key = name.toLowerCase();\n    const tr = trMap[key];\n    return tr ? `${name} (${tr})` : name;\n  };\n\n  const diffChip = (() => {\n    if (!difficultyOverall) return null;\n    const diff = (difficultyOverall || '').toString().toLowerCase();\n    let bg = '#90caf9', fg = '#083a6b', bd = '#64b5f6'; // orta -> blue\n    if (diff.includes('kolay')) { bg = '#fff3cd'; fg = '#5d4037'; bd = '#ffe082'; }\n    if (diff.includes('zor')) { bg = '#ffcdd2'; fg = '#8a1c1c'; bd = '#ef9a9a'; }\n    return (\n      <Chip\n        size=\"small\"\n        aria-label={`Zorluk: ${diff}`}\n        label={`Zorluk: ${diff}`}\n        sx={{ bgcolor: bg, color: fg, border: `1px solid ${bd}` }}\n      />\n    );\n  })();\n\n  return (\n    <Box sx={{ mt: 1.25 }}>\n      <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap', mb: 1, alignItems: 'center' }}>\n        {diffChip}\n        {useItems.slice(0, 4).map((t, i) => (\n          <Chip key={t.name}\n            size=\"small\"\n            label={`${labelTR(t.name)} • ${t.percentage ?? Math.round((t.count/(total||1))*100)}% • ${t.count} soru`}\n            sx={{ bgcolor: `${COLORS[i % COLORS.length]}22`, color: '#004d40', border: `1px solid ${COLORS[i % COLORS.length]}55` }}\n          />\n        ))}\n      </Box>\n      {(() => {\n        // Build exact percentage segments by count/total and ensure full 100% fill\n        const items = useItems.filter(it => (it.count ?? 0) > 0);\n        const segs = items.map((t, i) => ({\n          name: t.name,\n          count: t.count,\n          pct: total > 0 ? (t.count / total) * 100 : 0,\n          color: COLORS[i % COLORS.length],\n        }));\n        const knownCount = segs.reduce((a, s) => a + s.count, 0);\n        if (total > knownCount) {\n          // Add an explicit remainder segment so the bar never stays colorless\n          const otherCount = total - knownCount;\n          segs.push({ name: '__other__', count: otherCount, pct: (otherCount / total) * 100, color: '#90a4ae' });\n        }\n        const sum = segs.reduce((a, s) => a + s.pct, 0);\n        if (segs.length && sum !== 100) {\n          // Assign floating remainder (or deficit) to the last visible segment\n          segs[segs.length - 1].pct += (100 - sum);\n        }\n        return (\n          <Box sx={{ display: 'flex', height: 8, borderRadius: 6, overflow: 'hidden', bgcolor: 'rgba(0,0,0,0.06)' }}>\n            {segs.map((s) => {\n              const pctRoundedForLabel = Math.round((s.count / (total || 1)) * 100);\n              const label = s.name === '__other__' ? `Diğer` : labelTR(s.name);\n              return (\n                <Tooltip key={s.name} title={`${label}: ${pctRoundedForLabel}% (${s.count})`}>\n                  <Box sx={{ width: `${s.pct}%`, bgcolor: s.color }} />\n                </Tooltip>\n              );\n            })}\n          </Box>\n        );\n      })()}\n      <Typography variant=\"caption\" sx={{ color: '#546e7a' }}>{total} sorudan öngörü</Typography>\n    </Box>\n  );\n};\n\nexport default TopicPreview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}