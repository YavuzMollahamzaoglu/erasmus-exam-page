{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/games/FillInTheBlanksGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, IconButton, LinearProgress, CircularProgress, Tooltip } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Helper: number of blanks shown in the text\nconst getBlankCount = q => Math.max(0, q.text.split('__________').length - 1);\n\n// Remove only the first occurrence of a value from an array\nconst removeOne = (arr, value) => {\n  const idx = arr.indexOf(value);\n  if (idx === -1) return arr;\n  const copy = arr.slice();\n  copy.splice(idx, 1);\n  return copy;\n};\n\n// Build display options: exactly the needed correct answers (for visible blanks)\n// plus one extra distractor if available, then shuffle\nconst pickDisplayOptions = q => {\n  const blanks = getBlankCount(q);\n  const size = Math.min(blanks, q.correctAnswers.length);\n  const needed = q.correctAnswers.slice(0, size);\n  const distractor = (q.options || []).find(o => !needed.includes(o));\n  const combined = distractor ? [...needed, distractor] : [...needed];\n  // Shuffle\n  for (let i = combined.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [combined[i], combined[j]] = [combined[j], combined[i]];\n  }\n  return combined;\n};\nconst FillInTheBlanksGame = () => {\n  _s();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [availableOptions, setAvailableOptions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(0);\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null); // touch/tap support\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [time, setTime] = useState(0);\n  // Persist each question's state while navigating\n  const [questionStates, setQuestionStates] = useState({});\n  // Backend'den soruları çek\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch('http://localhost:4000/api/games/fill-in-the-blanks/questions');\n        if (response.ok) {\n          const data = await response.json();\n          setQuestions(data);\n          // Initialize state store for questions\n          const initialMap = {};\n          data.forEach((q, idx) => {\n            const blanks = getBlankCount(q);\n            const size = Math.min(blanks, q.correctAnswers.length);\n            const key = `${idx}:${q.id || 'noid'}`;\n            initialMap[key] = {\n              userAnswers: Array(size).fill(null),\n              availableOptions: pickDisplayOptions(q),\n              isSubmitted: false,\n              showResults: false,\n              score: 0\n            };\n          });\n          setQuestionStates(initialMap);\n          setError(null);\n        } else {\n          throw new Error('Failed to fetch questions');\n        }\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n        setError('Sorular yüklenemedi. Lütfen daha sonra tekrar deneyin.');\n        // Fallback to sample data\n        const sampleQuestions = [{\n          id: 'fill-1',\n          text: 'I __________ from Turkey. My name __________ John. She __________ a student. We __________ happy today. They __________ at home.',\n          options: ['am', 'is', 'are', 'was', 'were'],\n          correctAnswers: ['am', 'is', 'is', 'are', 'are'],\n          explanation: 'Bu soruda \"to be\" fiilinin doğru kullanımları test ediliyor.'\n        }];\n        setQuestions(sampleQuestions);\n        // Initialize state for fallback sample\n        const initialMap = {};\n        sampleQuestions.forEach((q, idx) => {\n          const blanks = getBlankCount(q);\n          const size = Math.min(blanks, q.correctAnswers.length);\n          const key = `${idx}:${q.id || 'noid'}`;\n          initialMap[key] = {\n            userAnswers: Array(size).fill(null),\n            availableOptions: pickDisplayOptions(q),\n            isSubmitted: false,\n            showResults: false,\n            score: 0\n          };\n        });\n        setQuestionStates(initialMap);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  // Load current question state from store or initialize if missing\n  const resetCurrentQuestion = (question, index) => {\n    const key = `${index}:${question.id || 'noid'}`;\n    const existing = questionStates[key];\n    if (existing) {\n      setUserAnswers(existing.userAnswers);\n      setAvailableOptions(existing.availableOptions);\n      setIsSubmitted(existing.isSubmitted);\n      setShowResults(existing.showResults);\n      setScore(existing.score);\n      setSelectedOption(null);\n    } else {\n      const blanks = getBlankCount(question);\n      const size = Math.min(blanks, question.correctAnswers.length);\n      const init = {\n        userAnswers: Array(size).fill(null),\n        availableOptions: pickDisplayOptions(question),\n        isSubmitted: false,\n        showResults: false,\n        score: 0\n      };\n      setQuestionStates(prev => ({\n        ...prev,\n        [key]: init\n      }));\n      setUserAnswers(init.userAnswers);\n      setAvailableOptions(init.availableOptions);\n      setIsSubmitted(false);\n      setShowResults(false);\n      setScore(0);\n      setSelectedOption(null);\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (showResults) return;\n    const timer = setInterval(() => {\n      setTime(t => t + 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [showResults]);\n  const currentQuestion = questions[currentIndex];\n  const currentKey = currentQuestion ? `${currentIndex}:${currentQuestion.id || 'noid'}` : '';\n  const currentBlankCount = currentQuestion ? getBlankCount(currentQuestion) : 0;\n\n  // When currentIndex or questions change, load that question's saved state\n  useEffect(() => {\n    if (!currentQuestion) return;\n    resetCurrentQuestion(currentQuestion, currentIndex);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentIndex, questions.length]);\n  const handleDragStart = (e, option) => {\n    setDraggedItem(option);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDrop = (e, blankIndex) => {\n    e.preventDefault();\n    if (draggedItem && !isSubmitted) {\n      // Eğer bu boşlukta zaten bir cevap varsa, onu geri options'a ekle\n      if (userAnswers[blankIndex]) {\n        setAvailableOptions(prev => [...prev, userAnswers[blankIndex]]);\n      }\n\n      // Yeni cevabı ekle\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = draggedItem;\n      setUserAnswers(newAnswers);\n\n      // Kullanılan seçeneği available options'dan çıkar\n      setAvailableOptions(prev => prev.filter(option => option !== draggedItem));\n      setDraggedItem(null);\n    }\n  };\n\n  // Drag word from a filled blank back to the options area\n  const handleDragStartFromBlank = (e, word, blankIndex) => {\n    if (!word || isSubmitted) return;\n    setDraggedItem(word);\n    e.dataTransfer.effectAllowed = 'move';\n    // Visual feedback for the dragged element\n    setTimeout(() => {\n      e.target.style.opacity = '0.5';\n    }, 0);\n    // Remove the word from the blank immediately and return it to the options\n    const newAnswers = [...userAnswers];\n    newAnswers[blankIndex] = null;\n    setUserAnswers(newAnswers);\n    setAvailableOptions(prev => [...prev, word]);\n  };\n  const handleDropToOptions = e => {\n    e.preventDefault();\n    if (draggedItem && !isSubmitted) {\n      setAvailableOptions(prev => prev.includes(draggedItem) ? prev : [...prev, draggedItem]);\n      setDraggedItem(null);\n    }\n  };\n  const handleDragEnd = e => {\n    e.target.style.opacity = '1';\n  };\n  const handleRemoveAnswer = blankIndex => {\n    if (userAnswers[blankIndex] && !isSubmitted) {\n      setAvailableOptions(prev => [...prev, userAnswers[blankIndex]]);\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = null;\n      setUserAnswers(newAnswers);\n    }\n  };\n\n  // Touch-friendly handlers\n  const handleOptionClick = option => {\n    if (isSubmitted) return;\n    // Only options listed in availableOptions are tappable to select\n    if (!availableOptions.includes(option)) return;\n    setSelectedOption(prev => prev === option ? null : option);\n  };\n  const handleBlankClick = blankIndex => {\n    if (isSubmitted) return;\n    const current = userAnswers[blankIndex];\n    if (selectedOption && !current) {\n      // Place selected option into this blank\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = selectedOption;\n      setUserAnswers(newAnswers);\n      setAvailableOptions(prev => prev.filter(o => o !== selectedOption));\n      setSelectedOption(null);\n      return;\n    }\n    // If there is already an answer, allow remove by tap\n    if (current) {\n      handleRemoveAnswer(blankIndex);\n    }\n  };\n  const handleSubmit = () => {\n    setIsSubmitted(true);\n    let correctCount = 0;\n    const limit = Math.min(currentBlankCount, currentQuestion.correctAnswers.length);\n    for (let index = 0; index < limit; index++) {\n      const correct = currentQuestion.correctAnswers[index];\n      if (userAnswers[index] === correct) correctCount++;\n    }\n    setScore(correctCount);\n    setShowResults(true);\n    // persist state for this question\n    setQuestionStates(prev => ({\n      ...prev,\n      [currentKey]: {\n        userAnswers: [...userAnswers],\n        availableOptions: [...availableOptions],\n        isSubmitted: true,\n        showResults: true,\n        score: correctCount\n      }\n    }));\n    // Update cumulative summary\n    // Auto-advance shortly after showing results\n    setTimeout(() => {\n      if (currentIndex < questions.length - 1) {\n        setCurrentIndex(prev => prev + 1);\n      } else {\n        navigate('/questions');\n      }\n    }, 1000);\n  };\n  const nextQuestion = () => {\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(prev => prev + 1);\n    }\n  };\n  const prevQuestion = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(prev => prev - 1);\n    }\n  };\n  const restartGame = () => {\n    if (questions.length === 0) return;\n    // Rebuild initial states for all questions\n    const initialMap = {};\n    questions.forEach(q => {\n      initialMap[q.id] = {\n        userAnswers: Array(q.correctAnswers.length).fill(null),\n        availableOptions: [...q.options],\n        isSubmitted: false,\n        showResults: false,\n        score: 0\n      };\n    });\n    setQuestionStates(initialMap);\n    setCurrentIndex(0);\n    // clear timer only\n    setTime(0);\n    // Load first question fresh\n    if (questions[0]) resetCurrentQuestion(questions[0], 0);\n  };\n\n  // Sync current local state back into the questionStates store on any change\n  useEffect(() => {\n    if (!currentQuestion || !currentKey) return;\n    setQuestionStates(prev => ({\n      ...prev,\n      [currentKey]: {\n        userAnswers: [...userAnswers],\n        availableOptions: [...availableOptions],\n        isSubmitted,\n        showResults,\n        score\n      }\n    }));\n  }, [userAnswers, availableOptions, isSubmitted, showResults, score, currentKey]);\n  const renderTextWithBlanks = () => {\n    if (!currentQuestion) return null;\n    const parts = currentQuestion.text.split('__________');\n    const result = [];\n    parts.forEach((part, index) => {\n      // Her text parçasını span ile sararak ekle\n      if (part.trim()) {\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline'\n          },\n          children: part\n        }, `text-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this));\n      }\n\n      // Son parça değilse boşluk ekle\n      if (index < parts.length - 1) {\n        const blankIndex = index;\n        const userAnswer = userAnswers[blankIndex];\n        const correctAnswer = currentQuestion.correctAnswers[blankIndex];\n        const isCorrect = isSubmitted && userAnswer === correctAnswer;\n        const isIncorrect = isSubmitted && userAnswer && userAnswer !== correctAnswer;\n        result.push(/*#__PURE__*/_jsxDEV(Box, {\n          draggable: !!userAnswer && !isSubmitted,\n          onDragStart: e => userAnswer && handleDragStartFromBlank(e, userAnswer, blankIndex),\n          onDragEnd: handleDragEnd,\n          onDragOver: handleDragOver,\n          onDrop: e => handleDrop(e, blankIndex),\n          onClick: () => handleBlankClick(blankIndex),\n          sx: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minWidth: '120px',\n            height: '40px',\n            border: '2px solid',\n            borderRadius: '8px',\n            margin: '0 4px',\n            padding: '4px 8px',\n            textAlign: 'center',\n            verticalAlign: 'baseline',\n            cursor: !isSubmitted ? 'pointer' : 'default',\n            backgroundColor: isSubmitted ? isCorrect ? '#e6ffe6' : isIncorrect ? '#ffe6e6' : 'rgba(0, 184, 148, 0.1)' : userAnswer ? 'rgba(0, 184, 148, 0.2)' : 'rgba(0, 184, 148, 0.1)',\n            borderColor: isSubmitted ? isCorrect ? '#43ea7c' : isIncorrect ? '#e74c3c' : 'rgba(0, 184, 148, 0.3)' : userAnswer ? '#00b894' : 'rgba(0, 184, 148, 0.3)',\n            transition: 'all 0.3s ease',\n            boxShadow: isSubmitted ? isCorrect ? '0 0 8px #43ea7c88' : isIncorrect ? '0 0 8px #e74c3c88' : '0 2px 4px rgba(0, 184, 148, 0.2)' : '0 2px 4px rgba(0, 184, 148, 0.2)',\n            '&:hover': {\n              backgroundColor: !isSubmitted && userAnswer ? 'rgba(0, 184, 148, 0.3)' : undefined,\n              transform: !isSubmitted && userAnswer ? 'translateY(-1px)' : undefined\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              fontWeight: userAnswer ? 600 : 400,\n              color: isSubmitted ? isCorrect ? '#43ea7c' : isIncorrect ? '#e74c3c' : '#2c3e50' : userAnswer ? '#00b894' : '#666',\n              fontSize: '1rem'\n            },\n            children: userAnswer || index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)\n        }, `blank-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'inline',\n        lineHeight: 2.5,\n        fontSize: '1.2rem'\n      },\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this);\n  };\n  if (!currentQuestion) {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minHeight: \"100vh\",\n          bgcolor: \"#b2ebf2\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          px: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 60,\n          sx: {\n            color: \"#00b894\",\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"#00b894\",\n          children: \"Sorular y\\xFCkleniyor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this);\n    }\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minHeight: \"100vh\",\n          bgcolor: \"#b2ebf2\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          px: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 4,\n            maxWidth: 600,\n            width: \"100%\",\n            textAlign: \"center\",\n            borderRadius: 4,\n            background: \"linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%)\",\n            boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"error\",\n            mb: 2,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            onClick: () => navigate('/questions'),\n            sx: {\n              background: \"linear-gradient(135deg, #00b894 0%, #00cec9 100%)\",\n              color: \"#fff\",\n              py: 1.5,\n              px: 3,\n              borderRadius: 3,\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              fontWeight: 600,\n              \"&:hover\": {\n                transform: \"translateY(-2px)\",\n                boxShadow: \"0 6px 16px rgba(0, 184, 148, 0.4)\"\n              },\n              transition: \"all 0.3s ease\"\n            },\n            children: \"Geri D\\xF6n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minHeight: \"100vh\",\n        bgcolor: \"#b2ebf2\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        px: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 4,\n          maxWidth: 600,\n          width: \"100%\",\n          textAlign: \"center\",\n          borderRadius: 4,\n          background: \"linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%)\",\n          boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"#2c3e50\",\n          mb: 2,\n          children: \"Hen\\xFCz soru bulunmuyor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          onClick: () => navigate('/questions'),\n          sx: {\n            background: \"linear-gradient(135deg, #00b894 0%, #00cec9 100%)\",\n            color: \"#fff\",\n            py: 1.5,\n            px: 3,\n            borderRadius: 3,\n            cursor: \"pointer\",\n            display: \"inline-block\",\n            fontWeight: 600,\n            \"&:hover\": {\n              transform: \"translateY(-2px)\",\n              boxShadow: \"0 6px 16px rgba(0, 184, 148, 0.4)\"\n            },\n            transition: \"all 0.3s ease\"\n          },\n          children: \"Geri D\\xF6n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      bgcolor: '#b2ebf2',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      fontFamily: 'Inter, Roboto, Open Sans, Arial, sans-serif',\n      px: 2,\n      pt: 0,\n      pb: {\n        xs: 12,\n        md: 16\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        maxWidth: 800,\n        background: \"linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%)\",\n        borderRadius: 4,\n        boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\",\n        p: 4,\n        mb: 2,\n        color: \"#2c3e50\",\n        position: \"relative\",\n        mx: 'auto',\n        overflow: 'visible',\n        border: \"1px solid rgba(255,255,255,0.2)\",\n        mt: {\n          xs: 1,\n          md: '15px'\n        },\n        // Show nav arrows on hover for desktop\n        '&:hover .navArrow': {\n          opacity: 1\n        }\n      },\n      children: [currentIndex > 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"\\xD6nceki soru\",\n        onClick: prevQuestion,\n        className: \"navArrow\",\n        disableRipple: true,\n        sx: {\n          position: 'absolute',\n          // On very small phones: bring arrows to bottom center\n          left: {\n            xs: '50%',\n            sm: -56,\n            md: -72\n          },\n          right: {\n            xs: 'auto'\n          },\n          top: {\n            xs: 'auto',\n            sm: '50%'\n          },\n          bottom: {\n            xs: 10,\n            sm: 'auto'\n          },\n          transform: {\n            xs: 'translate(-120%, 0)',\n            sm: 'translateY(-50%)'\n          },\n          width: {\n            xs: 44,\n            sm: 52\n          },\n          height: {\n            xs: 44,\n            sm: 52\n          },\n          borderRadius: '50%',\n          bgcolor: 'rgba(255,255,255,0.15)',\n          color: '#2c3e50',\n          backdropFilter: 'saturate(180%) blur(6px)',\n          border: '1px solid rgba(255,255,255,0.35)',\n          boxShadow: '0 10px 30px rgba(0,0,0,0.15)',\n          zIndex: 2,\n          pointerEvents: 'auto',\n          transition: 'opacity .25s ease, transform .2s ease, background-color .2s ease, box-shadow .2s ease',\n          opacity: {\n            xs: 1,\n            sm: 0.6\n          },\n          '&:hover': {\n            bgcolor: 'rgba(255,255,255,0.3)',\n            transform: {\n              xs: 'translate(-120%, 0) scale(1.05)',\n              sm: 'translateY(-50%) scale(1.05)'\n            },\n            boxShadow: '0 14px 36px rgba(0,0,0,0.2)'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          fontSize: \"medium\",\n          sx: {\n            color: '#00b894'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this), currentIndex < questions.length - 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Sonraki soru\",\n        onClick: nextQuestion,\n        className: \"navArrow\",\n        disableRipple: true,\n        sx: {\n          position: 'absolute',\n          // On very small phones: bring arrows to bottom center\n          left: {\n            xs: '50%',\n            sm: 'auto'\n          },\n          right: {\n            xs: 'auto',\n            sm: -56,\n            md: -72\n          },\n          top: {\n            xs: 'auto',\n            sm: '50%'\n          },\n          bottom: {\n            xs: 10,\n            sm: 'auto'\n          },\n          transform: {\n            xs: 'translate(20%, 0)',\n            sm: 'translateY(-50%)'\n          },\n          width: {\n            xs: 44,\n            sm: 52\n          },\n          height: {\n            xs: 44,\n            sm: 52\n          },\n          borderRadius: '50%',\n          bgcolor: 'rgba(255,255,255,0.15)',\n          color: '#2c3e50',\n          backdropFilter: 'saturate(180%) blur(6px)',\n          border: '1px solid rgba(255,255,255,0.35)',\n          boxShadow: '0 10px 30px rgba(0,0,0,0.15)',\n          zIndex: 2,\n          pointerEvents: 'auto',\n          transition: 'opacity .25s ease, transform .2s ease, background-color .2s ease, box-shadow .2s ease',\n          opacity: {\n            xs: 1,\n            sm: 0.6\n          },\n          '&:hover': {\n            bgcolor: 'rgba(255,255,255,0.3)',\n            transform: {\n              xs: 'translate(20%, 0) scale(1.05)',\n              sm: 'translateY(-50%) scale(1.05)'\n            },\n            boxShadow: '0 14px 36px rgba(0,0,0,0.2)'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n          fontSize: \"medium\",\n          sx: {\n            color: '#00b894'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            color: \"#00b894\",\n            bgcolor: 'rgba(0, 184, 148, 0.1)',\n            border: \"2px solid rgba(0, 184, 148, 0.2)\",\n            '&:hover': {\n              bgcolor: 'rgba(0, 184, 148, 0.2)',\n              transform: 'scale(1.05)'\n            },\n            transition: 'all 0.3s ease'\n          },\n          onClick: () => navigate('/questions'),\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontWeight: 600,\n            fontSize: 16,\n            color: '#00b894',\n            bgcolor: 'rgba(0, 184, 148, 0.1)',\n            px: 2,\n            py: 1,\n            borderRadius: 3,\n            border: \"1px solid rgba(0, 184, 148, 0.2)\"\n          },\n          children: [Math.floor(time / 60), \":\", (time % 60).toString().padStart(2, '0')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          fontWeight: 700,\n          textAlign: \"center\",\n          color: \"#2c3e50\",\n          fontSize: {\n            xs: 20,\n            sm: 24\n          },\n          mb: 2,\n          textShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n        },\n        children: \"BO\\u015ELUK DOLDURMA OYUNU\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        value: (currentIndex + 1) / questions.length * 100,\n        sx: {\n          height: 12,\n          borderRadius: 6,\n          mb: 2,\n          mt: 1,\n          bgcolor: \"rgba(0, 184, 148, 0.1)\",\n          border: \"1px solid rgba(0, 184, 148, 0.2)\",\n          '& .MuiLinearProgress-bar': {\n            background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)',\n            borderRadius: 6,\n            boxShadow: '0 2px 8px rgba(0, 184, 148, 0.3)',\n            transition: 'all 0.3s ease'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontWeight: 600,\n          textAlign: \"center\",\n          color: \"#2c3e50\",\n          fontSize: {\n            xs: 16,\n            sm: 18\n          },\n          mb: 3,\n          p: 2,\n          bgcolor: 'rgba(0, 184, 148, 0.1)',\n          borderRadius: 3,\n          border: \"1px solid rgba(0, 184, 148, 0.2)\"\n        },\n        children: [\"Soru \", currentIndex + 1, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          mb: 3,\n          backgroundColor: 'rgba(0, 184, 148, 0.1)',\n          borderRadius: 3,\n          border: \"1px solid rgba(0, 184, 148, 0.2)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            fontSize: '1.2rem',\n            lineHeight: 2.5,\n            textAlign: 'justify',\n            wordSpacing: '0.1em',\n            letterSpacing: '0.02em'\n          },\n          children: renderTextWithBlanks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          mb: 3,\n          backgroundColor: 'rgba(116, 185, 255, 0.1)',\n          borderRadius: 3,\n          border: \"1px solid rgba(116, 185, 255, 0.2)\"\n        },\n        onDragOver: handleDragOver,\n        onDrop: handleDropToOptions,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            color: \"#2c3e50\",\n            fontWeight: 600\n          },\n          children: \"Se\\xE7enekler:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 2\n          },\n          children: availableOptions.map((option, index) => /*#__PURE__*/_jsxDEV(Box, {\n            draggable: !isSubmitted,\n            onDragStart: e => handleDragStart(e, option),\n            onClick: () => handleOptionClick(option),\n            sx: {\n              padding: '8px 16px',\n              background: 'linear-gradient(135deg, #74b9ff 0%, #0984e3 100%)',\n              color: '#fff',\n              borderRadius: 1,\n              cursor: isSubmitted ? 'default' : 'pointer',\n              userSelect: 'none',\n              opacity: isSubmitted ? 0.6 : 1,\n              transition: 'all 0.3s ease',\n              boxShadow: '0 4px 12px rgba(116, 185, 255, 0.3)',\n              outline: selectedOption === option ? '3px solid rgba(0, 184, 148, 0.6)' : 'none',\n              '&:hover': {\n                transform: !isSubmitted ? 'translateY(-2px)' : undefined,\n                boxShadow: !isSubmitted ? '0 6px 16px rgba(116, 185, 255, 0.4)' : undefined\n              },\n              '&:active': {\n                cursor: !isSubmitted ? 'grabbing' : 'default'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              fontWeight: 600,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 17\n            }, this)\n          }, `option-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), showResults && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          mb: 3,\n          backgroundColor: score === currentQuestion.correctAnswers.length ? '#e6ffe6' : '#fff3cd',\n          border: `2px solid ${score === currentQuestion.correctAnswers.length ? '#43ea7c' : '#ffc107'}`,\n          borderRadius: 3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: score === currentQuestion.correctAnswers.length ? '#43ea7c' : '#856404',\n            fontWeight: 600,\n            mb: 2\n          },\n          children: [\"Sonu\\xE7: \", score, \"/\", currentQuestion.correctAnswers.length, \" do\\u011Fru\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 13\n        }, this), currentQuestion.correctAnswers.slice(0, currentBlankCount).map((correct, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 1,\n            color: '#2c3e50'\n          },\n          children: [\"Bo\\u015Fluk \", index + 1, \": \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: correct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 37\n          }, this), userAnswers[index] !== correct && userAnswers[index] && ` (Siz: ${userAnswers[index]})`]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 2,\n            fontStyle: 'italic',\n            color: '#666'\n          },\n          children: currentQuestion.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 11\n      }, this), !isSubmitted && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          gap: 1.5,\n          mt: 3,\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.97) 0%, rgba(255,255,255,0.92) 100%)',\n            color: currentIndex === 0 ? '#b0b0b0' : '#00b894',\n            fontWeight: 700,\n            fontSize: 15,\n            border: `2px solid ${currentIndex === 0 ? '#e0e0e0' : 'rgba(0, 184, 148, 0.4)'}`,\n            borderRadius: 12,\n            padding: '10px 12px',\n            cursor: currentIndex === 0 ? 'not-allowed' : 'pointer',\n            minWidth: 0,\n            flex: '1 1 0',\n            boxShadow: '0 4px 10px rgba(0,0,0,0.05)'\n          },\n          onClick: prevQuestion,\n          disabled: currentIndex === 0,\n          children: \"\\u2190 \\xD6nceki\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this), (() => {\n          const hasBlank = userAnswers.length < currentBlankCount || userAnswers.slice(0, currentBlankCount).some(a => a === null);\n          const Btn = /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n              color: '#fff',\n              fontWeight: 800,\n              fontSize: 16,\n              border: 'none',\n              borderRadius: 12,\n              padding: '12px 18px',\n              cursor: hasBlank ? 'not-allowed' : 'pointer',\n              boxShadow: '0 6px 16px rgba(0, 184, 148, 0.35)',\n              opacity: hasBlank ? 0.7 : 1,\n              transition: 'all 0.3s ease',\n              flex: '1.2 1 0',\n              minWidth: 0\n            },\n            onClick: () => {\n              if (!hasBlank) handleSubmit();\n            },\n            disabled: hasBlank,\n            children: \"Kontrol Et\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 17\n          }, this);\n          return /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: hasBlank ? 'Bütün boşlukları doldurmalısınız' : '',\n            arrow: true,\n            placement: \"top\",\n            disableHoverListener: !hasBlank,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                display: 'inline-flex'\n              },\n              children: Btn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 17\n          }, this);\n        })(), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'linear-gradient(135deg, rgba(255,255,255,0.97) 0%, rgba(255,255,255,0.92) 100%)',\n            color: currentIndex >= questions.length - 1 ? '#b0b0b0' : '#00b894',\n            fontWeight: 700,\n            fontSize: 15,\n            border: `2px solid ${currentIndex >= questions.length - 1 ? '#e0e0e0' : 'rgba(0, 184, 148, 0.4)'}`,\n            borderRadius: 12,\n            padding: '10px 12px',\n            cursor: currentIndex >= questions.length - 1 ? 'not-allowed' : 'pointer',\n            minWidth: 0,\n            flex: '1 1 0',\n            boxShadow: '0 4px 10px rgba(0,0,0,0.05)'\n          },\n          onClick: nextQuestion,\n          disabled: currentIndex >= questions.length - 1,\n          children: \"Sonraki \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 11\n      }, this), isSubmitted && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          justifyContent: 'center',\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: 'linear-gradient(135deg, #74b9ff 0%, #0984e3 100%)',\n            color: '#fff',\n            fontWeight: 700,\n            fontSize: 16,\n            border: 'none',\n            borderRadius: 12,\n            padding: '12px 24px',\n            cursor: 'pointer',\n            minWidth: 120,\n            boxShadow: '0 4px 12px rgba(116, 185, 255, 0.3)',\n            transition: 'all 0.3s ease'\n          },\n          onClick: () => {\n            if (currentIndex < questions.length - 1) nextQuestion();else navigate('/questions');\n          },\n          children: currentIndex < questions.length - 1 ? 'Sonraki →' : 'Kapat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 5\n  }, this);\n};\n_s(FillInTheBlanksGame, \"KUEQglhjuSC6+hAY0KBvS0i82Hs=\", false, function () {\n  return [useNavigate];\n});\n_c = FillInTheBlanksGame;\nexport default FillInTheBlanksGame;\nvar _c;\n$RefreshReg$(_c, \"FillInTheBlanksGame\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","IconButton","LinearProgress","CircularProgress","Tooltip","useNavigate","ArrowBackIcon","ArrowForwardIcon","jsxDEV","_jsxDEV","getBlankCount","q","Math","max","text","split","length","removeOne","arr","value","idx","indexOf","copy","slice","splice","pickDisplayOptions","blanks","size","min","correctAnswers","needed","distractor","options","find","o","includes","combined","i","j","floor","random","FillInTheBlanksGame","_s","navigate","questions","setQuestions","currentIndex","setCurrentIndex","userAnswers","setUserAnswers","availableOptions","setAvailableOptions","isSubmitted","setIsSubmitted","showResults","setShowResults","score","setScore","draggedItem","setDraggedItem","selectedOption","setSelectedOption","loading","setLoading","error","setError","time","setTime","questionStates","setQuestionStates","fetchQuestions","response","fetch","ok","data","json","initialMap","forEach","key","id","Array","fill","Error","console","sampleQuestions","explanation","resetCurrentQuestion","question","index","existing","init","prev","timer","setInterval","t","clearInterval","currentQuestion","currentKey","currentBlankCount","handleDragStart","e","option","dataTransfer","effectAllowed","handleDragOver","preventDefault","dropEffect","handleDrop","blankIndex","newAnswers","filter","handleDragStartFromBlank","word","setTimeout","target","style","opacity","handleDropToOptions","handleDragEnd","handleRemoveAnswer","handleOptionClick","handleBlankClick","current","handleSubmit","correctCount","limit","correct","nextQuestion","prevQuestion","restartGame","renderTextWithBlanks","parts","result","part","trim","push","display","children","fileName","_jsxFileName","lineNumber","columnNumber","userAnswer","correctAnswer","isCorrect","isIncorrect","draggable","onDragStart","onDragEnd","onDragOver","onDrop","onClick","sx","alignItems","justifyContent","minWidth","height","border","borderRadius","margin","padding","textAlign","verticalAlign","cursor","backgroundColor","borderColor","transition","boxShadow","undefined","transform","variant","fontWeight","color","fontSize","lineHeight","minHeight","bgcolor","flexDirection","px","mb","p","maxWidth","width","background","py","fontFamily","pt","pb","xs","md","position","mx","overflow","mt","className","disableRipple","left","sm","right","top","bottom","backdropFilter","zIndex","pointerEvents","gap","flex","toString","padStart","textShadow","wordSpacing","letterSpacing","gutterBottom","flexWrap","map","userSelect","outline","fontStyle","disabled","hasBlank","some","a","Btn","title","arrow","placement","disableHoverListener","_c","$RefreshReg$"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/games/FillInTheBlanksGame.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, Paper, Alert, IconButton, LinearProgress, CircularProgress, Tooltip } from '@mui/material';\n \nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\ninterface FillInTheBlanksQuestion {\n  id: string;\n  text: string;\n  options: string[];\n  correctAnswers: string[];\n  explanation: string;\n}\n\ntype QuestionState = {\n  userAnswers: (string | null)[];\n  availableOptions: string[];\n  isSubmitted: boolean;\n  showResults: boolean;\n  score: number;\n};\n\n// Helper: number of blanks shown in the text\nconst getBlankCount = (q: FillInTheBlanksQuestion) =>\n  Math.max(0, (q.text.split('__________').length - 1));\n\n// Remove only the first occurrence of a value from an array\nconst removeOne = (arr: string[], value: string) => {\n  const idx = arr.indexOf(value);\n  if (idx === -1) return arr;\n  const copy = arr.slice();\n  copy.splice(idx, 1);\n  return copy;\n};\n\n// Build display options: exactly the needed correct answers (for visible blanks)\n// plus one extra distractor if available, then shuffle\nconst pickDisplayOptions = (q: FillInTheBlanksQuestion): string[] => {\n  const blanks = getBlankCount(q);\n  const size = Math.min(blanks, q.correctAnswers.length);\n  const needed = q.correctAnswers.slice(0, size);\n  const distractor = (q.options || []).find(o => !needed.includes(o));\n  const combined = distractor ? [...needed, distractor] : [...needed];\n  // Shuffle\n  for (let i = combined.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [combined[i], combined[j]] = [combined[j], combined[i]];\n  }\n  return combined;\n};\n\nconst FillInTheBlanksGame: React.FC = () => {\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState<FillInTheBlanksQuestion[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<(string | null)[]>([]);\n  const [availableOptions, setAvailableOptions] = useState<string[]>([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(0);\n  const [draggedItem, setDraggedItem] = useState<string | null>(null);\n  const [selectedOption, setSelectedOption] = useState<string | null>(null); // touch/tap support\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [time, setTime] = useState(0);\n  // Persist each question's state while navigating\n  const [questionStates, setQuestionStates] = useState<Record<string, QuestionState>>({});\n  // Backend'den soruları çek\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch('http://localhost:4000/api/games/fill-in-the-blanks/questions');\n        if (response.ok) {\n          const data = await response.json();\n          setQuestions(data);\n          // Initialize state store for questions\n          const initialMap: Record<string, QuestionState> = {};\n          (data as FillInTheBlanksQuestion[]).forEach((q, idx) => {\n            const blanks = getBlankCount(q);\n            const size = Math.min(blanks, q.correctAnswers.length);\n            const key = `${idx}:${q.id || 'noid'}`;\n            initialMap[key] = {\n              userAnswers: Array(size).fill(null),\n              availableOptions: pickDisplayOptions(q),\n              isSubmitted: false,\n              showResults: false,\n              score: 0,\n            };\n          });\n          setQuestionStates(initialMap);\n          setError(null);\n        } else {\n          throw new Error('Failed to fetch questions');\n        }\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n        setError('Sorular yüklenemedi. Lütfen daha sonra tekrar deneyin.');\n        // Fallback to sample data\n        const sampleQuestions: FillInTheBlanksQuestion[] = [\n          {\n            id: 'fill-1',\n            text: 'I __________ from Turkey. My name __________ John. She __________ a student. We __________ happy today. They __________ at home.',\n            options: ['am', 'is', 'are', 'was', 'were'],\n            correctAnswers: ['am', 'is', 'is', 'are', 'are'],\n            explanation: 'Bu soruda \"to be\" fiilinin doğru kullanımları test ediliyor.'\n          }\n        ];\n  setQuestions(sampleQuestions);\n        // Initialize state for fallback sample\n        const initialMap: Record<string, QuestionState> = {};\n        sampleQuestions.forEach((q, idx) => {\n          const blanks = getBlankCount(q);\n          const size = Math.min(blanks, q.correctAnswers.length);\n          const key = `${idx}:${q.id || 'noid'}`;\n          initialMap[key] = {\n            userAnswers: Array(size).fill(null),\n            availableOptions: pickDisplayOptions(q),\n            isSubmitted: false,\n            showResults: false,\n            score: 0,\n          };\n        });\n    setQuestionStates(initialMap);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n\n  // Load current question state from store or initialize if missing\n  const resetCurrentQuestion = (question: FillInTheBlanksQuestion, index: number) => {\n    const key = `${index}:${question.id || 'noid'}`;\n    const existing = questionStates[key];\n    if (existing) {\n      setUserAnswers(existing.userAnswers);\n      setAvailableOptions(existing.availableOptions);\n      setIsSubmitted(existing.isSubmitted);\n      setShowResults(existing.showResults);\n      setScore(existing.score);\n  setSelectedOption(null);\n    } else {\n      const blanks = getBlankCount(question);\n      const size = Math.min(blanks, question.correctAnswers.length);\n      const init: QuestionState = {\n        userAnswers: Array(size).fill(null),\n        availableOptions: pickDisplayOptions(question),\n        isSubmitted: false,\n        showResults: false,\n        score: 0,\n      };\n      setQuestionStates((prev) => ({ ...prev, [key]: init }));\n      setUserAnswers(init.userAnswers);\n      setAvailableOptions(init.availableOptions);\n      setIsSubmitted(false);\n      setShowResults(false);\n      setScore(0);\n  setSelectedOption(null);\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (showResults) return;\n    const timer = setInterval(() => {\n      setTime((t) => t + 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [showResults]);\n\n  const currentQuestion = questions[currentIndex];\n  const currentKey = currentQuestion ? `${currentIndex}:${currentQuestion.id || 'noid'}` : '';\n  const currentBlankCount = currentQuestion ? getBlankCount(currentQuestion) : 0;\n\n  // When currentIndex or questions change, load that question's saved state\n  useEffect(() => {\n    if (!currentQuestion) return;\n    resetCurrentQuestion(currentQuestion, currentIndex);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentIndex, questions.length]);\n\n  const handleDragStart = (e: React.DragEvent, option: string) => {\n    setDraggedItem(option);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDrop = (e: React.DragEvent, blankIndex: number) => {\n    e.preventDefault();\n    if (draggedItem && !isSubmitted) {\n      // Eğer bu boşlukta zaten bir cevap varsa, onu geri options'a ekle\n      if (userAnswers[blankIndex]) {\n        setAvailableOptions(prev => [...prev, userAnswers[blankIndex] as string]);\n      }\n\n      // Yeni cevabı ekle\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = draggedItem;\n      setUserAnswers(newAnswers);\n\n      // Kullanılan seçeneği available options'dan çıkar\n      setAvailableOptions(prev => prev.filter(option => option !== draggedItem));\n      setDraggedItem(null);\n    }\n  };\n\n  // Drag word from a filled blank back to the options area\n  const handleDragStartFromBlank = (e: React.DragEvent, word: string, blankIndex: number) => {\n    if (!word || isSubmitted) return;\n    setDraggedItem(word);\n    e.dataTransfer.effectAllowed = 'move';\n    // Visual feedback for the dragged element\n    setTimeout(() => {\n      (e.target as HTMLElement).style.opacity = '0.5';\n    }, 0);\n    // Remove the word from the blank immediately and return it to the options\n    const newAnswers = [...userAnswers];\n    newAnswers[blankIndex] = null;\n    setUserAnswers(newAnswers);\n    setAvailableOptions(prev => [...prev, word]);\n  };\n\n  const handleDropToOptions = (e: React.DragEvent) => {\n    e.preventDefault();\n    if (draggedItem && !isSubmitted) {\n      setAvailableOptions(prev => prev.includes(draggedItem) ? prev : [...prev, draggedItem]);\n      setDraggedItem(null);\n    }\n  };\n\n  const handleDragEnd = (e: React.DragEvent) => {\n    (e.target as HTMLElement).style.opacity = '1';\n  };\n\n  const handleRemoveAnswer = (blankIndex: number) => {\n    if (userAnswers[blankIndex] && !isSubmitted) {\n      setAvailableOptions(prev => [...prev, userAnswers[blankIndex] as string]);\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = null;\n      setUserAnswers(newAnswers);\n    }\n  };\n\n  // Touch-friendly handlers\n  const handleOptionClick = (option: string) => {\n    if (isSubmitted) return;\n    // Only options listed in availableOptions are tappable to select\n    if (!availableOptions.includes(option)) return;\n    setSelectedOption((prev) => (prev === option ? null : option));\n  };\n\n  const handleBlankClick = (blankIndex: number) => {\n    if (isSubmitted) return;\n    const current = userAnswers[blankIndex];\n    if (selectedOption && !current) {\n      // Place selected option into this blank\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = selectedOption;\n      setUserAnswers(newAnswers);\n      setAvailableOptions(prev => prev.filter(o => o !== selectedOption));\n      setSelectedOption(null);\n      return;\n    }\n    // If there is already an answer, allow remove by tap\n    if (current) {\n      handleRemoveAnswer(blankIndex);\n    }\n  };\n\n  const handleSubmit = () => {\n    setIsSubmitted(true);\n    let correctCount = 0;\n    const limit = Math.min(currentBlankCount, currentQuestion.correctAnswers.length);\n    for (let index = 0; index < limit; index++) {\n      const correct = currentQuestion.correctAnswers[index];\n      if (userAnswers[index] === correct) correctCount++;\n    }\n    setScore(correctCount);\n    setShowResults(true);\n    // persist state for this question\n    setQuestionStates((prev) => ({\n      ...prev,\n      [currentKey]: {\n        userAnswers: [...userAnswers],\n        availableOptions: [...availableOptions],\n        isSubmitted: true,\n        showResults: true,\n        score: correctCount,\n      },\n    }));\n    // Update cumulative summary\n    // Auto-advance shortly after showing results\n    setTimeout(() => {\n      if (currentIndex < questions.length - 1) {\n        setCurrentIndex((prev) => prev + 1);\n      } else {\n        navigate('/questions');\n      }\n    }, 1000);\n  };\n\n  const nextQuestion = () => {\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(prev => prev + 1);\n    }\n  };\n\n  const prevQuestion = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(prev => prev - 1);\n    }\n  };\n\n  const restartGame = () => {\n    if (questions.length === 0) return;\n    // Rebuild initial states for all questions\n    const initialMap: Record<string, QuestionState> = {};\n    questions.forEach((q) => {\n      initialMap[q.id] = {\n        userAnswers: Array(q.correctAnswers.length).fill(null),\n        availableOptions: [...q.options],\n        isSubmitted: false,\n        showResults: false,\n        score: 0,\n      };\n    });\n    setQuestionStates(initialMap);\n    setCurrentIndex(0);\n  // clear timer only\n    setTime(0);\n    // Load first question fresh\n  if (questions[0]) resetCurrentQuestion(questions[0], 0);\n  };\n\n  // Sync current local state back into the questionStates store on any change\n  useEffect(() => {\n    if (!currentQuestion || !currentKey) return;\n    setQuestionStates((prev) => ({\n      ...prev,\n      [currentKey]: {\n        userAnswers: [...userAnswers],\n        availableOptions: [...availableOptions],\n        isSubmitted,\n        showResults,\n        score,\n      },\n    }));\n  }, [userAnswers, availableOptions, isSubmitted, showResults, score, currentKey]);\n\n  const renderTextWithBlanks = () => {\n    if (!currentQuestion) return null;\n\n    const parts = currentQuestion.text.split('__________');\n    const result: (string | React.ReactNode)[] = [];\n\n    parts.forEach((part, index) => {\n      // Her text parçasını span ile sararak ekle\n      if (part.trim()) {\n        result.push(\n          <span key={`text-${index}`} style={{ display: 'inline' }}>\n            {part}\n          </span>\n        );\n      }\n      \n      // Son parça değilse boşluk ekle\n      if (index < parts.length - 1) {\n        const blankIndex = index;\n        const userAnswer = userAnswers[blankIndex];\n        const correctAnswer = currentQuestion.correctAnswers[blankIndex];\n        const isCorrect = isSubmitted && userAnswer === correctAnswer;\n        const isIncorrect = isSubmitted && userAnswer && userAnswer !== correctAnswer;\n\n        result.push(\n          <Box\n            key={`blank-${index}`}\n            draggable={!!userAnswer && !isSubmitted}\n            onDragStart={(e) => userAnswer && handleDragStartFromBlank(e, userAnswer, blankIndex)}\n            onDragEnd={handleDragEnd}\n            onDragOver={handleDragOver}\n            onDrop={(e) => handleDrop(e, blankIndex)}\n            onClick={() => handleBlankClick(blankIndex)}\n            sx={{\n              display: 'inline-flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              minWidth: '120px',\n              height: '40px',\n              border: '2px solid',\n              borderRadius: '8px',\n              margin: '0 4px',\n              padding: '4px 8px',\n              textAlign: 'center',\n              verticalAlign: 'baseline',\n              cursor: !isSubmitted ? 'pointer' : 'default',\n              backgroundColor: isSubmitted \n                ? (isCorrect ? '#e6ffe6' : isIncorrect ? '#ffe6e6' : 'rgba(0, 184, 148, 0.1)')\n                : userAnswer ? 'rgba(0, 184, 148, 0.2)' : 'rgba(0, 184, 148, 0.1)',\n              borderColor: isSubmitted \n                ? (isCorrect ? '#43ea7c' : isIncorrect ? '#e74c3c' : 'rgba(0, 184, 148, 0.3)')\n                : userAnswer ? '#00b894' : 'rgba(0, 184, 148, 0.3)',\n              transition: 'all 0.3s ease',\n              boxShadow: isSubmitted \n                ? (isCorrect ? '0 0 8px #43ea7c88' : isIncorrect ? '0 0 8px #e74c3c88' : '0 2px 4px rgba(0, 184, 148, 0.2)')\n                : '0 2px 4px rgba(0, 184, 148, 0.2)',\n              '&:hover': {\n                backgroundColor: !isSubmitted && userAnswer ? 'rgba(0, 184, 148, 0.3)' : undefined,\n                transform: !isSubmitted && userAnswer ? 'translateY(-1px)' : undefined,\n              }\n            }}\n          >\n            <Typography \n              variant=\"body1\" \n              sx={{ \n                fontWeight: userAnswer ? 600 : 400,\n                color: isSubmitted \n                  ? (isCorrect ? '#43ea7c' : isIncorrect ? '#e74c3c' : '#2c3e50')\n                  : userAnswer ? '#00b894' : '#666',\n                fontSize: '1rem'\n              }}\n            >\n              {userAnswer || (index + 1)}\n            </Typography>\n          </Box>\n        );\n      }\n    });\n\n    return (\n      <Box sx={{ \n        display: 'inline', \n        lineHeight: 2.5,\n        fontSize: '1.2rem'\n      }}>\n        {result}\n      </Box>\n    );\n  };\n\n  if (!currentQuestion) {\n    if (loading) {\n      return (\n        <Box sx={{ minHeight: \"100vh\", bgcolor: \"#b2ebf2\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", px: 2 }}>\n          <CircularProgress size={60} sx={{ color: \"#00b894\", mb: 2 }} />\n          <Typography variant=\"h6\" color=\"#00b894\">Sorular yükleniyor...</Typography>\n        </Box>\n      );\n    }\n\n    if (error) {\n      return (\n        <Box sx={{ minHeight: \"100vh\", bgcolor: \"#b2ebf2\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", px: 2 }}>\n          <Box sx={{ p: 4, maxWidth: 600, width: \"100%\", textAlign: \"center\", borderRadius: 4, background: \"linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%)\", boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\" }}>\n            <Typography variant=\"h6\" color=\"error\" mb={2}>{error}</Typography>\n            <Typography \n              onClick={() => navigate('/questions')}\n              sx={{ \n                background: \"linear-gradient(135deg, #00b894 0%, #00cec9 100%)\", \n                color: \"#fff\",\n                py: 1.5,\n                px: 3,\n                borderRadius: 3,\n                cursor: \"pointer\",\n                display: \"inline-block\",\n                fontWeight: 600,\n                \"&:hover\": { transform: \"translateY(-2px)\", boxShadow: \"0 6px 16px rgba(0, 184, 148, 0.4)\" },\n                transition: \"all 0.3s ease\"\n              }}\n            >\n              Geri Dön\n            </Typography>\n          </Box>\n      \n        </Box>\n      );\n    }\n\n    return (\n      <Box sx={{ minHeight: \"100vh\", bgcolor: \"#b2ebf2\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", px: 2 }}>\n        <Box sx={{ p: 4, maxWidth: 600, width: \"100%\", textAlign: \"center\", borderRadius: 4, background: \"linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%)\", boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\" }}>\n          <Typography variant=\"h6\" color=\"#2c3e50\" mb={2}>Henüz soru bulunmuyor</Typography>\n          <Typography \n            onClick={() => navigate('/questions')}\n            sx={{ \n              background: \"linear-gradient(135deg, #00b894 0%, #00cec9 100%)\", \n              color: \"#fff\",\n              py: 1.5,\n              px: 3,\n              borderRadius: 3,\n              cursor: \"pointer\",\n              display: \"inline-block\",\n              fontWeight: 600,\n              \"&:hover\": { transform: \"translateY(-2px)\", boxShadow: \"0 6px 16px rgba(0, 184, 148, 0.4)\" },\n              transition: \"all 0.3s ease\"\n            }}\n          >\n            Geri Dön\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ \n      minHeight: '100vh', \n      bgcolor: '#b2ebf2',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      fontFamily: 'Inter, Roboto, Open Sans, Arial, sans-serif',\n      px: 2,\n      pt: 0,\n      pb: { xs: 12, md: 16 }\n    }}>\n      <Box sx={{ \n        width: '100%', \n        maxWidth: 800, \n        background: \"linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%)\", \n        borderRadius: 4, \n        boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\", \n        p: 4, \n        mb: 2, \n        color: \"#2c3e50\", \n        position: \"relative\", \n        mx: 'auto', \n  overflow: 'visible', \n        border: \"1px solid rgba(255,255,255,0.2)\",\n  mt: { xs: 1, md: '15px' },\n        // Show nav arrows on hover for desktop\n        '&:hover .navArrow': { opacity: 1 }\n      }}>\n        {/* Overlay navigation arrows */}\n        {currentIndex > 0 && (\n          <IconButton\n            aria-label=\"Önceki soru\"\n            onClick={prevQuestion}\n            className=\"navArrow\"\n            disableRipple\n            sx={{\n              position: 'absolute',\n              // On very small phones: bring arrows to bottom center\n              left: { xs: '50%', sm: -56, md: -72 },\n              right: { xs: 'auto' },\n              top: { xs: 'auto', sm: '50%' },\n              bottom: { xs: 10, sm: 'auto' },\n              transform: { xs: 'translate(-120%, 0)', sm: 'translateY(-50%)' },\n              width: { xs: 44, sm: 52 },\n              height: { xs: 44, sm: 52 },\n              borderRadius: '50%',\n              bgcolor: 'rgba(255,255,255,0.15)',\n              color: '#2c3e50',\n              backdropFilter: 'saturate(180%) blur(6px)',\n              border: '1px solid rgba(255,255,255,0.35)',\n              boxShadow: '0 10px 30px rgba(0,0,0,0.15)',\n              zIndex: 2,\n              pointerEvents: 'auto',\n              transition: 'opacity .25s ease, transform .2s ease, background-color .2s ease, box-shadow .2s ease',\n              opacity: { xs: 1, sm: 0.6 },\n              '&:hover': {\n                bgcolor: 'rgba(255,255,255,0.3)',\n                transform: { xs: 'translate(-120%, 0) scale(1.05)', sm: 'translateY(-50%) scale(1.05)' },\n                boxShadow: '0 14px 36px rgba(0,0,0,0.2)'\n              }\n            }}\n          >\n            <ArrowBackIcon fontSize=\"medium\" sx={{ color: '#00b894' }} />\n          </IconButton>\n        )}\n        {currentIndex < questions.length - 1 && (\n          <IconButton\n            aria-label=\"Sonraki soru\"\n            onClick={nextQuestion}\n            className=\"navArrow\"\n            disableRipple\n            sx={{\n              position: 'absolute',\n              // On very small phones: bring arrows to bottom center\n              left: { xs: '50%', sm: 'auto' },\n              right: { xs: 'auto', sm: -56, md: -72 },\n              top: { xs: 'auto', sm: '50%' },\n              bottom: { xs: 10, sm: 'auto' },\n              transform: { xs: 'translate(20%, 0)', sm: 'translateY(-50%)' },\n              width: { xs: 44, sm: 52 },\n              height: { xs: 44, sm: 52 },\n              borderRadius: '50%',\n              bgcolor: 'rgba(255,255,255,0.15)',\n              color: '#2c3e50',\n              backdropFilter: 'saturate(180%) blur(6px)',\n              border: '1px solid rgba(255,255,255,0.35)',\n              boxShadow: '0 10px 30px rgba(0,0,0,0.15)',\n              zIndex: 2,\n              pointerEvents: 'auto',\n              transition: 'opacity .25s ease, transform .2s ease, background-color .2s ease, box-shadow .2s ease',\n              opacity: { xs: 1, sm: 0.6 },\n              '&:hover': {\n                bgcolor: 'rgba(255,255,255,0.3)',\n                transform: { xs: 'translate(20%, 0) scale(1.05)', sm: 'translateY(-50%) scale(1.05)' },\n                boxShadow: '0 14px 36px rgba(0,0,0,0.2)'\n              }\n            }}\n          >\n            <ArrowForwardIcon fontSize=\"medium\" sx={{ color: '#00b894' }} />\n          </IconButton>\n        )}\n        {/* Header with back button and timer */}\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n          <IconButton sx={{ \n            color: \"#00b894\", \n            bgcolor: 'rgba(0, 184, 148, 0.1)', \n            border: \"2px solid rgba(0, 184, 148, 0.2)\",\n            '&:hover': { \n              bgcolor: 'rgba(0, 184, 148, 0.2)',\n              transform: 'scale(1.05)'\n            },\n            transition: 'all 0.3s ease'\n          }} onClick={() => navigate('/questions')}>\n            <ArrowBackIcon />\n          </IconButton>\n          <Box sx={{ flex: 1 }} />\n          <Typography sx={{ \n            fontWeight: 600, \n            fontSize: 16, \n            color: '#00b894', \n            bgcolor: 'rgba(0, 184, 148, 0.1)', \n            px: 2, \n            py: 1,\n            borderRadius: 3,\n            border: \"1px solid rgba(0, 184, 148, 0.2)\"\n          }}>\n            {Math.floor(time / 60)}:{(time % 60).toString().padStart(2, '0')}\n          </Typography>\n        </Box>\n\n        {/* Title above progress bar */}\n        <Typography variant=\"h5\" sx={{ \n          fontWeight: 700, \n          textAlign: \"center\", \n          color: \"#2c3e50\",\n          fontSize: { xs: 20, sm: 24 },\n          mb: 2,\n          textShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n        }}>\n          BOŞLUK DOLDURMA OYUNU\n        </Typography>\n\n        {/* Progress Bar */}\n        <LinearProgress\n          variant=\"determinate\"\n          value={((currentIndex + 1) / questions.length) * 100}\n          sx={{\n            height: 12,\n            borderRadius: 6,\n            mb: 2,\n            mt: 1,\n            bgcolor: \"rgba(0, 184, 148, 0.1)\",\n            border: \"1px solid rgba(0, 184, 148, 0.2)\",\n            '& .MuiLinearProgress-bar': {\n              background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)',\n              borderRadius: 6,\n              boxShadow: '0 2px 8px rgba(0, 184, 148, 0.3)',\n              transition: 'all 0.3s ease',\n            },\n          }}\n        />\n\n        {/* Question Counter */}\n        <Typography variant=\"h6\" sx={{ \n          fontWeight: 600, \n          textAlign: \"center\", \n          color: \"#2c3e50\",\n          fontSize: { xs: 16, sm: 18 },\n          mb: 3,\n          p: 2,\n          bgcolor: 'rgba(0, 184, 148, 0.1)',\n          borderRadius: 3,\n          border: \"1px solid rgba(0, 184, 148, 0.2)\"\n        }}>\n          Soru {currentIndex + 1} / {questions.length}\n        </Typography>\n\n        {/* Text with blanks */}\n        <Box sx={{ p: 3, mb: 3, backgroundColor: 'rgba(0, 184, 148, 0.1)', borderRadius: 3, border: \"1px solid rgba(0, 184, 148, 0.2)\" }}>\n          <Box sx={{ \n            fontSize: '1.2rem', \n            lineHeight: 2.5, \n            textAlign: 'justify',\n            wordSpacing: '0.1em',\n            letterSpacing: '0.02em'\n          }}>\n            {renderTextWithBlanks()}\n          </Box>\n        </Box>\n\n        {/* Available Options */}\n        <Box \n          sx={{ p: 3, mb: 3, backgroundColor: 'rgba(116, 185, 255, 0.1)', borderRadius: 3, border: \"1px solid rgba(116, 185, 255, 0.2)\" }}\n          onDragOver={handleDragOver}\n          onDrop={handleDropToOptions}\n        >\n          <Typography variant=\"h6\" gutterBottom sx={{ color: \"#2c3e50\", fontWeight: 600 }}>\n            Seçenekler:\n          </Typography>\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n            {availableOptions.map((option, index) => (\n              <Box\n                key={`option-${index}`}\n                draggable={!isSubmitted}\n                onDragStart={(e) => handleDragStart(e, option)}\n                onClick={() => handleOptionClick(option)}\n                sx={{\n                  padding: '8px 16px',\n                  background: 'linear-gradient(135deg, #74b9ff 0%, #0984e3 100%)',\n                  color: '#fff',\n                  borderRadius: 1,\n                  cursor: isSubmitted ? 'default' : 'pointer',\n                  userSelect: 'none',\n                  opacity: isSubmitted ? 0.6 : 1,\n                  transition: 'all 0.3s ease',\n                  boxShadow: '0 4px 12px rgba(116, 185, 255, 0.3)',\n                  outline: selectedOption === option ? '3px solid rgba(0, 184, 148, 0.6)' : 'none',\n                  '&:hover': {\n                    transform: !isSubmitted ? 'translateY(-2px)' : undefined,\n                    boxShadow: !isSubmitted ? '0 6px 16px rgba(116, 185, 255, 0.4)' : undefined,\n                  },\n                  '&:active': {\n                    cursor: !isSubmitted ? 'grabbing' : 'default',\n                  }\n                }}\n              >\n                <Typography variant=\"body1\" fontWeight={600}>\n                  {option}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </Box>\n\n        {showResults && (\n          <Box sx={{ \n            p: 3, \n            mb: 3, \n            backgroundColor: score === currentQuestion.correctAnswers.length ? '#e6ffe6' : '#fff3cd',\n            border: `2px solid ${score === currentQuestion.correctAnswers.length ? '#43ea7c' : '#ffc107'}`,\n            borderRadius: 3,\n            textAlign: 'center'\n          }}>\n            <Typography variant=\"h6\" sx={{ \n              color: score === currentQuestion.correctAnswers.length ? '#43ea7c' : '#856404',\n              fontWeight: 600,\n              mb: 2\n            }}>\n              Sonuç: {score}/{currentQuestion.correctAnswers.length} doğru\n            </Typography>\n            {currentQuestion.correctAnswers.slice(0, currentBlankCount).map((correct, index) => (\n              <Typography key={index} variant=\"body2\" sx={{ mt: 1, color: '#2c3e50' }}>\n                Boşluk {index + 1}: <strong>{correct}</strong>\n                {userAnswers[index] !== correct && userAnswers[index] && \n                  ` (Siz: ${userAnswers[index]})`\n                }\n              </Typography>\n            ))}\n            <Typography variant=\"body2\" sx={{ mt: 2, fontStyle: 'italic', color: '#666' }}>\n              {currentQuestion.explanation}\n            </Typography>\n          </Box>\n        )}\n\n        {/* While solving: show Önceki - Kontrol Et - Sonraki on one row */}\n        {!isSubmitted && (\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', gap: 1.5, mt: 3, width: '100%' }}>\n            {/* Prev */}\n            <button\n              style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.97) 0%, rgba(255,255,255,0.92) 100%)',\n                color: currentIndex === 0 ? '#b0b0b0' : '#00b894',\n                fontWeight: 700,\n                fontSize: 15,\n                border: `2px solid ${currentIndex === 0 ? '#e0e0e0' : 'rgba(0, 184, 148, 0.4)'}`,\n                borderRadius: 12,\n                padding: '10px 12px',\n                cursor: currentIndex === 0 ? 'not-allowed' : 'pointer',\n                minWidth: 0,\n                flex: '1 1 0',\n                boxShadow: '0 4px 10px rgba(0,0,0,0.05)'\n              }}\n              onClick={prevQuestion}\n              disabled={currentIndex === 0}\n            >\n              ← Önceki\n            </button>\n\n            {/* Kontrol Et */}\n            {(() => {\n              const hasBlank = (userAnswers.length < currentBlankCount) || userAnswers.slice(0, currentBlankCount).some(a => a === null);\n              const Btn = (\n                <button\n                  style={{\n                    background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n                    color: '#fff',\n                    fontWeight: 800,\n                    fontSize: 16,\n                    border: 'none',\n                    borderRadius: 12,\n                    padding: '12px 18px',\n                    cursor: hasBlank ? 'not-allowed' : 'pointer',\n                    boxShadow: '0 6px 16px rgba(0, 184, 148, 0.35)',\n                    opacity: hasBlank ? 0.7 : 1,\n                    transition: 'all 0.3s ease',\n                    flex: '1.2 1 0',\n                    minWidth: 0\n                  }}\n                  onClick={() => { if (!hasBlank) handleSubmit(); }}\n                  disabled={hasBlank}\n                >\n                  Kontrol Et\n                </button>\n              );\n              return (\n                <Tooltip title={hasBlank ? 'Bütün boşlukları doldurmalısınız' : ''} arrow placement=\"top\" disableHoverListener={!hasBlank}>\n                  <span style={{ display: 'inline-flex' }}>{Btn}</span>\n                </Tooltip>\n              );\n            })()}\n\n            {/* Next */}\n            <button\n              style={{\n                background: 'linear-gradient(135deg, rgba(255,255,255,0.97) 0%, rgba(255,255,255,0.92) 100%)',\n                color: currentIndex >= questions.length - 1 ? '#b0b0b0' : '#00b894',\n                fontWeight: 700,\n                fontSize: 15,\n                border: `2px solid ${currentIndex >= questions.length - 1 ? '#e0e0e0' : 'rgba(0, 184, 148, 0.4)'}`,\n                borderRadius: 12,\n                padding: '10px 12px',\n                cursor: currentIndex >= questions.length - 1 ? 'not-allowed' : 'pointer',\n                minWidth: 0,\n                flex: '1 1 0',\n                boxShadow: '0 4px 10px rgba(0,0,0,0.05)'\n              }}\n              onClick={nextQuestion}\n              disabled={currentIndex >= questions.length - 1}\n            >\n              Sonraki →\n            </button>\n          </Box>\n        )}\n\n        {/* After submission: fallback Next/Kapat button (also auto-advances) */}\n        {isSubmitted && (\n          <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', mt: 3 }}>\n            <button\n              style={{\n                background: 'linear-gradient(135deg, #74b9ff 0%, #0984e3 100%)',\n                color: '#fff',\n                fontWeight: 700,\n                fontSize: 16,\n                border: 'none',\n                borderRadius: 12,\n                padding: '12px 24px',\n                cursor: 'pointer',\n                minWidth: 120,\n                boxShadow: '0 4px 12px rgba(116, 185, 255, 0.3)',\n                transition: 'all 0.3s ease',\n              }}\n              onClick={() => {\n                if (currentIndex < questions.length - 1) nextQuestion();\n                else navigate('/questions');\n              }}\n            >\n              {currentIndex < questions.length - 1 ? 'Sonraki →' : 'Kapat'}\n            </button>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default FillInTheBlanksGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}