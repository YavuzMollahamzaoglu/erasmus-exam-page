{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/WordMatchingGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Paper, Typography, Button, Alert, Fade } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Words will come from backend (MySQL via Prisma)\n\nconst formatTime = secs => {\n  const m = Math.floor(secs / 60).toString().padStart(2, '0');\n  const s = (secs % 60).toString().padStart(2, '0');\n  return `${m}:${s}`;\n};\nconst shuffle = arr => {\n  const a = [...arr];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\nexport default function WordMatchingGame() {\n  _s();\n  var _sets$find;\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const level = (searchParams.get('level') || 'a1').toUpperCase();\n  const setId = searchParams.get('setId');\n  const [sets, setSets] = useState([]);\n  const GAME_WORD_COUNT = 15; // each game will have 15 words\n\n  const [pool, setPool] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [matched, setMatched] = useState(0);\n  const [selectedWordId, setSelectedWordId] = useState(null); // tap support\n  const [elapsed, setElapsed] = useState(0); // stopwatch seconds (hidden while playing)\n  const [playing, setPlaying] = useState(true);\n  const [gameCompleted, setGameCompleted] = useState(false);\n  const [wrongMsg, setWrongMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  // Prepare game by fetching: if setId is provided, use that set; otherwise choose 15 random from words API\n  const initGame = async () => {\n    try {\n      let pairs = [];\n      if (setId) {\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets/${setId}`, {\n          cache: 'no-store'\n        });\n        const data = await res.json();\n        const items = Array.isArray(data === null || data === void 0 ? void 0 : data.items) ? data.items : [];\n        pairs = items.slice(0, GAME_WORD_COUNT).map((w, idx) => ({\n          id: idx + 1,\n          english: w.english,\n          turkish: w.turkish\n        }));\n      } else {\n        const apiLevel = ['A1', 'A2', 'B1', 'B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/words?level=${apiLevel}&limit=200`, {\n          cache: 'no-store'\n        });\n        const data = await res.json();\n        const raw = Array.isArray(data === null || data === void 0 ? void 0 : data.words) ? data.words : [];\n        const chosen = shuffle(raw).slice(0, GAME_WORD_COUNT);\n        pairs = chosen.map((w, idx) => ({\n          id: idx + 1,\n          english: w.english,\n          turkish: w.turkish\n        }));\n      }\n      const newPool = shuffle(pairs.map(p => ({\n        id: p.id,\n        text: p.english,\n        used: false\n      })));\n      const newTargets = pairs.map(p => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    } catch (e) {\n      // Fallback: basic static list if API is unreachable\n      const fallback = [{\n        id: 1,\n        turkish: 'merhaba',\n        english: 'hello'\n      }, {\n        id: 2,\n        turkish: 'dünya',\n        english: 'world'\n      }, {\n        id: 3,\n        turkish: 'aile',\n        english: 'family'\n      }, {\n        id: 4,\n        turkish: 'okul',\n        english: 'school'\n      }, {\n        id: 5,\n        turkish: 'kitap',\n        english: 'book'\n      }, {\n        id: 6,\n        turkish: 'su',\n        english: 'water'\n      }, {\n        id: 7,\n        turkish: 'ev',\n        english: 'house'\n      }, {\n        id: 8,\n        turkish: 'araba',\n        english: 'car'\n      }, {\n        id: 9,\n        turkish: 'yemek',\n        english: 'food'\n      }, {\n        id: 10,\n        turkish: 'zaman',\n        english: 'time'\n      }, {\n        id: 11,\n        turkish: 'para',\n        english: 'money'\n      }, {\n        id: 12,\n        turkish: 'çalışma',\n        english: 'work'\n      }, {\n        id: 13,\n        turkish: 'oyun',\n        english: 'game'\n      }, {\n        id: 14,\n        turkish: 'müzik',\n        english: 'music'\n      }];\n      const pairs = shuffle(fallback).slice(0, GAME_WORD_COUNT).map((p, i) => ({\n        ...p,\n        id: i + 1\n      }));\n      const newPool = shuffle(pairs.map(p => ({\n        id: p.id,\n        text: p.english,\n        used: false\n      })));\n      const newTargets = pairs.map(p => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    }\n  };\n\n  // Load game whenever level or setId changes\n  useEffect(() => {\n    initGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [level, setId]);\n\n  // Fetch available sets for arrows\n  useEffect(() => {\n    const loadSets = async () => {\n      try {\n        const apiLevel = ['A1', 'A2', 'B1', 'B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets?level=${apiLevel}`, {\n          cache: 'no-store'\n        });\n        const data = await res.json();\n        const list = Array.isArray(data === null || data === void 0 ? void 0 : data.sets) ? data.sets.map(s => ({\n          id: s.id,\n          title: s.title\n        })) : [];\n        setSets(list);\n      } catch {}\n    };\n    loadSets();\n  }, [level]);\n\n  // Stopwatch (hidden while playing)\n  useEffect(() => {\n    if (!playing || gameCompleted) return;\n    const t = setInterval(() => setElapsed(c => c + 1), 1000);\n    return () => clearInterval(t);\n  }, [playing, gameCompleted]);\n\n  // Drag handlers\n  const onDragStart = (e, wordId) => {\n    if (!playing) return;\n    e.dataTransfer.setData('text/plain', String(wordId));\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const onDragOver = e => {\n    if (!playing) return;\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const tryMatch = (targetId, wordId) => {\n    var _targets$find, _pool$find;\n    if (!playing) return;\n    if ((_targets$find = targets.find(t => t.id === targetId)) !== null && _targets$find !== void 0 && _targets$find.matched) return;\n    if ((_pool$find = pool.find(p => p.id === wordId)) !== null && _pool$find !== void 0 && _pool$find.used) return;\n    if (targetId === wordId) {\n      // success\n      setTargets(prev => prev.map(t => t.id === targetId ? {\n        ...t,\n        matched: true\n      } : t));\n      setPool(prev => prev.map(w => w.id === wordId ? {\n        ...w,\n        used: true\n      } : w));\n      setMatched(m => m + 1);\n      setSelectedWordId(null);\n      setSuccessMsg(true);\n      setTimeout(() => setSuccessMsg(false), 800);\n    } else {\n      // wrong\n      setTargets(prev => prev.map(t => t.id === targetId ? {\n        ...t,\n        wrongFlash: true\n      } : t));\n      setWrongMsg(true);\n      setTimeout(() => {\n        setWrongMsg(false);\n        setTargets(prev => prev.map(t => ({\n          ...t,\n          wrongFlash: false\n        })));\n      }, 650);\n    }\n  };\n  const onDrop = (e, targetId) => {\n    if (!playing) return;\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const wordId = Number(data);\n    if (!Number.isFinite(wordId)) return;\n    tryMatch(targetId, wordId);\n  };\n\n  // Tap/click support\n  const handleWordClick = wordId => {\n    if (!playing) return;\n    const word = pool.find(w => w.id === wordId);\n    if (!word || word.used) return;\n    setSelectedWordId(prev => prev === wordId ? null : wordId);\n  };\n  const handleTargetClick = targetId => {\n    if (!playing) return;\n    if (selectedWordId == null) return;\n    tryMatch(targetId, selectedWordId);\n  };\n\n  // Complete detection\n  useEffect(() => {\n    if (targets.length > 0 && matched === targets.length) {\n      setPlaying(false);\n      setGameCompleted(true);\n    }\n  }, [matched, targets.length]);\n  const reset = () => initGame();\n  const handleNewWords = () => {\n    if (setId && sets.length > 1) {\n      // pick a different random set\n      const others = sets.filter(s => s.id !== setId);\n      const next = others[Math.floor(Math.random() * others.length)];\n      navigate(`/kelime-eslestirme-game?level=${level.toLowerCase()}&setId=${next.id}`);\n    } else {\n      // no set: re-fetch and sample a new random 15\n      reset();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: '#b2dfdb',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      pb: {\n        xs: 12,\n        md: 16\n      },\n      pt: 0,\n      px: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      sx: {\n        p: 0,\n        borderRadius: 4,\n        minWidth: 340,\n        width: '100%',\n        maxWidth: 1000,\n        mt: {\n          xs: 1,\n          md: '15px'\n        },\n        background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)',\n        backdropFilter: 'blur(10px)',\n        border: '1px solid rgba(255, 255, 255, 0.2)',\n        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n          color: '#fff',\n          p: {\n            xs: 3,\n            md: 4\n          },\n          borderTopLeftRadius: 'inherit',\n          borderTopRightRadius: 'inherit',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 30\n          }, this),\n          onClick: () => navigate('/kelime-eslestirme'),\n          sx: {\n            color: '#fff',\n            fontWeight: 600\n          },\n          children: \"Geri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            fontWeight: 700,\n            mb: 1,\n            children: \"Kelime E\\u015Fle\\u015Ftirme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              opacity: 0.9\n            },\n            children: [\"Seviye: \", level]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 0.5\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 32\n            }, this),\n            onClick: handleNewWords,\n            sx: {\n              color: '#fff',\n              fontWeight: 600\n            },\n            children: \"Yeni Kelimeler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          pt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"#00695c\",\n            fontWeight: 600,\n            children: [\"\\u0130lerleme: \", matched, \"/\", targets.length || GAME_WORD_COUNT]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), setId && sets.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"#00695c\",\n            sx: {\n              opacity: 0.8\n            },\n            children: [\"Set: \", ((_sets$find = sets.find(s => s.id === setId)) === null || _sets$find === void 0 ? void 0 : _sets$find.title) || '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          px: 3\n        },\n        children: [wrongMsg && /*#__PURE__*/_jsxDEV(Fade, {\n          in: wrongMsg,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 45\n            }, this),\n            sx: {\n              mb: 2,\n              borderRadius: 2\n            },\n            children: \"Yanl\\u0131\\u015F e\\u015Fle\\u015Fme! Tekrar deneyin.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), successMsg && /*#__PURE__*/_jsxDEV(Fade, {\n          in: successMsg,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 47\n            }, this),\n            sx: {\n              mb: 2,\n              borderRadius: 2\n            },\n            children: \"Do\\u011Fru! Devam.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), gameCompleted && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 45\n          }, this),\n          sx: {\n            mb: 3,\n            borderRadius: 2,\n            fontSize: 16\n          },\n          children: [\"Tebrikler! T\\xFCm e\\u015Fle\\u015Fmeler tamamland\\u0131. S\\xFCreniz: \", formatTime(elapsed)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          px: 3,\n          pb: 1\n        },\n        children: (() => {\n          const half = Math.ceil(pool.length / 2);\n          const rows = [pool.slice(0, half), pool.slice(half)];\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: rows.map((row, idx) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'grid',\n                gridAutoFlow: 'column',\n                gridAutoColumns: '1fr',\n                gap: 1.5,\n                overflowX: {\n                  xs: 'auto',\n                  md: 'visible'\n                },\n                pb: 1\n              },\n              children: row.map(w => /*#__PURE__*/_jsxDEV(Box, {\n                draggable: !w.used && playing,\n                onDragStart: e => onDragStart(e, w.id),\n                onClick: () => handleWordClick(w.id),\n                sx: {\n                  userSelect: 'none',\n                  cursor: w.used || !playing ? 'default' : 'grab',\n                  opacity: w.used ? 0.35 : 1,\n                  borderRadius: 2,\n                  p: 1.2,\n                  textAlign: 'center',\n                  color: '#fff',\n                  fontWeight: 700,\n                  fontSize: {\n                    xs: 12,\n                    sm: 14\n                  },\n                  boxShadow: '0 1px 4px rgba(0,0,0,0.12)',\n                  outline: selectedWordId === w.id ? '3px solid rgba(0, 184, 148, 0.9)' : 'none',\n                  background: `linear-gradient(135deg, ${['#42a5f5', '#ffca28', '#ab47bc', '#26a69a', '#ef5350', '#8d6e63', '#66bb6a'][w.id % 7]} 0%, rgba(255,255,255,0.15) 100%)`,\n                  transition: 'transform .15s ease',\n                  '&:active': {\n                    transform: 'scale(0.98)'\n                  },\n                  minWidth: 88\n                },\n                children: w.text\n              }, w.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 23\n              }, this))\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this))\n          }, void 0, false);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          pt: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridTemplateColumns: {\n              xs: 'repeat(2, 1fr)',\n              sm: 'repeat(3, 1fr)',\n              md: 'repeat(5, 1fr)'\n            },\n            gap: 2\n          },\n          children: targets.map(t => /*#__PURE__*/_jsxDEV(Box, {\n            onDragOver: onDragOver,\n            onDrop: e => onDrop(e, t.id),\n            onClick: () => handleTargetClick(t.id),\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '100%',\n                height: 54,\n                borderRadius: 2,\n                border: t.matched ? '2px solid #4CAF50' : t.wrongFlash ? '2px solid #ef5350' : selectedWordId != null ? '2px dashed #00b894' : '2px dashed rgba(0,0,0,0.25)',\n                background: t.matched ? 'linear-gradient(135deg, #4CAF50 0%, #66BB6A 100%)' : 'rgba(0,0,0,0.03)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: t.matched ? '#fff' : 'inherit',\n                fontWeight: 700,\n                textTransform: 'uppercase',\n                letterSpacing: 0.4,\n                transition: 'all .15s ease'\n              },\n              children: t.matched ? t.english : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontWeight: 700,\n                color: '#37474F',\n                textAlign: 'center'\n              },\n              children: t.turkish\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 2,\n          mt: 1.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => navigate('/kelime-eslestirme'),\n          sx: {\n            borderColor: '#00b894',\n            color: '#00695c',\n            fontWeight: 600,\n            borderRadius: 2,\n            px: 3,\n            mb: '15px',\n            '&:hover': {\n              borderColor: '#00cec9',\n              backgroundColor: 'rgba(0, 184, 148, 0.04)'\n            }\n          },\n          children: \"Seviye De\\u011Fi\\u015Ftir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), gameCompleted && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: reset,\n          sx: {\n            background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)',\n            color: '#fff',\n            fontWeight: 600,\n            borderRadius: 2,\n            px: 3,\n            '&:hover': {\n              background: 'linear-gradient(90deg, #00cec9 0%, #00b894 100%)'\n            }\n          },\n          children: \"Tekrar Oyna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 0.5,\n          mb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          \"aria-label\": \"Bitir ve Klasik Sorulara D\\xF6n\",\n          onClick: () => navigate('/questions'),\n          sx: {\n            textTransform: 'none',\n            fontWeight: 700,\n            borderRadius: 3,\n            px: 3,\n            py: 1.1,\n            background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n            color: '#fff',\n            boxShadow: '0 8px 20px rgba(0,0,0,0.08)',\n            '&:hover': {\n              background: 'linear-gradient(135deg, #00a085 0%, #00b8b3 100%)'\n            }\n          },\n          variant: \"contained\",\n          children: \"Bitir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n}\n_s(WordMatchingGame, \"HIveW0FSL/CbD2W0j57Cth9y2YQ=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = WordMatchingGame;\nvar _c;\n$RefreshReg$(_c, \"WordMatchingGame\");","map":{"version":3,"names":["React","useEffect","useState","Box","Paper","Typography","Button","Alert","Fade","ArrowBackIcon","RefreshIcon","CheckCircleIcon","ErrorIcon","useNavigate","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","formatTime","secs","m","Math","floor","toString","padStart","s","shuffle","arr","a","i","length","j","random","WordMatchingGame","_s","_sets$find","navigate","searchParams","level","get","toUpperCase","setId","sets","setSets","GAME_WORD_COUNT","pool","setPool","targets","setTargets","matched","setMatched","selectedWordId","setSelectedWordId","elapsed","setElapsed","playing","setPlaying","gameCompleted","setGameCompleted","wrongMsg","setWrongMsg","successMsg","setSuccessMsg","initGame","pairs","res","fetch","cache","data","json","items","Array","isArray","slice","map","w","idx","id","english","turkish","apiLevel","includes","raw","words","chosen","newPool","p","text","used","newTargets","wrongFlash","e","fallback","loadSets","list","title","t","setInterval","c","clearInterval","onDragStart","wordId","dataTransfer","setData","String","effectAllowed","onDragOver","preventDefault","dropEffect","tryMatch","targetId","_targets$find","_pool$find","find","prev","setTimeout","onDrop","getData","Number","isFinite","handleWordClick","word","handleTargetClick","reset","handleNewWords","others","filter","next","toLowerCase","sx","minHeight","background","display","flexDirection","alignItems","pb","xs","md","pt","px","children","elevation","borderRadius","minWidth","width","maxWidth","mt","backdropFilter","border","boxShadow","color","borderTopLeftRadius","borderTopRightRadius","justifyContent","position","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontWeight","textAlign","flex","variant","mb","opacity","gap","in","severity","icon","fontSize","half","ceil","rows","row","gridAutoFlow","gridAutoColumns","overflowX","draggable","userSelect","cursor","sm","outline","transition","transform","gridTemplateColumns","height","textTransform","letterSpacing","borderColor","backgroundColor","py","_c","$RefreshReg$"],"sources":["/Users/yavuz/Desktop/portfolio/erasmus-exam-page/frontend/src/pages/WordMatchingGame.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Paper, Typography, Button, Alert, Fade } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\ntype WordPair = {\n  id: number; // internal sequential id for matching\n  turkish: string;\n  english: string;\n};\n\ntype PoolWord = {\n  id: number; // pair id\n  text: string; // english\n  used: boolean;\n};\n\ntype Target = {\n  id: number; // pair id\n  turkish: string;\n  english: string; // reveal when matched\n  matched: boolean;\n  wrongFlash: boolean;\n};\n\n// Words will come from backend (MySQL via Prisma)\n\nconst formatTime = (secs: number) => {\n  const m = Math.floor(secs / 60)\n    .toString()\n    .padStart(2, '0');\n  const s = (secs % 60)\n    .toString()\n    .padStart(2, '0');\n  return `${m}:${s}`;\n};\n\nconst shuffle = <T,>(arr: T[]): T[] => {\n  const a = [...arr];\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\n\nexport default function WordMatchingGame() {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const level = (searchParams.get('level') || 'a1').toUpperCase();\n  const setId = searchParams.get('setId');\n  const [sets, setSets] = useState<Array<{ id: string; title: string }>>([]);\n\n  const GAME_WORD_COUNT = 15; // each game will have 15 words\n\n  const [pool, setPool] = useState<PoolWord[]>([]);\n  const [targets, setTargets] = useState<Target[]>([]);\n  const [matched, setMatched] = useState(0);\n  const [selectedWordId, setSelectedWordId] = useState<number | null>(null); // tap support\n  const [elapsed, setElapsed] = useState(0); // stopwatch seconds (hidden while playing)\n  const [playing, setPlaying] = useState(true);\n  const [gameCompleted, setGameCompleted] = useState(false);\n  const [wrongMsg, setWrongMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n\n  // Prepare game by fetching: if setId is provided, use that set; otherwise choose 15 random from words API\n  const initGame = async () => {\n    try {\n      let pairs: WordPair[] = [];\n      if (setId) {\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets/${setId}`, { cache: 'no-store' });\n        const data = await res.json();\n        const items: Array<{ english: string; turkish: string }> = Array.isArray(data?.items) ? data.items : [];\n        pairs = items.slice(0, GAME_WORD_COUNT).map((w, idx) => ({ id: idx + 1, english: w.english, turkish: w.turkish }));\n      } else {\n        const apiLevel = ['A1','A2','B1','B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/words?level=${apiLevel}&limit=200`, { cache: 'no-store' });\n        const data = await res.json();\n        const raw: Array<{ id: string; english: string; turkish: string }> = Array.isArray(data?.words) ? data.words : [];\n        const chosen = shuffle(raw).slice(0, GAME_WORD_COUNT);\n        pairs = chosen.map((w, idx) => ({ id: idx + 1, english: w.english, turkish: w.turkish }));\n      }\n\n      const newPool: PoolWord[] = shuffle(\n        pairs.map((p) => ({ id: p.id, text: p.english, used: false }))\n      );\n      const newTargets: Target[] = pairs.map((p) => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false,\n      }));\n\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    } catch (e) {\n      // Fallback: basic static list if API is unreachable\n      const fallback: WordPair[] = [\n        { id: 1, turkish: 'merhaba', english: 'hello' },\n        { id: 2, turkish: 'dünya', english: 'world' },\n        { id: 3, turkish: 'aile', english: 'family' },\n        { id: 4, turkish: 'okul', english: 'school' },\n        { id: 5, turkish: 'kitap', english: 'book' },\n        { id: 6, turkish: 'su', english: 'water' },\n        { id: 7, turkish: 'ev', english: 'house' },\n        { id: 8, turkish: 'araba', english: 'car' },\n        { id: 9, turkish: 'yemek', english: 'food' },\n        { id: 10, turkish: 'zaman', english: 'time' },\n        { id: 11, turkish: 'para', english: 'money' },\n        { id: 12, turkish: 'çalışma', english: 'work' },\n        { id: 13, turkish: 'oyun', english: 'game' },\n        { id: 14, turkish: 'müzik', english: 'music' },\n      ];\n      const pairs = shuffle(fallback).slice(0, GAME_WORD_COUNT).map((p, i) => ({ ...p, id: i + 1 }));\n      const newPool: PoolWord[] = shuffle(\n        pairs.map((p) => ({ id: p.id, text: p.english, used: false }))\n      );\n      const newTargets: Target[] = pairs.map((p) => ({\n        id: p.id,\n        turkish: p.turkish,\n        english: p.english,\n        matched: false,\n        wrongFlash: false,\n      }));\n      setPool(newPool);\n      setTargets(newTargets);\n      setMatched(0);\n      setSelectedWordId(null);\n      setElapsed(0);\n      setPlaying(true);\n      setGameCompleted(false);\n      setWrongMsg(false);\n      setSuccessMsg(false);\n    }\n  };\n\n  // Load game whenever level or setId changes\n  useEffect(() => {\n    initGame();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [level, setId]);\n\n  // Fetch available sets for arrows\n  useEffect(() => {\n    const loadSets = async () => {\n      try {\n        const apiLevel = ['A1','A2','B1','B2'].includes(level) ? level : 'A1';\n        const res = await fetch(`http://localhost:4000/api/games/word-matching/sets?level=${apiLevel}`, { cache: 'no-store' });\n        const data = await res.json();\n        const list: Array<{ id: string; title: string }> = Array.isArray(data?.sets) ? data.sets.map((s: any) => ({ id: s.id, title: s.title })) : [];\n        setSets(list);\n      } catch {}\n    };\n    loadSets();\n  }, [level]);\n\n  // Stopwatch (hidden while playing)\n  useEffect(() => {\n    if (!playing || gameCompleted) return;\n    const t = setInterval(() => setElapsed((c) => c + 1), 1000);\n    return () => clearInterval(t);\n  }, [playing, gameCompleted]);\n\n  // Drag handlers\n  const onDragStart = (\n    e: React.DragEvent<HTMLDivElement>,\n    wordId: number\n  ) => {\n    if (!playing) return;\n    e.dataTransfer.setData('text/plain', String(wordId));\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const onDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    if (!playing) return;\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const tryMatch = (targetId: number, wordId: number) => {\n    if (!playing) return;\n    if (targets.find((t) => t.id === targetId)?.matched) return;\n    if (pool.find((p) => p.id === wordId)?.used) return;\n\n    if (targetId === wordId) {\n      // success\n      setTargets((prev) =>\n        prev.map((t) => (t.id === targetId ? { ...t, matched: true } : t))\n      );\n      setPool((prev) => prev.map((w) => (w.id === wordId ? { ...w, used: true } : w)));\n      setMatched((m) => m + 1);\n      setSelectedWordId(null);\n      setSuccessMsg(true);\n      setTimeout(() => setSuccessMsg(false), 800);\n    } else {\n      // wrong\n      setTargets((prev) =>\n        prev.map((t) =>\n          t.id === targetId ? { ...t, wrongFlash: true } : t\n        )\n      );\n      setWrongMsg(true);\n      setTimeout(() => {\n        setWrongMsg(false);\n        setTargets((prev) => prev.map((t) => ({ ...t, wrongFlash: false })));\n      }, 650);\n    }\n  };\n\n  const onDrop = (\n    e: React.DragEvent<HTMLDivElement>,\n    targetId: number\n  ) => {\n    if (!playing) return;\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const wordId = Number(data);\n    if (!Number.isFinite(wordId)) return;\n    tryMatch(targetId, wordId);\n  };\n\n  // Tap/click support\n  const handleWordClick = (wordId: number) => {\n    if (!playing) return;\n    const word = pool.find((w) => w.id === wordId);\n    if (!word || word.used) return;\n    setSelectedWordId((prev) => (prev === wordId ? null : wordId));\n  };\n\n  const handleTargetClick = (targetId: number) => {\n    if (!playing) return;\n    if (selectedWordId == null) return;\n    tryMatch(targetId, selectedWordId);\n  };\n\n  // Complete detection\n  useEffect(() => {\n    if (targets.length > 0 && matched === targets.length) {\n      setPlaying(false);\n      setGameCompleted(true);\n    }\n  }, [matched, targets.length]);\n\n  const reset = () => initGame();\n\n  const handleNewWords = () => {\n    if (setId && sets.length > 1) {\n      // pick a different random set\n      const others = sets.filter((s) => s.id !== setId);\n      const next = others[Math.floor(Math.random() * others.length)];\n      navigate(`/kelime-eslestirme-game?level=${level.toLowerCase()}&setId=${next.id}`);\n    } else {\n      // no set: re-fetch and sample a new random 15\n      reset();\n    }\n  };\n\n  return (\n    <Box sx={{ minHeight: '100vh', background: '#b2dfdb', display: 'flex', flexDirection: 'column', alignItems: 'center', pb: { xs: 12, md: 16 }, pt: 0, px: 2 }}>\n      <Paper elevation={6} sx={{ p: 0, borderRadius: 4, minWidth: 340, width: '100%', maxWidth: 1000, mt: { xs: 1, md: '15px' }, background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%)', backdropFilter: 'blur(10px)', border: '1px solid rgba(255, 255, 255, 0.2)', boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)' }}>\n        {/* Header */}\n        <Box sx={{ background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)', color: '#fff', p: { xs: 3, md: 4 }, borderTopLeftRadius: 'inherit', borderTopRightRadius: 'inherit', display: 'flex', justifyContent: 'space-between', alignItems: 'center', position: 'relative' }}>\n          <Button startIcon={<ArrowBackIcon />} onClick={() => navigate('/kelime-eslestirme')} sx={{ color: '#fff', fontWeight: 600 }}>\n            Geri\n          </Button>\n          <Box sx={{ textAlign: 'center', flex: 1 }}>\n            <Typography variant=\"h5\" fontWeight={700} mb={1}>\n              Kelime Eşleştirme\n            </Typography>\n            <Typography variant=\"body2\" sx={{ opacity: 0.9 }}>\n              Seviye: {level}\n            </Typography>\n          </Box>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\n            <Button startIcon={<RefreshIcon />} onClick={handleNewWords} sx={{ color: '#fff', fontWeight: 600 }}>\n              Yeni Kelimeler\n            </Button>\n          </Box>\n        </Box>\n        {/* Simple progress text (no filling bar, no live time) */}\n        <Box sx={{ p: 3, pt: 2 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Typography variant=\"h6\" color=\"#00695c\" fontWeight={600}>\n              İlerleme: {matched}/{targets.length || GAME_WORD_COUNT}\n            </Typography>\n            {setId && sets.length > 0 && (\n              <Typography variant=\"body2\" color=\"#00695c\" sx={{ opacity: 0.8 }}>\n                Set: {sets.find((s) => s.id === setId)?.title || ''}\n              </Typography>\n            )}\n          </Box>\n        </Box>\n\n        {/* Alerts */}\n        <Box sx={{ px: 3 }}>\n          {wrongMsg && (\n            <Fade in={wrongMsg}>\n              <Alert severity=\"error\" icon={<ErrorIcon />} sx={{ mb: 2, borderRadius: 2 }}>\n                Yanlış eşleşme! Tekrar deneyin.\n              </Alert>\n            </Fade>\n          )}\n          {successMsg && (\n            <Fade in={successMsg}>\n              <Alert severity=\"success\" icon={<CheckCircleIcon />} sx={{ mb: 2, borderRadius: 2 }}>\n                Doğru! Devam.\n              </Alert>\n            </Fade>\n          )}\n          {gameCompleted && (\n            <Alert severity=\"success\" icon={<CheckCircleIcon />} sx={{ mb: 3, borderRadius: 2, fontSize: 16 }}>\n              Tebrikler! Tüm eşleşmeler tamamlandı. Süreniz: {formatTime(elapsed)}\n            </Alert>\n          )}\n        </Box>\n\n        {/* Top pool (English words) fixed to two rows) */}\n        <Box sx={{ px: 3, pb: 1 }}>\n          {(() => {\n            const half = Math.ceil(pool.length / 2);\n            const rows = [pool.slice(0, half), pool.slice(half)];\n            return (\n              <>\n                {rows.map((row, idx) => (\n                  <Box key={idx} sx={{ display: 'grid', gridAutoFlow: 'column', gridAutoColumns: '1fr', gap: 1.5, overflowX: { xs: 'auto', md: 'visible' }, pb: 1 }}>\n                    {row.map((w) => (\n                      <Box\n                        key={w.id}\n                        draggable={!w.used && playing}\n                        onDragStart={(e) => onDragStart(e, w.id)}\n                        onClick={() => handleWordClick(w.id)}\n                        sx={{\n                          userSelect: 'none',\n                          cursor: w.used || !playing ? 'default' : 'grab',\n                          opacity: w.used ? 0.35 : 1,\n                          borderRadius: 2,\n                          p: 1.2,\n                          textAlign: 'center',\n                          color: '#fff',\n                          fontWeight: 700,\n                          fontSize: { xs: 12, sm: 14 },\n                          boxShadow: '0 1px 4px rgba(0,0,0,0.12)',\n                          outline: selectedWordId === w.id ? '3px solid rgba(0, 184, 148, 0.9)' : 'none',\n                          background: `linear-gradient(135deg, ${['#42a5f5','#ffca28','#ab47bc','#26a69a','#ef5350','#8d6e63','#66bb6a'][w.id % 7]} 0%, rgba(255,255,255,0.15) 100%)`,\n                          transition: 'transform .15s ease',\n                          '&:active': { transform: 'scale(0.98)' },\n                          minWidth: 88,\n                        }}\n                      >\n                        {w.text}\n                      </Box>\n                    ))}\n                  </Box>\n                ))}\n              </>\n            );\n          })()}\n        </Box>\n\n        {/* Bottom targets (Turkish labels) - fixed 3x5 grid */}\n        <Box sx={{ p: 3, pt: 1 }}>\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: 'repeat(2, 1fr)', sm: 'repeat(3, 1fr)', md: 'repeat(5, 1fr)' }, gap: 2 }}>\n            {targets.map((t) => (\n              <Box key={t.id} onDragOver={onDragOver} onDrop={(e) => onDrop(e, t.id)} onClick={() => handleTargetClick(t.id)} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 1 }}>\n                <Box sx={{\n                  width: '100%',\n                  height: 54,\n                  borderRadius: 2,\n                  border: t.matched\n                    ? '2px solid #4CAF50'\n                    : t.wrongFlash\n                    ? '2px solid #ef5350'\n                    : selectedWordId != null\n                    ? '2px dashed #00b894'\n                    : '2px dashed rgba(0,0,0,0.25)',\n                  background: t.matched\n                    ? 'linear-gradient(135deg, #4CAF50 0%, #66BB6A 100%)'\n                    : 'rgba(0,0,0,0.03)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: t.matched ? '#fff' : 'inherit',\n                  fontWeight: 700,\n                  textTransform: 'uppercase',\n                  letterSpacing: 0.4,\n                  transition: 'all .15s ease',\n                }}>\n                  {t.matched ? t.english : ''}\n                </Box>\n                <Typography variant=\"body2\" sx={{ fontWeight: 700, color: '#37474F', textAlign: 'center' }}>\n                  {t.turkish}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </Box>\n          {/* Actions */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mt: 1.5 }}>\n            <Button variant=\"outlined\" onClick={() => navigate('/kelime-eslestirme')} sx={{ borderColor: '#00b894', color: '#00695c', fontWeight: 600, borderRadius: 2, px: 3, mb: '15px', '&:hover': { borderColor: '#00cec9', backgroundColor: 'rgba(0, 184, 148, 0.04)' } }}>\n              Seviye Değiştir\n            </Button>\n            {gameCompleted && (\n              <Button variant=\"contained\" onClick={reset} sx={{ background: 'linear-gradient(90deg, #00b894 0%, #00cec9 100%)', color: '#fff', fontWeight: 600, borderRadius: 2, px: 3, '&:hover': { background: 'linear-gradient(90deg, #00cec9 0%, #00b894 100%)' } }}>\n                Tekrar Oyna\n              </Button>\n            )}\n          </Box>\n          {/* Finish button below actions to go to classic questions */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 0.5, mb: 3 }}>\n            <Button\n              aria-label=\"Bitir ve Klasik Sorulara Dön\"\n              onClick={() => navigate('/questions')}\n              sx={{\n                textTransform: 'none',\n                fontWeight: 700,\n                borderRadius: 3,\n                px: 3,\n                py: 1.1,\n                background: 'linear-gradient(135deg, #00b894 0%, #00cec9 100%)',\n                color: '#fff',\n                boxShadow: '0 8px 20px rgba(0,0,0,0.08)',\n                '&:hover': { background: 'linear-gradient(135deg, #00a085 0%, #00b8b3 100%)' }\n              }}\n              variant=\"contained\"\n            >\n              Bitir\n            </Button>\n          </Box>\n      </Paper>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}