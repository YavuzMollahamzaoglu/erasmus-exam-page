{"ast":null,"code":"var _jsxFileName = \"/Users/yavuz/erasmus-exam-page/erasmus-exam-page/frontend/src/pages/games/FillInTheBlanksGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, Paper, Alert, IconButton } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FillInTheBlanksGame = () => {\n  _s();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [availableOptions, setAvailableOptions] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(0);\n  const [draggedItem, setDraggedItem] = useState(null);\n\n  // Backend'den soruları çek\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/api/games/fill-in-the-blanks/questions');\n        if (response.ok) {\n          const data = await response.json();\n          setQuestions(data);\n          if (data.length > 0) {\n            resetCurrentQuestion(data[0]);\n          }\n        } else {\n          console.error('Failed to fetch questions');\n          // Fallback to sample data if backend is not available\n          const sampleQuestions = [{\n            id: 'fill-1',\n            text: 'I __________ from Turkey. My name __________ John. She __________ a student. We __________ happy today. They __________ at home.',\n            options: ['am', 'is', 'are', 'was', 'were'],\n            correctAnswers: ['am', 'is', 'is', 'are', 'are'],\n            explanation: 'Bu soruda \"to be\" fiilinin doğru kullanımları test ediliyor.'\n          }];\n          setQuestions(sampleQuestions);\n          resetCurrentQuestion(sampleQuestions[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n        // Fallback to sample data\n        const sampleQuestions = [{\n          id: 'fill-1',\n          text: 'I __________ from Turkey. My name __________ John. She __________ a student. We __________ happy today. They __________ at home.',\n          options: ['am', 'is', 'are', 'was', 'were'],\n          correctAnswers: ['am', 'is', 'is', 'are', 'are'],\n          explanation: 'Bu soruda \"to be\" fiilinin doğru kullanımları test ediliyor.'\n        }];\n        setQuestions(sampleQuestions);\n        resetCurrentQuestion(sampleQuestions[0]);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const resetCurrentQuestion = question => {\n    setUserAnswers(Array(question.correctAnswers.length).fill(null));\n    setAvailableOptions([...question.options]);\n    setIsSubmitted(false);\n    setShowResults(false);\n  };\n  const currentQuestion = questions[currentIndex];\n  const handleDragStart = (e, option) => {\n    setDraggedItem(option);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDrop = (e, blankIndex) => {\n    e.preventDefault();\n    if (draggedItem && !isSubmitted) {\n      // Eğer bu boşlukta zaten bir cevap varsa, onu geri options'a ekle\n      if (userAnswers[blankIndex]) {\n        setAvailableOptions(prev => [...prev, userAnswers[blankIndex]]);\n      }\n\n      // Yeni cevabı ekle\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = draggedItem;\n      setUserAnswers(newAnswers);\n\n      // Kullanılan seçeneği available options'dan çıkar\n      setAvailableOptions(prev => prev.filter(option => option !== draggedItem));\n      setDraggedItem(null);\n    }\n  };\n  const handleRemoveAnswer = blankIndex => {\n    if (userAnswers[blankIndex] && !isSubmitted) {\n      setAvailableOptions(prev => [...prev, userAnswers[blankIndex]]);\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = null;\n      setUserAnswers(newAnswers);\n    }\n  };\n  const handleSubmit = () => {\n    setIsSubmitted(true);\n    let correctCount = 0;\n    currentQuestion.correctAnswers.forEach((correct, index) => {\n      if (userAnswers[index] === correct) {\n        correctCount++;\n      }\n    });\n    setScore(correctCount);\n    setShowResults(true);\n  };\n  const nextQuestion = () => {\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(prev => prev + 1);\n      resetCurrentQuestion(questions[currentIndex + 1]);\n    }\n  };\n  const prevQuestion = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(prev => prev - 1);\n      resetCurrentQuestion(questions[currentIndex - 1]);\n    }\n  };\n  const renderTextWithBlanks = () => {\n    if (!currentQuestion) return null;\n    const parts = currentQuestion.text.split('__________');\n    const result = [];\n    parts.forEach((part, index) => {\n      // Her text parçasını span ile sararak ekle\n      if (part.trim()) {\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline'\n          },\n          children: part\n        }, `text-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this));\n      }\n\n      // Son parça değilse boşluk ekle\n      if (index < parts.length - 1) {\n        const blankIndex = index;\n        const userAnswer = userAnswers[blankIndex];\n        const correctAnswer = currentQuestion.correctAnswers[blankIndex];\n        const isCorrect = isSubmitted && userAnswer === correctAnswer;\n        const isIncorrect = isSubmitted && userAnswer && userAnswer !== correctAnswer;\n        result.push(/*#__PURE__*/_jsxDEV(Box, {\n          onDragOver: handleDragOver,\n          onDrop: e => handleDrop(e, blankIndex),\n          onClick: () => handleRemoveAnswer(blankIndex),\n          sx: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minWidth: '120px',\n            height: '40px',\n            border: '2px dashed #ccc',\n            borderRadius: '8px',\n            margin: '0 4px',\n            padding: '4px 8px',\n            textAlign: 'center',\n            verticalAlign: 'baseline',\n            cursor: userAnswer && !isSubmitted ? 'pointer' : 'default',\n            backgroundColor: isSubmitted ? isCorrect ? '#e8f5e8' : isIncorrect ? '#ffeaea' : '#f5f5f5' : userAnswer ? '#e3f2fd' : '#f9f9f9',\n            borderColor: isSubmitted ? isCorrect ? '#4caf50' : isIncorrect ? '#f44336' : '#ccc' : userAnswer ? '#2196f3' : '#ccc',\n            transition: 'all 0.3s ease',\n            '&:hover': {\n              backgroundColor: !isSubmitted && userAnswer ? '#bbdefb' : undefined\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              fontWeight: userAnswer ? 600 : 400,\n              color: isSubmitted ? isCorrect ? '#2e7d32' : isIncorrect ? '#c62828' : '#666' : userAnswer ? '#1976d2' : '#999',\n              fontSize: '1rem'\n            },\n            children: userAnswer || index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, `blank-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'inline',\n        lineHeight: 2.5,\n        fontSize: '1.2rem'\n      },\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  };\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Bo\\u015Fluk Doldurma Oyunu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Sorular y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      p: 4,\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        position: 'absolute',\n        left: {\n          xs: 8,\n          md: 32\n        },\n        top: '50%',\n        transform: 'translateY(-50%)',\n        bgcolor: currentIndex > 0 ? '#e3eafc' : '#f7fafd',\n        color: '#19376D',\n        boxShadow: 2,\n        borderRadius: 2,\n        p: 2,\n        cursor: currentIndex > 0 ? 'pointer' : 'default',\n        opacity: currentIndex > 0 ? 1 : 0.5,\n        transition: 'all 0.2s',\n        '&:hover': {\n          bgcolor: currentIndex > 0 ? '#b6d4fa' : '#e3eafc'\n        }\n      },\n      onClick: prevQuestion,\n      disabled: currentIndex === 0,\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        position: 'absolute',\n        right: {\n          xs: 8,\n          md: 32\n        },\n        top: '50%',\n        transform: 'translateY(-50%)',\n        bgcolor: currentIndex < questions.length - 1 ? '#e3eafc' : '#f7fafd',\n        color: '#19376D',\n        boxShadow: 2,\n        borderRadius: 2,\n        p: 2,\n        cursor: currentIndex < questions.length - 1 ? 'pointer' : 'default',\n        opacity: currentIndex < questions.length - 1 ? 1 : 0.5,\n        transition: 'all 0.2s',\n        '&:hover': {\n          bgcolor: currentIndex < questions.length - 1 ? '#b6d4fa' : '#e3eafc'\n        }\n      },\n      onClick: nextQuestion,\n      disabled: currentIndex === questions.length - 1,\n      children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        maxWidth: 1000,\n        mx: 'auto',\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: \"Bo\\u015Fluk Doldurma Oyunu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"text.secondary\",\n          children: [\"Soru \", currentIndex + 1, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1\n          },\n          children: \"Kelimeleri s\\xFCr\\xFCkleyip bo\\u015Fluklara b\\u0131rak\\u0131n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          mb: 3,\n          backgroundColor: '#f8f9fa'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            fontSize: '1.2rem',\n            lineHeight: 2.5,\n            textAlign: 'justify',\n            wordSpacing: '0.1em',\n            letterSpacing: '0.02em'\n          },\n          children: renderTextWithBlanks()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          mb: 3,\n          backgroundColor: '#fff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: \"Se\\xE7enekler:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 2\n          },\n          children: availableOptions.map((option, index) => /*#__PURE__*/_jsxDEV(Box, {\n            draggable: !isSubmitted,\n            onDragStart: e => handleDragStart(e, option),\n            sx: {\n              padding: '8px 16px',\n              backgroundColor: '#e3f2fd',\n              border: '2px solid #2196f3',\n              borderRadius: '20px',\n              cursor: isSubmitted ? 'default' : 'grab',\n              userSelect: 'none',\n              opacity: isSubmitted ? 0.6 : 1,\n              transition: 'all 0.3s ease',\n              '&:hover': {\n                backgroundColor: !isSubmitted ? '#bbdefb' : undefined,\n                transform: !isSubmitted ? 'scale(1.05)' : undefined\n              },\n              '&:active': {\n                cursor: !isSubmitted ? 'grabbing' : 'default'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              fontWeight: 600,\n              color: \"primary\",\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, `option-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), showResults && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: score === currentQuestion.correctAnswers.length ? 'success' : 'warning',\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Sonu\\xE7: \", score, \"/\", currentQuestion.correctAnswers.length, \" do\\u011Fru\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), currentQuestion.correctAnswers.map((correct, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 1\n          },\n          children: [\"Bo\\u015Fluk \", index + 1, \": \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: correct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 37\n          }, this), userAnswers[index] !== correct && userAnswers[index] && ` (Siz: ${userAnswers[index]})`]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mt: 2,\n            fontStyle: 'italic'\n          },\n          children: currentQuestion.explanation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          justifyContent: 'center',\n          mt: 4\n        },\n        children: [!isSubmitted && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          onClick: handleSubmit,\n          disabled: userAnswers.some(answer => answer === null),\n          sx: {\n            minWidth: 120\n          },\n          children: \"Kontrol Et\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          size: \"large\",\n          onClick: () => navigate('/'),\n          sx: {\n            minWidth: 120\n          },\n          children: \"Ana Sayfa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(FillInTheBlanksGame, \"EAUDr0JOJFYiFLRsflGiOjW2mVI=\", false, function () {\n  return [useNavigate];\n});\n_c = FillInTheBlanksGame;\nexport default FillInTheBlanksGame;\nvar _c;\n$RefreshReg$(_c, \"FillInTheBlanksGame\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","Paper","Alert","IconButton","useNavigate","ArrowBackIcon","ArrowForwardIcon","jsxDEV","_jsxDEV","FillInTheBlanksGame","_s","navigate","questions","setQuestions","currentIndex","setCurrentIndex","userAnswers","setUserAnswers","availableOptions","setAvailableOptions","isSubmitted","setIsSubmitted","showResults","setShowResults","score","setScore","draggedItem","setDraggedItem","fetchQuestions","response","fetch","ok","data","json","length","resetCurrentQuestion","console","error","sampleQuestions","id","text","options","correctAnswers","explanation","question","Array","fill","currentQuestion","handleDragStart","e","option","dataTransfer","effectAllowed","handleDragOver","preventDefault","dropEffect","handleDrop","blankIndex","prev","newAnswers","filter","handleRemoveAnswer","handleSubmit","correctCount","forEach","correct","index","nextQuestion","prevQuestion","renderTextWithBlanks","parts","split","result","part","trim","push","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","userAnswer","correctAnswer","isCorrect","isIncorrect","onDragOver","onDrop","onClick","sx","alignItems","justifyContent","minWidth","height","border","borderRadius","margin","padding","textAlign","verticalAlign","cursor","backgroundColor","borderColor","transition","undefined","variant","fontWeight","color","fontSize","lineHeight","p","minHeight","background","position","left","xs","md","top","transform","bgcolor","boxShadow","opacity","disabled","right","maxWidth","mx","mb","gutterBottom","mt","wordSpacing","letterSpacing","flexWrap","gap","map","draggable","onDragStart","userSelect","severity","fontStyle","size","some","answer","_c","$RefreshReg$"],"sources":["/Users/yavuz/erasmus-exam-page/erasmus-exam-page/frontend/src/pages/games/FillInTheBlanksGame.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, Paper, Alert, IconButton } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n\ninterface FillInTheBlanksQuestion {\n  id: string;\n  text: string;\n  options: string[];\n  correctAnswers: string[];\n  explanation: string;\n}\n\nconst FillInTheBlanksGame: React.FC = () => {\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState<FillInTheBlanksQuestion[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<(string | null)[]>([]);\n  const [availableOptions, setAvailableOptions] = useState<string[]>([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [score, setScore] = useState(0);\n  const [draggedItem, setDraggedItem] = useState<string | null>(null);\n\n  // Backend'den soruları çek\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch('http://localhost:4000/api/games/fill-in-the-blanks/questions');\n        if (response.ok) {\n          const data = await response.json();\n          setQuestions(data);\n          if (data.length > 0) {\n            resetCurrentQuestion(data[0]);\n          }\n        } else {\n          console.error('Failed to fetch questions');\n          // Fallback to sample data if backend is not available\n          const sampleQuestions: FillInTheBlanksQuestion[] = [\n            {\n              id: 'fill-1',\n              text: 'I __________ from Turkey. My name __________ John. She __________ a student. We __________ happy today. They __________ at home.',\n              options: ['am', 'is', 'are', 'was', 'were'],\n              correctAnswers: ['am', 'is', 'is', 'are', 'are'],\n              explanation: 'Bu soruda \"to be\" fiilinin doğru kullanımları test ediliyor.'\n            }\n          ];\n          setQuestions(sampleQuestions);\n          resetCurrentQuestion(sampleQuestions[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n        // Fallback to sample data\n        const sampleQuestions: FillInTheBlanksQuestion[] = [\n          {\n            id: 'fill-1',\n            text: 'I __________ from Turkey. My name __________ John. She __________ a student. We __________ happy today. They __________ at home.',\n            options: ['am', 'is', 'are', 'was', 'were'],\n            correctAnswers: ['am', 'is', 'is', 'are', 'are'],\n            explanation: 'Bu soruda \"to be\" fiilinin doğru kullanımları test ediliyor.'\n          }\n        ];\n        setQuestions(sampleQuestions);\n        resetCurrentQuestion(sampleQuestions[0]);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n\n  const resetCurrentQuestion = (question: FillInTheBlanksQuestion) => {\n    setUserAnswers(Array(question.correctAnswers.length).fill(null));\n    setAvailableOptions([...question.options]);\n    setIsSubmitted(false);\n    setShowResults(false);\n  };\n\n  const currentQuestion = questions[currentIndex];\n\n  const handleDragStart = (e: React.DragEvent, option: string) => {\n    setDraggedItem(option);\n    e.dataTransfer.effectAllowed = 'move';\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const handleDrop = (e: React.DragEvent, blankIndex: number) => {\n    e.preventDefault();\n    if (draggedItem && !isSubmitted) {\n      // Eğer bu boşlukta zaten bir cevap varsa, onu geri options'a ekle\n      if (userAnswers[blankIndex]) {\n        setAvailableOptions(prev => [...prev, userAnswers[blankIndex] as string]);\n      }\n\n      // Yeni cevabı ekle\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = draggedItem;\n      setUserAnswers(newAnswers);\n\n      // Kullanılan seçeneği available options'dan çıkar\n      setAvailableOptions(prev => prev.filter(option => option !== draggedItem));\n      setDraggedItem(null);\n    }\n  };\n\n  const handleRemoveAnswer = (blankIndex: number) => {\n    if (userAnswers[blankIndex] && !isSubmitted) {\n      setAvailableOptions(prev => [...prev, userAnswers[blankIndex] as string]);\n      const newAnswers = [...userAnswers];\n      newAnswers[blankIndex] = null;\n      setUserAnswers(newAnswers);\n    }\n  };\n\n  const handleSubmit = () => {\n    setIsSubmitted(true);\n    let correctCount = 0;\n    currentQuestion.correctAnswers.forEach((correct, index) => {\n      if (userAnswers[index] === correct) {\n        correctCount++;\n      }\n    });\n    setScore(correctCount);\n    setShowResults(true);\n  };\n\n  const nextQuestion = () => {\n    if (currentIndex < questions.length - 1) {\n      setCurrentIndex(prev => prev + 1);\n      resetCurrentQuestion(questions[currentIndex + 1]);\n    }\n  };\n\n  const prevQuestion = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(prev => prev - 1);\n      resetCurrentQuestion(questions[currentIndex - 1]);\n    }\n  };\n\n  const renderTextWithBlanks = () => {\n    if (!currentQuestion) return null;\n\n    const parts = currentQuestion.text.split('__________');\n    const result: (string | React.ReactNode)[] = [];\n\n    parts.forEach((part, index) => {\n      // Her text parçasını span ile sararak ekle\n      if (part.trim()) {\n        result.push(\n          <span key={`text-${index}`} style={{ display: 'inline' }}>\n            {part}\n          </span>\n        );\n      }\n      \n      // Son parça değilse boşluk ekle\n      if (index < parts.length - 1) {\n        const blankIndex = index;\n        const userAnswer = userAnswers[blankIndex];\n        const correctAnswer = currentQuestion.correctAnswers[blankIndex];\n        const isCorrect = isSubmitted && userAnswer === correctAnswer;\n        const isIncorrect = isSubmitted && userAnswer && userAnswer !== correctAnswer;\n\n        result.push(\n          <Box\n            key={`blank-${index}`}\n            onDragOver={handleDragOver}\n            onDrop={(e) => handleDrop(e, blankIndex)}\n            onClick={() => handleRemoveAnswer(blankIndex)}\n            sx={{\n              display: 'inline-flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              minWidth: '120px',\n              height: '40px',\n              border: '2px dashed #ccc',\n              borderRadius: '8px',\n              margin: '0 4px',\n              padding: '4px 8px',\n              textAlign: 'center',\n              verticalAlign: 'baseline',\n              cursor: userAnswer && !isSubmitted ? 'pointer' : 'default',\n              backgroundColor: isSubmitted \n                ? (isCorrect ? '#e8f5e8' : isIncorrect ? '#ffeaea' : '#f5f5f5')\n                : userAnswer ? '#e3f2fd' : '#f9f9f9',\n              borderColor: isSubmitted \n                ? (isCorrect ? '#4caf50' : isIncorrect ? '#f44336' : '#ccc')\n                : userAnswer ? '#2196f3' : '#ccc',\n              transition: 'all 0.3s ease',\n              '&:hover': {\n                backgroundColor: !isSubmitted && userAnswer ? '#bbdefb' : undefined,\n              }\n            }}\n          >\n            <Typography \n              variant=\"body1\" \n              sx={{ \n                fontWeight: userAnswer ? 600 : 400,\n                color: isSubmitted \n                  ? (isCorrect ? '#2e7d32' : isIncorrect ? '#c62828' : '#666')\n                  : userAnswer ? '#1976d2' : '#999',\n                fontSize: '1rem'\n              }}\n            >\n              {userAnswer || (index + 1)}\n            </Typography>\n          </Box>\n        );\n      }\n    });\n\n    return (\n      <Box sx={{ \n        display: 'inline', \n        lineHeight: 2.5,\n        fontSize: '1.2rem'\n      }}>\n        {result}\n      </Box>\n    );\n  };\n\n  if (!currentQuestion) {\n    return (\n      <Box sx={{ p: 4, textAlign: 'center' }}>\n        <Typography variant=\"h5\">Boşluk Doldurma Oyunu</Typography>\n        <Typography>Sorular yükleniyor...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ \n      minHeight: '100vh', \n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      p: 4,\n      position: 'relative' \n    }}>\n      {/* Navigation Arrows */}\n      <IconButton\n        sx={{\n          position: 'absolute',\n          left: { xs: 8, md: 32 },\n          top: '50%',\n          transform: 'translateY(-50%)',\n          bgcolor: currentIndex > 0 ? '#e3eafc' : '#f7fafd',\n          color: '#19376D',\n          boxShadow: 2,\n          borderRadius: 2,\n          p: 2,\n          cursor: currentIndex > 0 ? 'pointer' : 'default',\n          opacity: currentIndex > 0 ? 1 : 0.5,\n          transition: 'all 0.2s',\n          '&:hover': {\n            bgcolor: currentIndex > 0 ? '#b6d4fa' : '#e3eafc',\n          },\n        }}\n        onClick={prevQuestion}\n        disabled={currentIndex === 0}\n      >\n        <ArrowBackIcon fontSize=\"large\" />\n      </IconButton>\n      \n      <IconButton\n        sx={{\n          position: 'absolute',\n          right: { xs: 8, md: 32 },\n          top: '50%',\n          transform: 'translateY(-50%)',\n          bgcolor: currentIndex < questions.length - 1 ? '#e3eafc' : '#f7fafd',\n          color: '#19376D',\n          boxShadow: 2,\n          borderRadius: 2,\n          p: 2,\n          cursor: currentIndex < questions.length - 1 ? 'pointer' : 'default',\n          opacity: currentIndex < questions.length - 1 ? 1 : 0.5,\n          transition: 'all 0.2s',\n          '&:hover': {\n            bgcolor: currentIndex < questions.length - 1 ? '#b6d4fa' : '#e3eafc',\n          },\n        }}\n        onClick={nextQuestion}\n        disabled={currentIndex === questions.length - 1}\n      >\n        <ArrowForwardIcon fontSize=\"large\" />\n      </IconButton>\n\n      <Paper sx={{ maxWidth: 1000, mx: 'auto', p: 4 }}>\n        <Box sx={{ textAlign: 'center', mb: 4 }}>\n          <Typography variant=\"h4\" gutterBottom color=\"primary\">\n            Boşluk Doldurma Oyunu\n          </Typography>\n          <Typography variant=\"h6\" color=\"text.secondary\">\n            Soru {currentIndex + 1} / {questions.length}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n            Kelimeleri sürükleyip boşluklara bırakın\n          </Typography>\n        </Box>\n\n        <Paper sx={{ p: 3, mb: 3, backgroundColor: '#f8f9fa' }}>\n          <Box sx={{ \n            fontSize: '1.2rem', \n            lineHeight: 2.5, \n            textAlign: 'justify',\n            wordSpacing: '0.1em',\n            letterSpacing: '0.02em'\n          }}>\n            {renderTextWithBlanks()}\n          </Box>\n        </Paper>\n\n        {/* Available Options */}\n        <Paper sx={{ p: 3, mb: 3, backgroundColor: '#fff' }}>\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\n            Seçenekler:\n          </Typography>\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 2 }}>\n            {availableOptions.map((option, index) => (\n              <Box\n                key={`option-${index}`}\n                draggable={!isSubmitted}\n                onDragStart={(e) => handleDragStart(e, option)}\n                sx={{\n                  padding: '8px 16px',\n                  backgroundColor: '#e3f2fd',\n                  border: '2px solid #2196f3',\n                  borderRadius: '20px',\n                  cursor: isSubmitted ? 'default' : 'grab',\n                  userSelect: 'none',\n                  opacity: isSubmitted ? 0.6 : 1,\n                  transition: 'all 0.3s ease',\n                  '&:hover': {\n                    backgroundColor: !isSubmitted ? '#bbdefb' : undefined,\n                    transform: !isSubmitted ? 'scale(1.05)' : undefined,\n                  },\n                  '&:active': {\n                    cursor: !isSubmitted ? 'grabbing' : 'default',\n                  }\n                }}\n              >\n                <Typography variant=\"body1\" fontWeight={600} color=\"primary\">\n                  {option}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </Paper>\n\n        {showResults && (\n          <Alert severity={score === currentQuestion.correctAnswers.length ? 'success' : 'warning'} sx={{ mb: 3 }}>\n            <Typography variant=\"h6\">\n              Sonuç: {score}/{currentQuestion.correctAnswers.length} doğru\n            </Typography>\n            {currentQuestion.correctAnswers.map((correct, index) => (\n              <Typography key={index} variant=\"body2\" sx={{ mt: 1 }}>\n                Boşluk {index + 1}: <strong>{correct}</strong>\n                {userAnswers[index] !== correct && userAnswers[index] && \n                  ` (Siz: ${userAnswers[index]})`\n                }\n              </Typography>\n            ))}\n            <Typography variant=\"body2\" sx={{ mt: 2, fontStyle: 'italic' }}>\n              {currentQuestion.explanation}\n            </Typography>\n          </Alert>\n        )}\n\n        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', mt: 4 }}>\n          {!isSubmitted && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={handleSubmit}\n              disabled={userAnswers.some(answer => answer === null)}\n              sx={{ minWidth: 120 }}\n            >\n              Kontrol Et\n            </Button>\n          )}\n\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"large\"\n            onClick={() => navigate('/')}\n            sx={{ minWidth: 120 }}\n          >\n            Ana Sayfa\n          </Button>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default FillInTheBlanksGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}